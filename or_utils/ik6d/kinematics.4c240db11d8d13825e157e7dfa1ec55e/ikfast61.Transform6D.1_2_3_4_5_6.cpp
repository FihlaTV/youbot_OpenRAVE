/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-03-14 10:20:38.553162
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[3]);
x7=IKcos(j[5]);
x8=IKsin(j[5]);
x9=IKsin(j[4]);
x10=IKcos(j[4]);
x11=IKsin(j[0]);
x12=((IkReal(0.0950000000000000))*(x3));
x13=((IkReal(1.00000000000000))*(x5));
x14=((IkReal(1.00000000000000))*(x6));
x15=((IkReal(1.00000000000000))*(x0));
x16=((IkReal(0.0950000000000000))*(x1));
x17=((IkReal(0.135500000000000))*(x1));
x18=((IkReal(1.00000000000000))*(x3));
x19=((IkReal(0.135500000000000))*(x3));
x20=((IkReal(1.00000000000000))*(x1));
x21=((IkReal(0.158500000000000))*(x3));
x22=((IkReal(0.00400000000000000))*(x1));
x23=((x11)*(x4));
x24=((x3)*(x4));
x25=((x11)*(x2));
x26=((x0)*(x2));
x27=((x0)*(x4));
x28=((x2)*(x20));
x29=((x15)*(x24));
x30=((x18)*(x23));
x31=((((IkReal(-1.00000000000000))*(x28)))+(x24));
x32=((((x18)*(x2)))+(((x20)*(x4))));
x33=((IkReal(-1.00000000000000))*(x32));
x34=((((x1)*(x26)))+(((IkReal(-1.00000000000000))*(x29))));
x35=((((IkReal(-1.00000000000000))*(x30)))+(((x1)*(x25))));
x36=((((IkReal(-1.00000000000000))*(x1)*(x15)*(x2)))+(x29));
x37=((x30)+(((IkReal(-1.00000000000000))*(x20)*(x25))));
IkReal x48=((IkReal(1.00000000000000))*(x15));
x38=((((IkReal(-1.00000000000000))*(x2)*(x3)*(x48)))+(((IkReal(-1.00000000000000))*(x1)*(x4)*(x48))));
x39=((((IkReal(-1.00000000000000))*(x18)*(x25)))+(((IkReal(-1.00000000000000))*(x20)*(x23))));
x40=((x36)*(x6));
x41=((IkReal(1.00000000000000))*(x38));
x42=((x37)*(x6));
x43=((x39)*(x5));
x44=((((x31)*(x6)))+(((x33)*(x5))));
x45=((x10)*(x44));
x46=((x10)*(((((x35)*(x5)))+(((x39)*(x6))))));
x47=((((x10)*(((((x34)*(x5)))+(((x38)*(x6)))))))+(((x11)*(x9))));
eerot[0]=((((x8)*(((x40)+(((x38)*(x5)))))))+(((x47)*(x7))));
eerot[1]=((((x47)*(x8)))+(((x7)*(((((IkReal(-1.00000000000000))*(x14)*(x36)))+(((IkReal(-1.00000000000000))*(x13)*(x38))))))));
eerot[2]=((((x9)*(((((IkReal(-1.00000000000000))*(x14)*(x38)))+(((IkReal(-1.00000000000000))*(x13)*(x34)))))))+(((x10)*(x11))));
eetrans[0]=((IkReal(0.0240000000000000))+(((x6)*(((((IkReal(-1.00000000000000))*(x12)*(x27)))+(((x16)*(x26)))))))+(((x5)*(((((x16)*(x27)))+(((x12)*(x26)))))))+(((x0)*(x21)))+(((x19)*(x26)))+(((IkReal(-1.00000000000000))*(x0)*(x22)))+(((IkReal(0.0400000000000000))*(x0)))+(((x17)*(x27))));
eerot[3]=((((x7)*(((((IkReal(-1.00000000000000))*(x0)*(x9)))+(x46)))))+(((x8)*(((x42)+(x43))))));
eerot[4]=((((x7)*(((((IkReal(-1.00000000000000))*(x43)))+(((IkReal(-1.00000000000000))*(x42)))))))+(((x8)*(((x46)+(((IkReal(-1.00000000000000))*(x15)*(x9))))))));
eerot[5]=((((IkReal(-1.00000000000000))*(x10)*(x15)))+(((x9)*(((((IkReal(-1.00000000000000))*(x14)*(x39)))+(((IkReal(-1.00000000000000))*(x13)*(x35))))))));
eetrans[1]=((((x5)*(((((x16)*(x23)))+(((x12)*(x25)))))))+(((x19)*(x25)))+(((IkReal(-1.00000000000000))*(x11)*(x22)))+(((IkReal(0.0400000000000000))*(x11)))+(((x6)*(((((IkReal(-1.00000000000000))*(x12)*(x23)))+(((x16)*(x25)))))))+(((x11)*(x21)))+(((x17)*(x23))));
eerot[6]=((((x8)*(((((x31)*(x5)))+(((x32)*(x6)))))))+(((x45)*(x7))));
eerot[7]=((((x7)*(((((IkReal(-1.00000000000000))*(x14)*(x32)))+(((IkReal(-1.00000000000000))*(x13)*(x31)))))))+(((x45)*(x8))));
eerot[8]=((x9)*(((((IkReal(-1.00000000000000))*(x14)*(x31)))+(((IkReal(-1.00000000000000))*(x13)*(x33))))));
IkReal x49=((IkReal(1.00000000000000))*(x4));
eetrans[2]=((IkReal(0.116000000000000))+(((x6)*(((((IkReal(-1.00000000000000))*(x12)*(x2)))+(((IkReal(-1.00000000000000))*(x16)*(x49)))))))+(((IkReal(0.158500000000000))*(x1)))+(((x17)*(x2)))+(((IkReal(-1.00000000000000))*(x19)*(x49)))+(((IkReal(0.00400000000000000))*(x3)))+(((x5)*(((((x16)*(x2)))+(((IkReal(-1.00000000000000))*(x12)*(x49))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=((IkReal(-1.00000000000000))*(r01));
new_r02=((IkReal(-1.00000000000000))*(r02));
new_px=((IkReal(-0.0240000000000000))+(px));
new_r10=r10;
new_r11=((IkReal(-1.00000000000000))*(r11));
new_r12=((IkReal(-1.00000000000000))*(r12));
new_py=py;
new_r20=r20;
new_r21=((IkReal(-1.00000000000000))*(r21));
new_r22=((IkReal(-1.00000000000000))*(r22));
new_pz=((IkReal(-0.116000000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal IKFAST_ALIGNED16(matrixinvcoeffs[64]);
IkReal x50=((pp)*(r10));
IkReal x51=((IkReal(0.0950000000000000))*(r10));
IkReal x52=((pp)*(r11));
IkReal x53=((IkReal(0.0950000000000000))*(r11));
IkReal x54=((IkReal(2.00000000000000))*(npx));
IkReal x55=((pp)*(r01));
IkReal x56=((IkReal(1.00000000000000))*(pp));
IkReal x57=((IkReal(2.00000000000000))*(npy));
IkReal x58=((IkReal(-0.190000000000000))*(py));
IkReal x59=((px)*(x54));
IkReal x60=((py)*(x54));
IkReal x61=((px)*(x57));
IkReal x62=((py)*(x57));
matrixinvcoeffs[0]=((IkReal(0.0800000000000000))*(npx));
matrixinvcoeffs[1]=((IkReal(0.0800000000000000))*(rxp0_2));
matrixinvcoeffs[2]=((IkReal(0.190000000000000))*(npx));
matrixinvcoeffs[3]=IkReal(0);
matrixinvcoeffs[4]=IkReal(0);
matrixinvcoeffs[5]=((IkReal(-1.00000000000000))*(rxp0_2));
matrixinvcoeffs[6]=((IkReal(-0.0400000000000000))*(r20));
matrixinvcoeffs[7]=((((IkReal(0.00742500000000000))*(r20)))+(((IkReal(-1.00000000000000))*(r20)*(x56)))+(((pz)*(x54))));
matrixinvcoeffs[8]=((IkReal(0.0800000000000000))*(npy));
matrixinvcoeffs[9]=((IkReal(0.0800000000000000))*(rxp1_2));
matrixinvcoeffs[10]=((IkReal(0.190000000000000))*(npy));
matrixinvcoeffs[11]=IkReal(0);
matrixinvcoeffs[12]=IkReal(0);
matrixinvcoeffs[13]=((IkReal(-1.00000000000000))*(rxp1_2));
matrixinvcoeffs[14]=((IkReal(-0.0400000000000000))*(r21));
matrixinvcoeffs[15]=((((IkReal(0.00742500000000000))*(r21)))+(((IkReal(-1.00000000000000))*(r21)*(x56)))+(((pz)*(x57))));
matrixinvcoeffs[16]=x58;
matrixinvcoeffs[17]=((IkReal(0.190000000000000))*(px));
matrixinvcoeffs[18]=((IkReal(-0.0800000000000000))*(py));
matrixinvcoeffs[19]=py;
matrixinvcoeffs[20]=((IkReal(-1.00000000000000))*(px));
matrixinvcoeffs[21]=IkReal(0);
matrixinvcoeffs[22]=IkReal(0);
matrixinvcoeffs[23]=IkReal(0);
matrixinvcoeffs[24]=((x50)+(((IkReal(-1.00000000000000))*(x60)))+(((IkReal(-0.0106250000000000))*(r10))));
matrixinvcoeffs[25]=((((IkReal(-1.00000000000000))*(r00)*(x56)))+(x59)+(((IkReal(0.00742500000000000))*(r00))));
matrixinvcoeffs[26]=((IkReal(-0.00760000000000000))*(r10));
matrixinvcoeffs[27]=x51;
matrixinvcoeffs[28]=((IkReal(-0.0950000000000000))*(r00));
matrixinvcoeffs[29]=((IkReal(0.0400000000000000))*(r00));
matrixinvcoeffs[30]=((IkReal(-1.00000000000000))*(rxp0_0));
matrixinvcoeffs[31]=((IkReal(-0.0800000000000000))*(rxp0_0));
matrixinvcoeffs[32]=((x52)+(((IkReal(-1.00000000000000))*(x62)))+(((IkReal(-0.0106250000000000))*(r11))));
matrixinvcoeffs[33]=((x61)+(((IkReal(-1.00000000000000))*(x55)))+(((IkReal(0.00742500000000000))*(r01))));
matrixinvcoeffs[34]=((IkReal(-0.00760000000000000))*(r11));
matrixinvcoeffs[35]=x53;
matrixinvcoeffs[36]=((IkReal(-0.0950000000000000))*(r01));
matrixinvcoeffs[37]=((IkReal(0.0400000000000000))*(r01));
matrixinvcoeffs[38]=((IkReal(-1.00000000000000))*(rxp1_0));
matrixinvcoeffs[39]=((IkReal(-0.0800000000000000))*(rxp1_0));
matrixinvcoeffs[40]=((IkReal(-0.190000000000000))*(px));
matrixinvcoeffs[41]=x58;
matrixinvcoeffs[42]=((IkReal(-0.0800000000000000))*(px));
matrixinvcoeffs[43]=px;
matrixinvcoeffs[44]=py;
matrixinvcoeffs[45]=IkReal(0);
matrixinvcoeffs[46]=IkReal(0);
matrixinvcoeffs[47]=IkReal(0);
matrixinvcoeffs[48]=((((pp)*(r00)))+(((IkReal(-0.0106250000000000))*(r00)))+(((IkReal(-1.00000000000000))*(x59))));
matrixinvcoeffs[49]=((((IkReal(-0.00742500000000000))*(r10)))+(x50)+(((IkReal(-1.00000000000000))*(x60))));
matrixinvcoeffs[50]=((IkReal(-0.00760000000000000))*(r00));
matrixinvcoeffs[51]=((IkReal(0.0950000000000000))*(r00));
matrixinvcoeffs[52]=x51;
matrixinvcoeffs[53]=((IkReal(-0.0400000000000000))*(r10));
matrixinvcoeffs[54]=rxp0_1;
matrixinvcoeffs[55]=((IkReal(0.0800000000000000))*(rxp0_1));
matrixinvcoeffs[56]=((x55)+(((IkReal(-0.0106250000000000))*(r01)))+(((IkReal(-1.00000000000000))*(x61))));
matrixinvcoeffs[57]=((((IkReal(-0.00742500000000000))*(r11)))+(x52)+(((IkReal(-1.00000000000000))*(x62))));
matrixinvcoeffs[58]=((IkReal(-0.00760000000000000))*(r01));
matrixinvcoeffs[59]=((IkReal(0.0950000000000000))*(r01));
matrixinvcoeffs[60]=x53;
matrixinvcoeffs[61]=((IkReal(-0.0400000000000000))*(r11));
matrixinvcoeffs[62]=rxp1_1;
matrixinvcoeffs[63]=((IkReal(0.0800000000000000))*(rxp1_1));
if( !matrixinverse<8>(matrixinvcoeffs) ) {
continue;
}
IkReal gconst0_0=matrixinvcoeffs[0], gconst0_1=matrixinvcoeffs[8], gconst0_2=matrixinvcoeffs[16], gconst0_3=matrixinvcoeffs[24], gconst0_4=matrixinvcoeffs[32], gconst0_5=matrixinvcoeffs[40], gconst0_6=matrixinvcoeffs[48], gconst0_7=matrixinvcoeffs[56], gconst1_0=matrixinvcoeffs[1], gconst1_1=matrixinvcoeffs[9], gconst1_2=matrixinvcoeffs[17], gconst1_3=matrixinvcoeffs[25], gconst1_4=matrixinvcoeffs[33], gconst1_5=matrixinvcoeffs[41], gconst1_6=matrixinvcoeffs[49], gconst1_7=matrixinvcoeffs[57], gconst2_0=matrixinvcoeffs[2], gconst2_1=matrixinvcoeffs[10], gconst2_2=matrixinvcoeffs[18], gconst2_3=matrixinvcoeffs[26], gconst2_4=matrixinvcoeffs[34], gconst2_5=matrixinvcoeffs[42], gconst2_6=matrixinvcoeffs[50], gconst2_7=matrixinvcoeffs[58], gconst3_0=matrixinvcoeffs[3], gconst3_1=matrixinvcoeffs[11], gconst3_2=matrixinvcoeffs[19], gconst3_3=matrixinvcoeffs[27], gconst3_4=matrixinvcoeffs[35], gconst3_5=matrixinvcoeffs[43], gconst3_6=matrixinvcoeffs[51], gconst3_7=matrixinvcoeffs[59], gconst4_0=matrixinvcoeffs[4], gconst4_1=matrixinvcoeffs[12], gconst4_2=matrixinvcoeffs[20], gconst4_3=matrixinvcoeffs[28], gconst4_4=matrixinvcoeffs[36], gconst4_5=matrixinvcoeffs[44], gconst4_6=matrixinvcoeffs[52], gconst4_7=matrixinvcoeffs[60], gconst5_0=matrixinvcoeffs[5], gconst5_1=matrixinvcoeffs[13], gconst5_2=matrixinvcoeffs[21], gconst5_3=matrixinvcoeffs[29], gconst5_4=matrixinvcoeffs[37], gconst5_5=matrixinvcoeffs[45], gconst5_6=matrixinvcoeffs[53], gconst5_7=matrixinvcoeffs[61], gconst6_0=matrixinvcoeffs[6], gconst6_1=matrixinvcoeffs[14], gconst6_2=matrixinvcoeffs[22], gconst6_3=matrixinvcoeffs[30], gconst6_4=matrixinvcoeffs[38], gconst6_5=matrixinvcoeffs[46], gconst6_6=matrixinvcoeffs[54], gconst6_7=matrixinvcoeffs[62], gconst7_0=matrixinvcoeffs[7], gconst7_1=matrixinvcoeffs[15], gconst7_2=matrixinvcoeffs[23], gconst7_3=matrixinvcoeffs[31], gconst7_4=matrixinvcoeffs[39], gconst7_5=matrixinvcoeffs[47], gconst7_6=matrixinvcoeffs[55], gconst7_7=matrixinvcoeffs[63];
IkReal op[162], zeror[48];
int numroots;
IkReal x63=((gconst6_0)*(r00));
IkReal x64=((gconst7_2)*(r01));
IkReal x65=((gconst6_6)*(r00));
IkReal x66=((IkReal(0.0100800000000000))*(gconst1_2));
IkReal x67=((gconst0_7)*(r20));
IkReal x68=((IkReal(0.000513000000000000))*(gconst6_7));
IkReal x69=((gconst1_6)*(r21));
IkReal x70=((IkReal(0.0460000000000000))*(gconst4_6));
IkReal x71=((gconst7_0)*(r01));
IkReal x72=((gconst3_3)*(rxp0_1));
IkReal x73=((gconst3_6)*(r00));
IkReal x74=((gconst6_7)*(r00));
IkReal x75=((gconst3_2)*(r00));
IkReal x76=((gconst4_7)*(r11));
IkReal x77=((gconst4_6)*(r01));
IkReal x78=((gconst4_6)*(r11));
IkReal x79=((IkReal(0.00400000000000000))*(gconst7_6));
IkReal x80=((gconst0_0)*(npx));
IkReal x81=((gconst7_0)*(rxp1_0));
IkReal x82=((gconst6_3)*(r00));
IkReal x83=((gconst4_2)*(r01));
IkReal x84=((IkReal(0.0460000000000000))*(gconst6_6));
IkReal x85=((gconst7_3)*(r01));
IkReal x86=((IkReal(0.0134920000000000))*(gconst3_0));
IkReal x87=((gconst1_0)*(npy));
IkReal x88=((gconst6_6)*(rxp0_0));
IkReal x89=((gconst7_2)*(rxp1_0));
IkReal x90=((gconst3_0)*(r10));
IkReal x91=((IkReal(0.00524800000000000))*(r11));
IkReal x92=((gconst0_6)*(r20));
IkReal x93=((IkReal(0.172840000000000))*(gconst6_0));
IkReal x94=((gconst7_6)*(r01));
IkReal x95=((IkReal(0.0864200000000000))*(gconst3_7));
IkReal x96=((gconst7_7)*(r01));
IkReal x97=((IkReal(0.00760000000000000))*(pz));
IkReal x98=((gconst1_7)*(r21));
IkReal x99=((gconst0_6)*(npx));
IkReal x100=((gconst3_6)*(rxp0_1));
IkReal x101=((gconst4_0)*(rxp1_1));
IkReal x102=((gconst3_6)*(r10));
IkReal x103=((gconst1_7)*(npy));
IkReal x104=((gconst3_0)*(rxp0_1));
IkReal x105=((gconst1_3)*(npy));
IkReal x106=((IkReal(0.0360000000000000))*(gconst7_3));
IkReal x107=((gconst3_7)*(r00));
IkReal x108=((gconst4_2)*(r11));
IkReal x109=((IkReal(0.0360000000000000))*(gconst6_3));
IkReal x110=((IkReal(0.0180500000000000))*(pz));
IkReal x111=((gconst0_0)*(r20));
IkReal x112=((gconst3_3)*(r10));
IkReal x113=((gconst3_0)*(r00));
IkReal x114=((IkReal(0.00741600000000000))*(gconst4_0));
IkReal x115=((IkReal(0.190000000000000))*(pz));
IkReal x116=((IkReal(0.271000000000000))*(gconst4_3));
IkReal x117=((gconst4_7)*(rxp1_1));
IkReal x118=((gconst7_6)*(r11));
IkReal x119=((gconst1_0)*(r21));
IkReal x120=((IkReal(0.271000000000000))*(gconst7_3));
IkReal x121=((gconst7_7)*(r11));
IkReal x122=((gconst1_2)*(r21));
IkReal x123=((gconst6_7)*(rxp0_0));
IkReal x124=((gconst3_3)*(r00));
IkReal x125=((gconst7_2)*(r11));
IkReal x126=((gconst6_2)*(r00));
IkReal x127=((gconst4_2)*(rxp1_1));
IkReal x128=((gconst0_7)*(npx));
IkReal x129=((gconst0_2)*(r20));
IkReal x130=((gconst3_7)*(r10));
IkReal x131=((IkReal(1.00000000000000))*(pp));
IkReal x132=((gconst4_0)*(r11));
IkReal x133=((gconst0_3)*(r20));
IkReal x134=((gconst7_6)*(rxp1_0));
IkReal x135=((gconst7_7)*(rxp1_0));
IkReal x136=((IkReal(0.0134920000000000))*(gconst6_0));
IkReal x137=((gconst6_0)*(rxp0_0));
IkReal x138=((gconst0_3)*(npx));
IkReal x139=((gconst4_7)*(r01));
IkReal x140=((gconst1_3)*(r21));
IkReal x141=((gconst6_2)*(r10));
IkReal x142=((gconst7_0)*(r11));
IkReal x143=((gconst3_2)*(r10));
IkReal x144=((gconst6_7)*(r10));
IkReal x145=((gconst6_0)*(r10));
IkReal x146=((gconst0_2)*(npx));
IkReal x147=((gconst3_7)*(rxp0_1));
IkReal x148=((gconst6_2)*(rxp0_0));
IkReal x149=((gconst3_2)*(rxp0_1));
IkReal x150=((IkReal(0.0950000000000000))*(pp));
IkReal x151=((IkReal(0.0400000000000000))*(pp));
IkReal x152=((gconst4_0)*(r01));
IkReal x153=((gconst1_2)*(npy));
IkReal x154=((gconst1_6)*(npy));
IkReal x155=((gconst4_3)*(r11));
IkReal x156=((gconst6_6)*(r10));
IkReal x157=((gconst4_6)*(rxp1_1));
IkReal x158=((IkReal(0.271000000000000))*(gconst6_3));
IkReal x159=((IkReal(0.0360000000000000))*(gconst4_3));
IkReal x160=((pp)*(x108));
IkReal x161=((pp)*(x64));
IkReal x162=((IkReal(0.00400000000000000))*(x78));
IkReal x163=((IkReal(0.00400000000000000))*(x102));
IkReal x164=((pp)*(x143));
IkReal x165=((r01)*(x79));
IkReal x166=((IkReal(0.00400000000000000))*(x65));
IkReal x167=((pp)*(x126));
IkReal x168=((r10)*(x95));
IkReal x169=((IkReal(0.0758270000000000))*(x108));
IkReal x170=((IkReal(0.0758270000000000))*(x64));
IkReal x171=((IkReal(0.0360000000000000))*(x85));
IkReal x172=((IkReal(0.0360000000000000))*(x112));
IkReal x173=((IkReal(0.0864200000000000))*(x74));
IkReal x174=((IkReal(0.0758270000000000))*(x126));
IkReal x175=((IkReal(0.0360000000000000))*(x82));
IkReal x176=((IkReal(0.0360000000000000))*(x155));
IkReal x177=((IkReal(0.0864200000000000))*(x76));
IkReal x178=((IkReal(0.0864200000000000))*(x96));
IkReal x179=((IkReal(0.0758270000000000))*(x143));
IkReal x180=((IkReal(0.317000000000000))*(x78));
IkReal x181=((IkReal(0.317000000000000))*(x65));
IkReal x182=((IkReal(0.00216800000000000))*(x126));
IkReal x183=((IkReal(0.00253600000000000))*(x130));
IkReal x184=((IkReal(0.00216800000000000))*(x143));
IkReal x185=((IkReal(0.317000000000000))*(x102));
IkReal x186=((IkReal(0.317000000000000))*(x94));
IkReal x187=((IkReal(0.00253600000000000))*(x76));
IkReal x188=((IkReal(0.00253600000000000))*(x96));
IkReal x189=((IkReal(0.00253600000000000))*(x74));
IkReal x190=((IkReal(0.00216800000000000))*(x108));
IkReal x191=((IkReal(0.00216800000000000))*(x64));
IkReal x192=((IkReal(0.271000000000000))*(x85));
IkReal x193=((IkReal(0.0134920000000000))*(x63));
IkReal x194=((r10)*(x86));
IkReal x195=((IkReal(0.271000000000000))*(x112));
IkReal x196=((IkReal(0.0134920000000000))*(x132));
IkReal x197=((r11)*(x116));
IkReal x198=((IkReal(0.271000000000000))*(x82));
IkReal x199=((IkReal(0.0134920000000000))*(x71));
IkReal x200=((IkReal(0.0100800000000000))*(x126));
IkReal x201=((IkReal(0.000513000000000000))*(x76));
IkReal x202=((r00)*(x68));
IkReal x203=((IkReal(0.0100800000000000))*(x143));
IkReal x204=((IkReal(0.0100800000000000))*(x108));
IkReal x205=((IkReal(0.000513000000000000))*(x130));
IkReal x206=((IkReal(0.0100800000000000))*(x64));
IkReal x207=((IkReal(0.000513000000000000))*(x96));
IkReal x208=((IkReal(0.0758270000000000))*(x75));
IkReal x209=((r00)*(x95));
IkReal x210=((IkReal(0.0758270000000000))*(x83));
IkReal x211=((pp)*(x125));
IkReal x212=((r11)*(x79));
IkReal x213=((IkReal(0.0360000000000000))*(x124));
IkReal x214=((r01)*(x159));
IkReal x215=((IkReal(0.00400000000000000))*(x156));
IkReal x216=((IkReal(0.0864200000000000))*(x139));
IkReal x217=((pp)*(x141));
IkReal x218=((IkReal(0.0864200000000000))*(x121));
IkReal x219=((IkReal(0.00400000000000000))*(x73));
IkReal x220=((IkReal(0.00400000000000000))*(x77));
IkReal x221=((IkReal(0.0758270000000000))*(x125));
IkReal x222=((r11)*(x106));
IkReal x223=((IkReal(0.0864200000000000))*(x144));
IkReal x224=((r10)*(x109));
IkReal x225=((IkReal(0.0758270000000000))*(x141));
IkReal x226=((IkReal(0.00216800000000000))*(x141));
IkReal x227=((IkReal(0.317000000000000))*(x156));
IkReal x228=((IkReal(0.317000000000000))*(x118));
IkReal x229=((r00)*(x86));
IkReal x230=((IkReal(0.00253600000000000))*(x121));
IkReal x231=((IkReal(0.271000000000000))*(x124));
IkReal x232=((IkReal(0.0134920000000000))*(x152));
IkReal x233=((IkReal(0.00216800000000000))*(x125));
IkReal x234=((IkReal(0.00253600000000000))*(x144));
IkReal x235=((r01)*(x116));
IkReal x236=((IkReal(0.0134920000000000))*(x142));
IkReal x237=((r11)*(x120));
IkReal x238=((IkReal(0.00253600000000000))*(x107));
IkReal x239=((IkReal(0.00216800000000000))*(x75));
IkReal x240=((r10)*(x136));
IkReal x241=((IkReal(0.317000000000000))*(x73));
IkReal x242=((IkReal(0.00253600000000000))*(x139));
IkReal x243=((r10)*(x158));
IkReal x244=((IkReal(0.00216800000000000))*(x83));
IkReal x245=((IkReal(0.317000000000000))*(x77));
IkReal x246=((IkReal(0.0100800000000000))*(x141));
IkReal x247=((r10)*(x68));
IkReal x248=((IkReal(0.0100800000000000))*(x125));
IkReal x249=((IkReal(0.000513000000000000))*(x121));
IkReal x250=((IkReal(0.000513000000000000))*(x139));
IkReal x251=((IkReal(0.000513000000000000))*(x107));
IkReal x252=((IkReal(0.0100800000000000))*(x75));
IkReal x253=((IkReal(0.0100800000000000))*(x83));
IkReal x254=((pp)*(x148));
IkReal x255=((IkReal(0.00400000000000000))*(x100));
IkReal x256=((IkReal(0.00400000000000000))*(x88));
IkReal x257=((rxp1_0)*(x79));
IkReal x258=((pp)*(x127));
IkReal x259=((pp)*(x89));
IkReal x260=((pp)*(x149));
IkReal x261=((IkReal(0.00400000000000000))*(x157));
IkReal x262=((rxp0_0)*(x109));
IkReal x263=((IkReal(0.0758270000000000))*(x149));
IkReal x264=((IkReal(0.0758270000000000))*(x148));
IkReal x265=((IkReal(0.0360000000000000))*(x72));
IkReal x266=((rxp1_1)*(x159));
IkReal x267=((IkReal(0.0864200000000000))*(x117));
IkReal x268=((IkReal(0.0758270000000000))*(x127));
IkReal x269=((IkReal(0.0758270000000000))*(x89));
IkReal x270=((rxp1_0)*(x106));
IkReal x271=((IkReal(0.0864200000000000))*(x135));
IkReal x272=((IkReal(0.0864200000000000))*(x123));
IkReal x273=((rxp0_1)*(x95));
IkReal x274=((IkReal(0.317000000000000))*(x100));
IkReal x275=((IkReal(0.00216800000000000))*(x148));
IkReal x276=((IkReal(0.00253600000000000))*(x117));
IkReal x277=((IkReal(0.00253600000000000))*(x135));
IkReal x278=((IkReal(0.00216800000000000))*(x89));
IkReal x279=((IkReal(0.317000000000000))*(x157));
IkReal x280=((IkReal(0.00253600000000000))*(x147));
IkReal x281=((IkReal(0.00216800000000000))*(x127));
IkReal x282=((IkReal(0.317000000000000))*(x88));
IkReal x283=((IkReal(0.317000000000000))*(x134));
IkReal x284=((IkReal(0.00216800000000000))*(x149));
IkReal x285=((IkReal(0.00253600000000000))*(x123));
IkReal x286=((IkReal(0.0134920000000000))*(x101));
IkReal x287=((IkReal(0.0134920000000000))*(x81));
IkReal x288=((rxp1_0)*(x120));
IkReal x289=((rxp1_1)*(x116));
IkReal x290=((rxp0_0)*(x158));
IkReal x291=((rxp0_0)*(x136));
IkReal x292=((rxp0_1)*(x86));
IkReal x293=((IkReal(0.271000000000000))*(x72));
IkReal x294=((rxp0_0)*(x68));
IkReal x295=((IkReal(0.000513000000000000))*(x147));
IkReal x296=((IkReal(0.0100800000000000))*(x89));
IkReal x297=((IkReal(0.000513000000000000))*(x117));
IkReal x298=((IkReal(0.0100800000000000))*(x127));
IkReal x299=((IkReal(0.0100800000000000))*(x148));
IkReal x300=((IkReal(0.0100800000000000))*(x149));
IkReal x301=((IkReal(0.000513000000000000))*(x135));
IkReal x302=((IkReal(0.0758270000000000))*(x129));
IkReal x303=((IkReal(0.0864200000000000))*(x98));
IkReal x304=((IkReal(0.0360000000000000))*(x133));
IkReal x305=((IkReal(0.0360000000000000))*(x140));
IkReal x306=((IkReal(0.0864200000000000))*(x67));
IkReal x307=((IkReal(0.0758270000000000))*(x122));
IkReal x308=((IkReal(0.00400000000000000))*(x69));
IkReal x309=((IkReal(0.00400000000000000))*(x92));
IkReal x310=((IkReal(0.0134920000000000))*(x119));
IkReal x311=((IkReal(0.271000000000000))*(x140));
IkReal x312=((IkReal(0.271000000000000))*(x133));
IkReal x313=((IkReal(0.0134920000000000))*(x111));
IkReal x314=((IkReal(0.00253600000000000))*(x67));
IkReal x315=((IkReal(0.317000000000000))*(x92));
IkReal x316=((IkReal(0.317000000000000))*(x69));
IkReal x317=((IkReal(0.00253600000000000))*(x98));
IkReal x318=((IkReal(0.00216800000000000))*(x129));
IkReal x319=((IkReal(0.00216800000000000))*(x122));
IkReal x320=((IkReal(0.000513000000000000))*(x67));
IkReal x321=((IkReal(0.0100800000000000))*(x129));
IkReal x322=((IkReal(0.000513000000000000))*(x98));
IkReal x323=((r21)*(x66));
IkReal x324=((IkReal(0.00345680000000000))*(x96));
IkReal x325=((IkReal(0.00303308000000000))*(x126));
IkReal x326=((IkReal(0.00144000000000000))*(x155));
IkReal x327=((IkReal(0.00400000000000000))*(x99));
IkReal x328=((IkReal(0.00303308000000000))*(x143));
IkReal x329=((pp)*(x146));
IkReal x330=((IkReal(0.00144000000000000))*(x82));
IkReal x331=((IkReal(0.00345680000000000))*(x130));
IkReal x332=((IkReal(0.00303308000000000))*(x64));
IkReal x333=((IkReal(0.00400000000000000))*(x154));
IkReal x334=((pp)*(x153));
IkReal x335=((IkReal(0.00144000000000000))*(x112));
IkReal x336=((IkReal(0.00345680000000000))*(x74));
IkReal x337=((IkReal(0.00144000000000000))*(x85));
IkReal x338=((IkReal(0.00303308000000000))*(x108));
IkReal x339=((IkReal(0.00345680000000000))*(x76));
IkReal x340=((IkReal(0.0360000000000000))*(x105));
IkReal x341=((IkReal(0.0758270000000000))*(x153));
IkReal x342=((IkReal(0.000160000000000000))*(x78));
IkReal x343=((IkReal(0.0758270000000000))*(x146));
IkReal x344=((IkReal(0.0360000000000000))*(x138));
IkReal x345=((IkReal(0.000160000000000000))*(x94));
IkReal x346=((IkReal(0.000160000000000000))*(x65));
IkReal x347=((IkReal(0.000160000000000000))*(x102));
IkReal x348=((IkReal(0.0864200000000000))*(x103));
IkReal x349=((IkReal(0.0864200000000000))*(x128));
IkReal x350=((IkReal(0.00253600000000000))*(x128));
IkReal x351=((IkReal(0.000539680000000000))*(x132));
IkReal x352=((IkReal(0.317000000000000))*(x154));
IkReal x353=((IkReal(0.0108400000000000))*(x82));
IkReal x354=((IkReal(0.00216800000000000))*(x146));
IkReal x355=((IkReal(0.0108400000000000))*(x155));
IkReal x356=((IkReal(0.000539680000000000))*(x90));
IkReal x357=((IkReal(0.000539680000000000))*(x63));
IkReal x358=((IkReal(0.00216800000000000))*(x153));
IkReal x359=((IkReal(0.0108400000000000))*(x112));
IkReal x360=((IkReal(0.000539680000000000))*(x71));
IkReal x361=((IkReal(0.0108400000000000))*(x85));
IkReal x362=((IkReal(0.00253600000000000))*(x103));
IkReal x363=((IkReal(0.317000000000000))*(x99));
IkReal x364=((IkReal(0.271000000000000))*(x138));
IkReal x365=((IkReal(0.000101440000000000))*(x74));
IkReal x366=((IkReal(0.000101440000000000))*(x130));
IkReal x367=((IkReal(0.0134920000000000))*(x80));
IkReal x368=((IkReal(0.0126800000000000))*(x102));
IkReal x369=((IkReal(8.67200000000000e-5))*(x143));
IkReal x370=((IkReal(0.0134920000000000))*(x87));
IkReal x371=((IkReal(0.271000000000000))*(x105));
IkReal x372=((IkReal(0.0126800000000000))*(x78));
IkReal x373=((IkReal(0.0126800000000000))*(x65));
IkReal x374=((IkReal(8.67200000000000e-5))*(x126));
IkReal x375=((IkReal(8.67200000000000e-5))*(x108));
IkReal x376=((IkReal(0.000101440000000000))*(x76));
IkReal x377=((IkReal(0.0126800000000000))*(x94));
IkReal x378=((IkReal(0.000101440000000000))*(x96));
IkReal x379=((IkReal(8.67200000000000e-5))*(x64));
IkReal x380=((IkReal(0.000513000000000000))*(x128));
IkReal x381=((IkReal(0.0100800000000000))*(x146));
IkReal x382=((npy)*(x66));
IkReal x383=((IkReal(0.000513000000000000))*(x103));
IkReal x384=((IkReal(0.000403200000000000))*(x64));
IkReal x385=((IkReal(0.000403200000000000))*(x126));
IkReal x386=((IkReal(2.05200000000000e-5))*(x130));
IkReal x387=((IkReal(0.000403200000000000))*(x108));
IkReal x388=((IkReal(2.05200000000000e-5))*(x96));
IkReal x389=((IkReal(0.000403200000000000))*(x143));
IkReal x390=((IkReal(2.05200000000000e-5))*(x74));
IkReal x391=((IkReal(2.05200000000000e-5))*(x76));
IkReal x392=((IkReal(0.00720356500000000))*(x122));
IkReal x393=((IkReal(0.00342000000000000))*(x140));
IkReal x394=((IkReal(0.00342000000000000))*(x133));
IkReal x395=((IkReal(0.00720356500000000))*(x129));
IkReal x396=((IkReal(0.00820990000000000))*(x98));
IkReal x397=((IkReal(0.00820990000000000))*(x67));
IkReal x398=((IkReal(0.000380000000000000))*(x69));
IkReal x399=((IkReal(0.000380000000000000))*(x92));
IkReal x400=((IkReal(0.0257450000000000))*(x133));
IkReal x401=((IkReal(0.0257450000000000))*(x140));
IkReal x402=((IkReal(0.00128174000000000))*(x111));
IkReal x403=((IkReal(0.00128174000000000))*(x119));
IkReal x404=((IkReal(0.0301150000000000))*(x69));
IkReal x405=((IkReal(0.000205960000000000))*(x122));
IkReal x406=((IkReal(0.000240920000000000))*(x67));
IkReal x407=((IkReal(0.000240920000000000))*(x98));
IkReal x408=((IkReal(0.000205960000000000))*(x129));
IkReal x409=((IkReal(0.0301150000000000))*(x92));
IkReal x410=((x115)*(x96));
IkReal x411=((x115)*(x130));
IkReal x412=((x115)*(x74));
IkReal x413=((x115)*(x76));
IkReal x414=((x115)*(x121));
IkReal x415=((x115)*(x144));
IkReal x416=((x131)*(x83));
IkReal x417=((x107)*(x115));
IkReal x418=((x115)*(x139));
IkReal x419=((x131)*(x75));
IkReal x420=((x115)*(x147));
IkReal x421=((x115)*(x123));
IkReal x422=((x115)*(x117));
IkReal x423=((x115)*(x135));
IkReal x424=((x129)*(x131));
IkReal x425=((x115)*(x98));
IkReal x426=((x122)*(x131));
IkReal x427=((x115)*(x67));
IkReal x428=((x115)*(x128));
IkReal x429=((x103)*(x115));
IkReal x430=((x126)*(x151));
IkReal x431=((x143)*(x151));
IkReal x432=((x151)*(x64));
IkReal x433=((x96)*(x97));
IkReal x434=((x108)*(x151));
IkReal x435=((x74)*(x97));
IkReal x436=((x130)*(x97));
IkReal x437=((x76)*(x97));
IkReal x438=((x129)*(x150));
IkReal x439=((x122)*(x150));
IkReal x440=((x110)*(x67));
IkReal x441=((x110)*(x98));
IkReal x442=((x319)+(x318));
IkReal x443=((x310)+(x313));
IkReal x444=((x383)+(x380));
IkReal x445=((x382)+(x381));
IkReal x446=((x333)+(x327));
IkReal x447=((x212)+(x215));
IkReal x448=((x210)+(x208));
IkReal x449=((x216)+(x209));
IkReal x450=((x348)+(x349));
IkReal x451=((x343)+(x341));
IkReal x452=((x306)+(x303));
IkReal x453=((x304)+(x305));
IkReal x454=((x401)+(x400));
IkReal x455=((x403)+(x402));
IkReal x456=((x307)+(x302));
IkReal x457=((x246)+(x248));
IkReal x458=((x219)+(x220));
IkReal x459=((x247)+(x249));
IkReal x460=((x399)+(x398));
IkReal x461=((x320)+(x322));
IkReal x462=((x311)+(x312));
IkReal x463=((x321)+(x323));
IkReal x464=((x308)+(x309));
IkReal x465=((x405)+(x408));
IkReal x466=((x250)+(x251));
IkReal x467=((x397)+(x396));
IkReal x468=((x218)+(x223));
IkReal x469=((x252)+(x253));
IkReal x470=((x221)+(x225));
IkReal x471=((IkReal(1.00000000000000))+(x464));
IkReal x472=((x394)+(x393)+(pz));
IkReal x473=((IkReal(-0.294000000000000))+(x395)+(x392));
IkReal x474=((x179)+(x170)+(x174)+(x169));
IkReal x475=((x387)+(x384)+(x385)+(x389));
IkReal x476=((x290)+(x293)+(x289)+(x288));
IkReal x477=((x386)+(x388)+(x391)+(x390));
IkReal x478=((x291)+(x292)+(x287)+(x286));
IkReal x479=((x178)+(x173)+(x177)+(x168));
IkReal x480=((x342)+(x346)+(x347)+(x345));
IkReal x481=((x338)+(x332)+(x325)+(x328));
IkReal x482=((x315)+(x314)+(x317)+(x316));
IkReal x483=((x404)+(x407)+(x406)+(x409));
IkReal x484=((x275)+(x278)+(x284)+(x281));
IkReal x485=((x226)+(x233)+(x231)+(x235));
IkReal x486=((x301)+(x294)+(x295)+(x297));
IkReal x487=((x300)+(x298)+(x299)+(x296));
IkReal x488=((x255)+(x256)+(x257)+(x261));
IkReal x489=((x239)+(x237)+(x243)+(x244));
IkReal x490=((x267)+(x272)+(x273)+(x271));
IkReal x491=((x265)+(x266)+(x262)+(x270));
IkReal x492=((x171)+(x172)+(x175)+(x176));
IkReal x493=((x162)+(x163)+(x166)+(x165));
IkReal x494=((x198)+(x192)+(x197)+(x195));
IkReal x495=((x339)+(x331)+(x336)+(x324));
IkReal x496=((x191)+(x190)+(x184)+(x182));
IkReal x497=((x199)+(x193)+(x196)+(x194));
IkReal x498=((x206)+(x204)+(x203)+(x200));
IkReal x499=((x207)+(x205)+(x202)+(x201));
IkReal x500=((x427)+(x426)+(x425)+(x424));
IkReal x501=((x438)+(x439)+(x441)+(x440));
IkReal x502=((x379)+(x375)+(x374)+(x371)+(x369)+(x364));
IkReal x503=((x238)+(x236)+(x242)+(x241)+(x240)+(x245));
IkReal x504=((x353)+(x355)+(x354)+(x359)+(x358)+(x361));
IkReal x505=((x229)+(x228)+(x227)+(x232)+(x230)+(x234));
IkReal x506=((x211)+(x213)+(x214)+(x217)+(x414)+(x415));
IkReal x507=((x222)+(x224)+(x416)+(x417)+(x418)+(x419));
IkReal x508=((x492)+(x493));
IkReal x509=((x276)+(x277)+(x274)+(x279)+(x285)+(x283)+(x282)+(x280));
IkReal x510=((x351)+(x350)+(x352)+(x357)+(x356)+(x360)+(x362)+(x363));
IkReal x511=((x264)+(x263)+(x269)+(x268)+(x491));
IkReal x512=((x185)+(x186)+(x187)+(x180)+(x181)+(x183)+(x188)+(x189));
IkReal x513=((x330)+(x337)+(x335)+(x334)+(x326)+(x329)+(x429)+(x428));
IkReal x514=((x160)+(x161)+(x167)+(x164)+(x412)+(x413)+(x410)+(x411));
IkReal x515=((x258)+(x259)+(x254)+(x260)+(x423)+(x422)+(x421)+(x420));
IkReal x516=((x378)+(x377)+(x376)+(x373)+(x372)+(x370)+(x368)+(x365)+(x366)+(x367));
IkReal x517=((x340)+(x344)+(x430)+(x431)+(x432)+(x433)+(x434)+(x435)+(x436)+(x437));
IkReal x518=((x480)+(x517));
op[0]=((((IkReal(0.00995200000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x508)))+(((IkReal(-1.00000000000000))*(x474)))+(x479)+(((IkReal(0.00995200000000000))*(x132)))+(x514)+(((IkReal(0.00995200000000000))*(x63)))+(((IkReal(0.00995200000000000))*(x90))));
op[1]=((IkReal(-2.00000000000000))+(((IkReal(-0.588000000000000))*(x78)))+(((IkReal(-0.00470400000000000))*(x74)))+(((IkReal(-0.00470400000000000))*(x76)))+(((IkReal(0.172840000000000))*(x71)))+(((IkReal(0.172840000000000))*(x63)))+(((IkReal(-0.588000000000000))*(x65)))+(((IkReal(-0.00470400000000000))*(x130)))+(((IkReal(-0.588000000000000))*(x94)))+(((IkReal(-0.00470400000000000))*(x96)))+(((IkReal(0.172840000000000))*(x90)))+(((IkReal(0.172840000000000))*(x132)))+(((IkReal(-0.588000000000000))*(x102))));
op[2]=((((gconst4_0)*(x91)))+(((IkReal(-1.00000000000000))*(x492)))+(((IkReal(0.00524800000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x474)))+(((IkReal(-1.00000000000000))*(x479)))+(x493)+(x514)+(((IkReal(0.00524800000000000))*(x63)))+(((IkReal(0.00524800000000000))*(x90))));
op[3]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x494)))+(x496)+(x497)+(((IkReal(-1.00000000000000))*(x512))));
op[4]=((((IkReal(-0.00507200000000000))*(x63)))+(((IkReal(-0.00507200000000000))*(x71)))+(((IkReal(-0.0269840000000000))*(x130)))+(((IkReal(-0.0269840000000000))*(x74)))+(((IkReal(-0.0269840000000000))*(x76)))+(((IkReal(0.0160000000000000))*(x78)))+(((IkReal(0.0160000000000000))*(x94)))+(((IkReal(-0.0269840000000000))*(x96)))+(((IkReal(0.0160000000000000))*(x65)))+(((IkReal(-0.00507200000000000))*(x90)))+(((IkReal(-0.00507200000000000))*(x132)))+(((IkReal(0.0160000000000000))*(x102))));
op[5]=((IkReal(2.00000000000000))+(((IkReal(-1.00000000000000))*(x494)))+(((IkReal(-1.00000000000000))*(x497)))+(x496)+(x512));
op[6]=((((IkReal(-1.00000000000000))*(x499)))+(((IkReal(-1.00000000000000))*(x492)))+(((IkReal(0.00741600000000000))*(x71)))+(((r11)*(x114)))+(x498)+(x493)+(x514)+(((IkReal(0.00741600000000000))*(x63)))+(((IkReal(0.00741600000000000))*(x90))));
op[7]=((IkReal(2.00000000000000))+(((IkReal(0.000368000000000000))*(x130)))+(((r11)*(x70)))+(((IkReal(0.0460000000000000))*(x94)))+(((IkReal(-0.00102600000000000))*(x63)))+(((IkReal(0.000368000000000000))*(x96)))+(((IkReal(0.0460000000000000))*(x65)))+(((IkReal(0.0460000000000000))*(x102)))+(((IkReal(-0.00102600000000000))*(x132)))+(((IkReal(-0.00102600000000000))*(x90)))+(((IkReal(-0.00102600000000000))*(x71)))+(((IkReal(0.000368000000000000))*(x74)))+(((IkReal(0.000368000000000000))*(x76))));
op[8]=((((IkReal(-1.00000000000000))*(x508)))+(((IkReal(0.00778400000000000))*(x90)))+(x498)+(x499)+(((IkReal(0.00778400000000000))*(x63)))+(x514)+(((IkReal(0.00778400000000000))*(x71)))+(((IkReal(0.00778400000000000))*(x132))));
op[9]=((((IkReal(-1.00000000000000))*(x449)))+(((IkReal(-1.00000000000000))*(x447)))+(((IkReal(-0.00995200000000000))*(x113)))+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x470)))+(((IkReal(-0.00995200000000000))*(x152)))+(x448)+(x458)+(x468)+(x506)+(((IkReal(0.00995200000000000))*(x145)))+(((IkReal(0.00995200000000000))*(x142))));
op[10]=((((IkReal(-0.588000000000000))*(x156)))+(((r10)*(x93)))+(((IkReal(-0.172840000000000))*(x152)))+(((IkReal(0.588000000000000))*(x77)))+(((IkReal(0.588000000000000))*(x73)))+(((IkReal(-0.00470400000000000))*(x121)))+(((IkReal(0.00470400000000000))*(x139)))+(((IkReal(-0.172840000000000))*(x113)))+(((IkReal(-0.00470400000000000))*(x144)))+(((IkReal(0.172840000000000))*(x142)))+(((IkReal(0.00470400000000000))*(x107)))+(((IkReal(-0.588000000000000))*(x118))));
op[11]=((((gconst7_0)*(x91)))+(((IkReal(-0.00524800000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x470)))+(((IkReal(-0.00524800000000000))*(x113)))+(((IkReal(-1.00000000000000))*(x468)))+(((IkReal(-1.00000000000000))*(x458)))+(x449)+(x448)+(x447)+(x506)+(((IkReal(0.00524800000000000))*(x145))));
op[12]=((((IkReal(-1.00000000000000))*(x489)))+(((IkReal(-1.00000000000000))*(x505)))+(x485)+(x503));
op[13]=((((IkReal(0.00507200000000000))*(x113)))+(((IkReal(-0.0269840000000000))*(x144)))+(((IkReal(0.0269840000000000))*(x107)))+(((IkReal(0.0269840000000000))*(x139)))+(((IkReal(0.00507200000000000))*(x152)))+(((IkReal(-0.0269840000000000))*(x121)))+(((IkReal(-0.0160000000000000))*(x73)))+(((IkReal(-0.0160000000000000))*(x77)))+(((IkReal(0.0160000000000000))*(x156)))+(((IkReal(-0.00507200000000000))*(x142)))+(((IkReal(-0.00507200000000000))*(x145)))+(((IkReal(0.0160000000000000))*(x118))));
op[14]=((((IkReal(-1.00000000000000))*(x489)))+(((IkReal(-1.00000000000000))*(x503)))+(x485)+(x505));
op[15]=((((IkReal(-1.00000000000000))*(r01)*(x114)))+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x469)))+(((IkReal(-1.00000000000000))*(x458)))+(((IkReal(-1.00000000000000))*(x459)))+(x447)+(x457)+(x466)+(x506)+(((IkReal(0.00741600000000000))*(x142)))+(((IkReal(0.00741600000000000))*(x145)))+(((IkReal(-0.00741600000000000))*(x113))));
op[16]=((((IkReal(-0.0460000000000000))*(x73)))+(((IkReal(0.000368000000000000))*(x121)))+(((IkReal(0.00102600000000000))*(x152)))+(((r10)*(x84)))+(((IkReal(-1.00000000000000))*(r01)*(x70)))+(((IkReal(-0.000368000000000000))*(x107)))+(((IkReal(0.00102600000000000))*(x113)))+(((IkReal(-0.000368000000000000))*(x139)))+(((IkReal(0.000368000000000000))*(x144)))+(((IkReal(0.0460000000000000))*(x118)))+(((IkReal(-0.00102600000000000))*(x142)))+(((IkReal(-0.00102600000000000))*(x145))));
op[17]=((((IkReal(-1.00000000000000))*(x447)))+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x469)))+(((IkReal(-1.00000000000000))*(x466)))+(x458)+(x459)+(x457)+(x506)+(((IkReal(-0.00778400000000000))*(x152)))+(((IkReal(0.00778400000000000))*(x145)))+(((IkReal(0.00778400000000000))*(x142)))+(((IkReal(-0.00778400000000000))*(x113))));
op[18]=((((IkReal(-1.00000000000000))*(x488)))+(((IkReal(0.00995200000000000))*(x104)))+(((IkReal(0.00995200000000000))*(x101)))+(x490)+(((IkReal(0.00995200000000000))*(x137)))+(x515)+(((IkReal(0.00995200000000000))*(x81)))+(((IkReal(-1.00000000000000))*(x511))));
op[19]=((((IkReal(-0.588000000000000))*(x157)))+(((IkReal(-0.00470400000000000))*(x117)))+(((IkReal(0.172840000000000))*(x104)))+(((IkReal(0.172840000000000))*(x101)))+(((IkReal(-0.00470400000000000))*(x135)))+(((IkReal(-0.00470400000000000))*(x123)))+(((IkReal(-0.588000000000000))*(x88)))+(((rxp0_0)*(x93)))+(((IkReal(-0.00470400000000000))*(x147)))+(((IkReal(-0.588000000000000))*(x134)))+(((IkReal(0.172840000000000))*(x81)))+(((IkReal(-0.588000000000000))*(x100))));
op[20]=((((IkReal(0.00524800000000000))*(x81)))+(((IkReal(-1.00000000000000))*(x490)))+(((IkReal(0.00524800000000000))*(x101)))+(((IkReal(0.00524800000000000))*(x104)))+(x488)+(((IkReal(0.00524800000000000))*(x137)))+(x515)+(((IkReal(-1.00000000000000))*(x511))));
op[21]=((((IkReal(-1.00000000000000))*(x509)))+(((IkReal(-1.00000000000000))*(x476)))+(x484)+(x478));
op[22]=((((IkReal(-0.00507200000000000))*(x101)))+(((IkReal(-0.00507200000000000))*(x104)))+(((IkReal(-0.0269840000000000))*(x147)))+(((IkReal(0.0160000000000000))*(x134)))+(((IkReal(-0.0269840000000000))*(x117)))+(((IkReal(-0.0269840000000000))*(x123)))+(((IkReal(-0.0269840000000000))*(x135)))+(((IkReal(-0.00507200000000000))*(x81)))+(((IkReal(0.0160000000000000))*(x157)))+(((IkReal(0.0160000000000000))*(x88)))+(((IkReal(-0.00507200000000000))*(x137)))+(((IkReal(0.0160000000000000))*(x100))));
op[23]=((((IkReal(-1.00000000000000))*(x476)))+(((IkReal(-1.00000000000000))*(x478)))+(x484)+(x509));
op[24]=((((IkReal(-1.00000000000000))*(x491)))+(((IkReal(-1.00000000000000))*(x486)))+(((IkReal(0.00741600000000000))*(x137)))+(((IkReal(0.00741600000000000))*(x101)))+(((IkReal(0.00741600000000000))*(x104)))+(x488)+(x487)+(x515)+(((IkReal(0.00741600000000000))*(x81))));
op[25]=((((IkReal(0.000368000000000000))*(x135)))+(((IkReal(0.000368000000000000))*(x123)))+(((IkReal(0.0460000000000000))*(x134)))+(((rxp0_0)*(x84)))+(((IkReal(-0.00102600000000000))*(x101)))+(((IkReal(-0.00102600000000000))*(x104)))+(((IkReal(0.000368000000000000))*(x147)))+(((IkReal(0.0460000000000000))*(x100)))+(((IkReal(-0.00102600000000000))*(x81)))+(((IkReal(-0.00102600000000000))*(x137)))+(((IkReal(0.000368000000000000))*(x117)))+(((rxp1_1)*(x70))));
op[26]=((((IkReal(-1.00000000000000))*(x491)))+(((IkReal(-1.00000000000000))*(x488)))+(((IkReal(0.00778400000000000))*(x104)))+(((IkReal(0.00778400000000000))*(x101)))+(((IkReal(0.00778400000000000))*(x81)))+(x487)+(x486)+(x515)+(((IkReal(0.00778400000000000))*(x137))));
op[27]=((((IkReal(-0.00995200000000000))*(x111)))+(((IkReal(-0.00995200000000000))*(x119)))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x452)))+(x456)+(x453)+(x471));
op[28]=((((IkReal(0.588000000000000))*(x69)))+(((IkReal(0.588000000000000))*(x92)))+(((IkReal(0.00470400000000000))*(x67)))+(((IkReal(0.00470400000000000))*(x98)))+(((IkReal(-0.172840000000000))*(x119)))+(((IkReal(-0.172840000000000))*(x111))));
op[29]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-0.00524800000000000))*(x119)))+(((IkReal(-0.00524800000000000))*(x111)))+(((IkReal(-1.00000000000000))*(x464)))+(x456)+(x452)+(x453));
op[30]=((((IkReal(-1.00000000000000))*(x442)))+(((IkReal(-1.00000000000000))*(x443)))+(x482)+(x462));
op[31]=((IkReal(-4.00000000000000))+(((IkReal(0.00507200000000000))*(x111)))+(((IkReal(0.00507200000000000))*(x119)))+(((IkReal(-0.0160000000000000))*(x92)))+(((IkReal(0.0269840000000000))*(x67)))+(((IkReal(0.0269840000000000))*(x98)))+(((IkReal(-0.0160000000000000))*(x69))));
op[32]=((((IkReal(-1.00000000000000))*(x442)))+(((IkReal(-1.00000000000000))*(x482)))+(x443)+(x462));
op[33]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x463)))+(((IkReal(-1.00000000000000))*(x464)))+(x453)+(x461)+(((IkReal(-0.00741600000000000))*(x111)))+(((IkReal(-0.00741600000000000))*(x119))));
op[34]=((((IkReal(-0.000368000000000000))*(x98)))+(((IkReal(-0.0460000000000000))*(x92)))+(((IkReal(-0.000368000000000000))*(x67)))+(((IkReal(0.00102600000000000))*(x119)))+(((IkReal(0.00102600000000000))*(x111)))+(((IkReal(-0.0460000000000000))*(x69))));
op[35]=((((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x461)))+(((IkReal(-1.00000000000000))*(x463)))+(x453)+(x471)+(((IkReal(-0.00778400000000000))*(x111)))+(((IkReal(-0.00778400000000000))*(x119))));
op[36]=((IkReal(-0.389000000000000))+(((IkReal(-0.000398080000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x446)))+(((IkReal(-1.00000000000000))*(x495)))+(((IkReal(-0.000398080000000000))*(x63)))+(((IkReal(-1.00000000000000))*(x451)))+(((IkReal(-0.000398080000000000))*(x90)))+(x481)+(x480)+(x450)+(x513)+(((IkReal(0.00995200000000000))*(x80)))+(((IkReal(0.00995200000000000))*(x87)))+(((IkReal(-1.00000000000000))*(x517)))+(((IkReal(-0.000398080000000000))*(x132))));
op[37]=((IkReal(0.00800000000000000))+(((IkReal(-0.00691360000000000))*(x63)))+(((IkReal(-0.00691360000000000))*(x132)))+(((IkReal(-0.00691360000000000))*(x71)))+(((IkReal(-0.588000000000000))*(x154)))+(((IkReal(-0.00470400000000000))*(x103)))+(((IkReal(0.000188160000000000))*(x96)))+(((IkReal(0.000188160000000000))*(x74)))+(((IkReal(0.000188160000000000))*(x76)))+(((IkReal(-0.588000000000000))*(x99)))+(((IkReal(-0.00470400000000000))*(x128)))+(((IkReal(0.0235200000000000))*(x94)))+(((IkReal(0.0235200000000000))*(x78)))+(((IkReal(-0.00691360000000000))*(x90)))+(((IkReal(0.172840000000000))*(x80)))+(((IkReal(0.172840000000000))*(x87)))+(((IkReal(0.0235200000000000))*(x102)))+(((IkReal(0.0235200000000000))*(x65)))+(((IkReal(0.000188160000000000))*(x130))));
op[38]=((IkReal(0.199000000000000))+(((IkReal(-0.000209920000000000))*(x132)))+(((IkReal(0.00524800000000000))*(x87)))+(((IkReal(0.00524800000000000))*(x80)))+(((IkReal(-0.000209920000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x451)))+(((IkReal(-1.00000000000000))*(x450)))+(x481)+(x495)+(x446)+(x513)+(((IkReal(-0.000209920000000000))*(x63)))+(((IkReal(-0.000209920000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x518))));
op[39]=((IkReal(0.00800000000000000))+(((IkReal(-1.00000000000000))*(x502)))+(x504)+(x516)+(((IkReal(-1.00000000000000))*(x510))));
op[40]=((IkReal(0.634000000000000))+(((IkReal(-0.000640000000000000))*(x94)))+(((IkReal(-0.000640000000000000))*(x65)))+(((IkReal(0.000202880000000000))*(x63)))+(((IkReal(0.000202880000000000))*(x90)))+(((IkReal(0.00107936000000000))*(x130)))+(((IkReal(-0.0269840000000000))*(x103)))+(((IkReal(0.000202880000000000))*(x132)))+(((IkReal(-0.000640000000000000))*(x78)))+(((IkReal(0.000202880000000000))*(x71)))+(((IkReal(0.00107936000000000))*(x76)))+(((IkReal(0.00107936000000000))*(x74)))+(((IkReal(-0.0269840000000000))*(x128)))+(((IkReal(0.0160000000000000))*(x99)))+(((IkReal(-0.00507200000000000))*(x87)))+(((IkReal(-0.00507200000000000))*(x80)))+(((IkReal(0.0160000000000000))*(x154)))+(((IkReal(-0.000640000000000000))*(x102)))+(((IkReal(0.00107936000000000))*(x96))));
op[41]=((IkReal(-0.00800000000000000))+(((IkReal(-1.00000000000000))*(x502)))+(x504)+(x510)+(((IkReal(-1.00000000000000))*(x516))));
op[42]=((IkReal(-0.0720000000000000))+(((IkReal(-1.00000000000000))*(x444)))+(((IkReal(-0.000296640000000000))*(x132)))+(((IkReal(-0.000296640000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x475)))+(((IkReal(-0.000296640000000000))*(x63)))+(x445)+(x446)+(x477)+(((IkReal(-0.000296640000000000))*(x90)))+(x513)+(((IkReal(-1.00000000000000))*(x518)))+(((IkReal(0.00741600000000000))*(x87)))+(((IkReal(0.00741600000000000))*(x80))));
op[43]=((IkReal(-0.00800000000000000))+(((IkReal(4.10400000000000e-5))*(x132)))+(((IkReal(0.000368000000000000))*(x128)))+(((IkReal(4.10400000000000e-5))*(x71)))+(((IkReal(-1.47200000000000e-5))*(x96)))+(((IkReal(0.0460000000000000))*(x99)))+(((IkReal(-0.00184000000000000))*(x94)))+(((IkReal(0.0460000000000000))*(x154)))+(((IkReal(-0.00184000000000000))*(x102)))+(((IkReal(4.10400000000000e-5))*(x90)))+(((IkReal(-0.00102600000000000))*(x87)))+(((IkReal(-0.00102600000000000))*(x80)))+(((IkReal(-1.47200000000000e-5))*(x76)))+(((IkReal(-1.47200000000000e-5))*(x74)))+(((IkReal(-1.47200000000000e-5))*(x130)))+(((IkReal(-0.00184000000000000))*(x65)))+(((IkReal(-0.00184000000000000))*(x78)))+(((IkReal(0.000368000000000000))*(x103)))+(((IkReal(4.10400000000000e-5))*(x63))));
op[44]=((IkReal(-0.118000000000000))+(((IkReal(-1.00000000000000))*(x446)))+(((IkReal(-0.000311360000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x477)))+(((IkReal(-1.00000000000000))*(x475)))+(((IkReal(0.00778400000000000))*(x80)))+(((IkReal(0.00778400000000000))*(x87)))+(((IkReal(-0.000311360000000000))*(x132)))+(x480)+(x445)+(x444)+(x513)+(((IkReal(-0.000311360000000000))*(x63)))+(((IkReal(-1.00000000000000))*(x517)))+(((IkReal(-0.000311360000000000))*(x90))));
op[45]=((((IkReal(-1.00000000000000))*(x501)))+(((IkReal(-1.00000000000000))*(x467)))+(((IkReal(-0.000945440000000000))*(x119)))+(((IkReal(-0.000945440000000000))*(x111)))+(x460)+(x472)+(x473));
op[46]=((((IkReal(0.000446880000000000))*(x67)))+(((IkReal(0.0558600000000000))*(x69)))+(((IkReal(0.000446880000000000))*(x98)))+(((IkReal(0.0558600000000000))*(x92)))+(((IkReal(-0.0164198000000000))*(x111)))+(((IkReal(-0.0164198000000000))*(x119))));
op[47]=((((IkReal(-1.00000000000000))*(x501)))+(((IkReal(-0.000498560000000000))*(x119)))+(((IkReal(-0.000498560000000000))*(x111)))+(((IkReal(-1.00000000000000))*(x460)))+(x467)+(x472)+(x473));
op[48]=((((IkReal(-1.00000000000000))*(x465)))+(((IkReal(-1.00000000000000))*(x455)))+(x483)+(x454));
op[49]=((((IkReal(-0.00152000000000000))*(x69)))+(((IkReal(-0.00152000000000000))*(x92)))+(((IkReal(0.00256348000000000))*(x67)))+(((IkReal(0.00256348000000000))*(x98)))+(((IkReal(0.000481840000000000))*(x111)))+(((IkReal(0.000481840000000000))*(x119))));
op[50]=((((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.00000000000000))*(x465)))+(x454)+(x455));
op[51]=((IkReal(-0.0230000000000000))+(((IkReal(4.87350000000000e-5))*(x98)))+(((IkReal(-0.000957600000000000))*(x122)))+(((IkReal(-0.000957600000000000))*(x129)))+(((IkReal(-1.00000000000000))*(x501)))+(((IkReal(-1.00000000000000))*(x460)))+(((IkReal(-0.000704520000000000))*(x119)))+(((IkReal(-0.000704520000000000))*(x111)))+(x472)+(((IkReal(4.87350000000000e-5))*(x67))));
op[52]=((((IkReal(-0.00437000000000000))*(x69)))+(((IkReal(9.74700000000000e-5))*(x119)))+(((IkReal(9.74700000000000e-5))*(x111)))+(((IkReal(-3.49600000000000e-5))*(x67)))+(((IkReal(-0.00437000000000000))*(x92)))+(((IkReal(-3.49600000000000e-5))*(x98))));
IkReal x519=((gconst7_7)*(r01));
IkReal x520=((gconst4_6)*(r01));
IkReal x521=((IkReal(0.0460000000000000))*(r11));
IkReal x522=((gconst3_3)*(r10));
IkReal x523=((gconst3_7)*(r00));
IkReal x524=((IkReal(0.190000000000000))*(pz));
IkReal x525=((gconst3_3)*(rxp0_1));
IkReal x526=((gconst3_6)*(r00));
IkReal x527=((gconst7_0)*(r01));
IkReal x528=((gconst1_3)*(npy));
IkReal x529=((gconst3_2)*(r00));
IkReal x530=((gconst4_7)*(r11));
IkReal x531=((gconst0_0)*(r20));
IkReal x532=((gconst7_6)*(rxp1_0));
IkReal x533=((gconst0_0)*(npx));
IkReal x534=((gconst4_2)*(r01));
IkReal x535=((gconst6_6)*(r10));
IkReal x536=((gconst4_7)*(r01));
IkReal x537=((gconst3_0)*(rxp0_1));
IkReal x538=((IkReal(0.0160000000000000))*(gconst6_6));
IkReal x539=((gconst7_2)*(rxp1_0));
IkReal x540=((gconst1_7)*(r21));
IkReal x541=((IkReal(0.00524800000000000))*(gconst7_0));
IkReal x542=((gconst6_7)*(r00));
IkReal x543=((gconst6_0)*(r00));
IkReal x544=((gconst4_0)*(r11));
IkReal x545=((IkReal(0.172840000000000))*(gconst6_0));
IkReal x546=((gconst6_7)*(rxp0_0));
IkReal x547=((IkReal(0.588000000000000))*(gconst3_6));
IkReal x548=((gconst3_0)*(r10));
IkReal x549=((gconst4_0)*(rxp1_1));
IkReal x550=((IkReal(0.0101440000000000))*(gconst0_7));
IkReal x551=((gconst7_7)*(rxp1_0));
IkReal x552=((IkReal(0.0758270000000000))*(gconst7_2));
IkReal x553=((gconst4_3)*(r11));
IkReal x554=((gconst3_7)*(rxp0_1));
IkReal x555=((gconst3_7)*(r10));
IkReal x556=((gconst7_0)*(rxp1_0));
IkReal x557=((gconst4_2)*(pp));
IkReal x558=((gconst1_3)*(r21));
IkReal x559=((gconst7_2)*(pp));
IkReal x560=((IkReal(0.0180500000000000))*(pz));
IkReal x561=((gconst0_7)*(r20));
IkReal x562=((IkReal(0.0160000000000000))*(r11));
IkReal x563=((gconst4_0)*(r01));
IkReal x564=((gconst3_0)*(r00));
IkReal x565=((gconst4_7)*(rxp1_1));
IkReal x566=((gconst1_0)*(npy));
IkReal x567=((gconst6_7)*(r10));
IkReal x568=((IkReal(0.271000000000000))*(gconst7_3));
IkReal x569=((gconst7_7)*(r11));
IkReal x570=((IkReal(0.0440000000000000))*(r01));
IkReal x571=((gconst4_3)*(rxp1_1));
IkReal x572=((IkReal(0.317000000000000))*(gconst7_6));
IkReal x573=((gconst3_2)*(pp));
IkReal x574=((gconst1_0)*(r21));
IkReal x575=((IkReal(0.0100800000000000))*(r11));
IkReal x576=((gconst4_2)*(rxp1_1));
IkReal x577=((IkReal(1.00000000000000))*(pp));
IkReal x578=((gconst6_0)*(r10));
IkReal x579=((gconst0_3)*(r20));
IkReal x580=((gconst7_0)*(r11));
IkReal x581=((IkReal(0.588000000000000))*(r00));
IkReal x582=((gconst7_3)*(r01));
IkReal x583=((gconst6_0)*(rxp0_0));
IkReal x584=((gconst3_6)*(r10));
IkReal x585=((gconst6_2)*(rxp0_0));
IkReal x586=((gconst4_2)*(r11));
IkReal x587=((gconst6_2)*(r10));
IkReal x588=((gconst7_3)*(rxp1_0));
IkReal x589=((gconst6_3)*(r00));
IkReal x590=((gconst6_6)*(r00));
IkReal x591=((gconst1_7)*(npy));
IkReal x592=((gconst4_6)*(r11));
IkReal x593=((gconst6_3)*(r10));
IkReal x594=((gconst1_2)*(r21));
IkReal x595=((gconst0_7)*(npx));
IkReal x596=((gconst0_3)*(npx));
IkReal x597=((IkReal(0.0950000000000000))*(pp));
IkReal x598=((gconst6_2)*(r00));
IkReal x599=((gconst3_3)*(r00));
IkReal x600=((gconst3_2)*(r10));
IkReal x601=((gconst6_6)*(rxp0_0));
IkReal x602=((gconst4_3)*(r01));
IkReal x603=((gconst4_6)*(rxp1_1));
IkReal x604=((gconst7_3)*(r11));
IkReal x605=((gconst3_6)*(rxp0_1));
IkReal x606=((gconst7_6)*(r01));
IkReal x607=((gconst6_3)*(rxp0_0));
IkReal x608=((gconst3_2)*(rxp0_1));
IkReal x609=((gconst0_2)*(r20));
IkReal x610=((IkReal(0.00216800000000000))*(gconst7_2));
IkReal x611=((gconst7_6)*(r11));
IkReal x612=((IkReal(0.172840000000000))*(x527));
IkReal x613=((IkReal(0.172840000000000))*(x548));
IkReal x614=((IkReal(0.172840000000000))*(x543));
IkReal x615=((IkReal(0.172840000000000))*(x544));
IkReal x616=((IkReal(0.00470400000000000))*(x555));
IkReal x617=((IkReal(0.00470400000000000))*(x530));
IkReal x618=((IkReal(0.00470400000000000))*(x519));
IkReal x619=((IkReal(0.588000000000000))*(x522));
IkReal x620=((IkReal(0.588000000000000))*(x553));
IkReal x621=((gconst6_3)*(x581));
IkReal x622=((IkReal(0.588000000000000))*(x582));
IkReal x623=((IkReal(0.00470400000000000))*(x542));
IkReal x624=((IkReal(0.000368000000000000))*(x519));
IkReal x625=((IkReal(0.000368000000000000))*(x555));
IkReal x626=((IkReal(0.000368000000000000))*(x542));
IkReal x627=((IkReal(0.000368000000000000))*(x530));
IkReal x628=((IkReal(0.00102600000000000))*(x543));
IkReal x629=((IkReal(0.0460000000000000))*(x522));
IkReal x630=((IkReal(0.00102600000000000))*(x544));
IkReal x631=((IkReal(0.0460000000000000))*(x589));
IkReal x632=((IkReal(0.0460000000000000))*(x582));
IkReal x633=((IkReal(0.00102600000000000))*(x527));
IkReal x634=((gconst4_3)*(x521));
IkReal x635=((IkReal(0.00102600000000000))*(x548));
IkReal x636=((IkReal(0.00470400000000000))*(x523));
IkReal x637=((IkReal(0.172840000000000))*(x580));
IkReal x638=((IkReal(0.00470400000000000))*(x536));
IkReal x639=((gconst3_3)*(x581));
IkReal x640=((r10)*(x545));
IkReal x641=((IkReal(0.588000000000000))*(x602));
IkReal x642=((IkReal(0.172840000000000))*(x564));
IkReal x643=((IkReal(0.00470400000000000))*(x569));
IkReal x644=((IkReal(0.172840000000000))*(x563));
IkReal x645=((IkReal(0.588000000000000))*(x593));
IkReal x646=((IkReal(0.588000000000000))*(x604));
IkReal x647=((IkReal(0.00470400000000000))*(x567));
IkReal x648=((IkReal(0.00102600000000000))*(x564));
IkReal x649=((IkReal(0.000368000000000000))*(x569));
IkReal x650=((IkReal(0.00102600000000000))*(x563));
IkReal x651=((IkReal(0.0460000000000000))*(x599));
IkReal x652=((IkReal(0.000368000000000000))*(x567));
IkReal x653=((IkReal(0.0460000000000000))*(x602));
IkReal x654=((IkReal(0.00102600000000000))*(x578));
IkReal x655=((IkReal(0.000368000000000000))*(x523));
IkReal x656=((IkReal(0.0460000000000000))*(x593));
IkReal x657=((gconst7_3)*(x521));
IkReal x658=((IkReal(0.00102600000000000))*(x580));
IkReal x659=((IkReal(0.000368000000000000))*(x536));
IkReal x660=((IkReal(0.172840000000000))*(x537));
IkReal x661=((IkReal(0.172840000000000))*(x549));
IkReal x662=((IkReal(0.172840000000000))*(x556));
IkReal x663=((rxp0_0)*(x545));
IkReal x664=((IkReal(0.00470400000000000))*(x565));
IkReal x665=((IkReal(0.588000000000000))*(x607));
IkReal x666=((IkReal(0.00470400000000000))*(x546));
IkReal x667=((IkReal(0.00470400000000000))*(x554));
IkReal x668=((IkReal(0.00470400000000000))*(x551));
IkReal x669=((IkReal(0.588000000000000))*(x588));
IkReal x670=((IkReal(0.588000000000000))*(x571));
IkReal x671=((IkReal(0.588000000000000))*(x525));
IkReal x672=((IkReal(0.000368000000000000))*(x551));
IkReal x673=((IkReal(0.000368000000000000))*(x554));
IkReal x674=((IkReal(0.000368000000000000))*(x546));
IkReal x675=((IkReal(0.000368000000000000))*(x565));
IkReal x676=((IkReal(0.00102600000000000))*(x556));
IkReal x677=((IkReal(0.0460000000000000))*(x588));
IkReal x678=((IkReal(0.0460000000000000))*(x571));
IkReal x679=((IkReal(0.00102600000000000))*(x583));
IkReal x680=((IkReal(0.0460000000000000))*(x525));
IkReal x681=((IkReal(0.00102600000000000))*(x549));
IkReal x682=((IkReal(0.0460000000000000))*(x607));
IkReal x683=((IkReal(0.00102600000000000))*(x537));
IkReal x684=((IkReal(0.00470400000000000))*(x540));
IkReal x685=((IkReal(0.588000000000000))*(x558));
IkReal x686=((IkReal(0.588000000000000))*(x579));
IkReal x687=((IkReal(0.00470400000000000))*(x561));
IkReal x688=((IkReal(0.172840000000000))*(x574));
IkReal x689=((IkReal(0.172840000000000))*(x531));
IkReal x690=((IkReal(0.0269840000000000))*(x540));
IkReal x691=((IkReal(0.00507200000000000))*(x531));
IkReal x692=((IkReal(0.0269840000000000))*(x561));
IkReal x693=((IkReal(0.00507200000000000))*(x574));
IkReal x694=((IkReal(0.00102600000000000))*(x574));
IkReal x695=((IkReal(0.00102600000000000))*(x531));
IkReal x696=((IkReal(0.0460000000000000))*(x579));
IkReal x697=((IkReal(0.0460000000000000))*(x558));
IkReal x698=((IkReal(0.000368000000000000))*(x540));
IkReal x699=((IkReal(0.000368000000000000))*(x561));
IkReal x700=((IkReal(0.0235200000000000))*(x582));
IkReal x701=((IkReal(0.000188160000000000))*(x542));
IkReal x702=((IkReal(0.0235200000000000))*(x522));
IkReal x703=((IkReal(0.0235200000000000))*(x553));
IkReal x704=((IkReal(0.172840000000000))*(x533));
IkReal x705=((IkReal(0.0235200000000000))*(x589));
IkReal x706=((IkReal(0.000188160000000000))*(x555));
IkReal x707=((IkReal(0.000188160000000000))*(x530));
IkReal x708=((IkReal(0.000188160000000000))*(x519));
IkReal x709=((IkReal(0.172840000000000))*(x566));
IkReal x710=((IkReal(0.00470400000000000))*(x591));
IkReal x711=((IkReal(0.00691360000000000))*(x544));
IkReal x712=((IkReal(0.00691360000000000))*(x543));
IkReal x713=((IkReal(0.00691360000000000))*(x527));
IkReal x714=((IkReal(0.588000000000000))*(x596));
IkReal x715=((IkReal(0.00470400000000000))*(x595));
IkReal x716=((IkReal(0.588000000000000))*(x528));
IkReal x717=((IkReal(0.00691360000000000))*(x548));
IkReal x718=((IkReal(4.10400000000000e-5))*(x543));
IkReal x719=((IkReal(4.10400000000000e-5))*(x548));
IkReal x720=((IkReal(0.00184000000000000))*(x553));
IkReal x721=((IkReal(4.10400000000000e-5))*(x527));
IkReal x722=((IkReal(0.00184000000000000))*(x582));
IkReal x723=((IkReal(0.000368000000000000))*(x591));
IkReal x724=((IkReal(4.10400000000000e-5))*(x544));
IkReal x725=((IkReal(0.000368000000000000))*(x595));
IkReal x726=((IkReal(0.00184000000000000))*(x589));
IkReal x727=((IkReal(0.00184000000000000))*(x522));
IkReal x728=((IkReal(0.00102600000000000))*(x533));
IkReal x729=((IkReal(0.0460000000000000))*(x528));
IkReal x730=((IkReal(1.47200000000000e-5))*(x542));
IkReal x731=((IkReal(1.47200000000000e-5))*(x519));
IkReal x732=((IkReal(0.0460000000000000))*(x596));
IkReal x733=((IkReal(1.47200000000000e-5))*(x555));
IkReal x734=((IkReal(1.47200000000000e-5))*(x530));
IkReal x735=((IkReal(0.00102600000000000))*(x566));
IkReal x736=((IkReal(0.000446880000000000))*(x540));
IkReal x737=((IkReal(0.0558600000000000))*(x558));
IkReal x738=((IkReal(0.0558600000000000))*(x579));
IkReal x739=((IkReal(0.000446880000000000))*(x561));
IkReal x740=((IkReal(0.0164198000000000))*(x531));
IkReal x741=((IkReal(0.0164198000000000))*(x574));
IkReal x742=((IkReal(0.000481840000000000))*(x574));
IkReal x743=((IkReal(0.000481840000000000))*(x531));
IkReal x744=((IkReal(0.00256348000000000))*(x540));
IkReal x745=((IkReal(0.00256348000000000))*(x561));
IkReal x746=((IkReal(9.74700000000000e-5))*(x574));
IkReal x747=((IkReal(9.74700000000000e-5))*(x531));
IkReal x748=((IkReal(0.00437000000000000))*(x558));
IkReal x749=((IkReal(0.00437000000000000))*(x579));
IkReal x750=((IkReal(3.49600000000000e-5))*(x561));
IkReal x751=((IkReal(3.49600000000000e-5))*(x540));
IkReal x752=((IkReal(0.0864200000000000))*(x555));
IkReal x753=((r11)*(x557));
IkReal x754=((r01)*(x559));
IkReal x755=((IkReal(0.00400000000000000))*(x592));
IkReal x756=((IkReal(0.00400000000000000))*(x584));
IkReal x757=((r10)*(x573));
IkReal x758=((IkReal(0.00400000000000000))*(x606));
IkReal x759=((IkReal(0.0864200000000000))*(x542));
IkReal x760=((IkReal(0.00400000000000000))*(x590));
IkReal x761=((IkReal(0.0864200000000000))*(x530));
IkReal x762=((pp)*(x598));
IkReal x763=((IkReal(0.0864200000000000))*(x519));
IkReal x764=((IkReal(0.0440000000000000))*(x589));
IkReal x765=((IkReal(0.0440000000000000))*(x553));
IkReal x766=((IkReal(0.0440000000000000))*(x522));
IkReal x767=((IkReal(0.0758270000000000))*(x586));
IkReal x768=((r01)*(x552));
IkReal x769=((gconst7_3)*(x570));
IkReal x770=((IkReal(0.0758270000000000))*(x598));
IkReal x771=((IkReal(0.0758270000000000))*(x600));
IkReal x772=((IkReal(0.00507200000000000))*(x544));
IkReal x773=((IkReal(0.00507200000000000))*(x548));
IkReal x774=((IkReal(0.0269840000000000))*(x519));
IkReal x775=((IkReal(0.0269840000000000))*(x530));
IkReal x776=((IkReal(0.00507200000000000))*(x527));
IkReal x777=((IkReal(0.0269840000000000))*(x555));
IkReal x778=((IkReal(0.00507200000000000))*(x543));
IkReal x779=((IkReal(0.0269840000000000))*(x542));
IkReal x780=((IkReal(0.317000000000000))*(x592));
IkReal x781=((IkReal(0.317000000000000))*(x590));
IkReal x782=((IkReal(0.00216800000000000))*(x598));
IkReal x783=((r01)*(x568));
IkReal x784=((IkReal(0.00216800000000000))*(x600));
IkReal x785=((IkReal(0.317000000000000))*(x584));
IkReal x786=((r01)*(x572));
IkReal x787=((IkReal(0.0134920000000000))*(x543));
IkReal x788=((IkReal(0.0134920000000000))*(x548));
IkReal x789=((IkReal(0.271000000000000))*(x522));
IkReal x790=((IkReal(0.0134920000000000))*(x544));
IkReal x791=((IkReal(0.271000000000000))*(x553));
IkReal x792=((IkReal(0.271000000000000))*(x589));
IkReal x793=((IkReal(0.00216800000000000))*(x586));
IkReal x794=((r01)*(x610));
IkReal x795=((IkReal(0.0134920000000000))*(x527));
IkReal x796=((IkReal(0.00253600000000000))*(x555));
IkReal x797=((IkReal(0.00253600000000000))*(x530));
IkReal x798=((IkReal(0.00253600000000000))*(x519));
IkReal x799=((IkReal(0.00253600000000000))*(x542));
IkReal x800=((IkReal(0.0100800000000000))*(x598));
IkReal x801=((IkReal(0.0100800000000000))*(x600));
IkReal x802=((gconst4_2)*(x575));
IkReal x803=((IkReal(0.0100800000000000))*(gconst7_2)*(r01));
IkReal x804=((IkReal(0.000513000000000000))*(x530));
IkReal x805=((IkReal(0.000513000000000000))*(x542));
IkReal x806=((IkReal(0.000513000000000000))*(x555));
IkReal x807=((IkReal(0.000513000000000000))*(x519));
IkReal x808=((IkReal(0.0864200000000000))*(x569));
IkReal x809=((IkReal(0.0758270000000000))*(x529));
IkReal x810=((IkReal(0.0758270000000000))*(x534));
IkReal x811=((gconst4_3)*(x570));
IkReal x812=((r11)*(x559));
IkReal x813=((IkReal(0.0440000000000000))*(x599));
IkReal x814=((IkReal(0.00400000000000000))*(x611));
IkReal x815=((IkReal(0.0864200000000000))*(x567));
IkReal x816=((IkReal(0.00400000000000000))*(x535));
IkReal x817=((pp)*(x587));
IkReal x818=((IkReal(0.0864200000000000))*(x523));
IkReal x819=((IkReal(0.00400000000000000))*(x526));
IkReal x820=((IkReal(0.00400000000000000))*(x520));
IkReal x821=((r11)*(x552));
IkReal x822=((IkReal(0.0440000000000000))*(x604));
IkReal x823=((IkReal(0.0758270000000000))*(x587));
IkReal x824=((IkReal(0.0864200000000000))*(x536));
IkReal x825=((IkReal(0.0440000000000000))*(x593));
IkReal x826=((IkReal(0.0269840000000000))*(x569));
IkReal x827=((IkReal(0.00507200000000000))*(x580));
IkReal x828=((IkReal(0.0269840000000000))*(x567));
IkReal x829=((IkReal(0.00507200000000000))*(x578));
IkReal x830=((IkReal(0.00507200000000000))*(x564));
IkReal x831=((IkReal(0.00507200000000000))*(x563));
IkReal x832=((IkReal(0.0269840000000000))*(x536));
IkReal x833=((IkReal(0.0269840000000000))*(x523));
IkReal x834=((IkReal(0.0134920000000000))*(x580));
IkReal x835=((IkReal(0.00216800000000000))*(x587));
IkReal x836=((r11)*(x568));
IkReal x837=((IkReal(0.317000000000000))*(x535));
IkReal x838=((IkReal(0.00253600000000000))*(x523));
IkReal x839=((r11)*(x572));
IkReal x840=((IkReal(0.0134920000000000))*(x578));
IkReal x841=((IkReal(0.00253600000000000))*(x536));
IkReal x842=((r11)*(x610));
IkReal x843=((IkReal(0.271000000000000))*(x593));
IkReal x844=((IkReal(0.00216800000000000))*(x529));
IkReal x845=((IkReal(0.317000000000000))*(x526));
IkReal x846=((IkReal(0.0134920000000000))*(x564));
IkReal x847=((IkReal(0.00253600000000000))*(x569));
IkReal x848=((IkReal(0.271000000000000))*(x599));
IkReal x849=((IkReal(0.0134920000000000))*(x563));
IkReal x850=((IkReal(0.00253600000000000))*(x567));
IkReal x851=((IkReal(0.271000000000000))*(x602));
IkReal x852=((IkReal(0.00216800000000000))*(x534));
IkReal x853=((IkReal(0.317000000000000))*(x520));
IkReal x854=((IkReal(0.0100800000000000))*(x587));
IkReal x855=((IkReal(0.000513000000000000))*(x536));
IkReal x856=((IkReal(0.000513000000000000))*(x523));
IkReal x857=((gconst7_2)*(x575));
IkReal x858=((IkReal(0.000513000000000000))*(x567));
IkReal x859=((IkReal(0.0100800000000000))*(x529));
IkReal x860=((IkReal(0.000513000000000000))*(x569));
IkReal x861=((IkReal(0.0100800000000000))*(x534));
IkReal x862=((pp)*(x585));
IkReal x863=((IkReal(0.00400000000000000))*(x605));
IkReal x864=((IkReal(0.00400000000000000))*(x601));
IkReal x865=((IkReal(0.00400000000000000))*(x532));
IkReal x866=((rxp1_1)*(x557));
IkReal x867=((pp)*(x539));
IkReal x868=((rxp0_1)*(x573));
IkReal x869=((IkReal(0.0864200000000000))*(x565));
IkReal x870=((IkReal(0.00400000000000000))*(x603));
IkReal x871=((IkReal(0.0864200000000000))*(x551));
IkReal x872=((IkReal(0.0864200000000000))*(x546));
IkReal x873=((IkReal(0.0864200000000000))*(x554));
IkReal x874=((IkReal(0.0758270000000000))*(x608));
IkReal x875=((IkReal(0.0440000000000000))*(x525));
IkReal x876=((IkReal(0.0758270000000000))*(x585));
IkReal x877=((IkReal(0.0440000000000000))*(x588));
IkReal x878=((IkReal(0.0440000000000000))*(x607));
IkReal x879=((IkReal(0.0758270000000000))*(x576));
IkReal x880=((IkReal(0.0758270000000000))*(x539));
IkReal x881=((IkReal(0.0440000000000000))*(x571));
IkReal x882=((IkReal(0.0269840000000000))*(x551));
IkReal x883=((IkReal(0.00507200000000000))*(x549));
IkReal x884=((IkReal(0.0269840000000000))*(x565));
IkReal x885=((IkReal(0.00507200000000000))*(x537));
IkReal x886=((IkReal(0.0269840000000000))*(x546));
IkReal x887=((IkReal(0.00507200000000000))*(x556));
IkReal x888=((IkReal(0.0269840000000000))*(x554));
IkReal x889=((IkReal(0.00507200000000000))*(x583));
IkReal x890=((IkReal(0.0134920000000000))*(x549));
IkReal x891=((IkReal(0.317000000000000))*(x605));
IkReal x892=((IkReal(0.0134920000000000))*(x556));
IkReal x893=((rxp1_0)*(x568));
IkReal x894=((IkReal(0.00216800000000000))*(x585));
IkReal x895=((IkReal(0.271000000000000))*(x571));
IkReal x896=((IkReal(0.271000000000000))*(x607));
IkReal x897=((IkReal(0.00216800000000000))*(x539));
IkReal x898=((IkReal(0.317000000000000))*(x603));
IkReal x899=((IkReal(0.0134920000000000))*(x583));
IkReal x900=((IkReal(0.0134920000000000))*(x537));
IkReal x901=((IkReal(0.00216800000000000))*(x576));
IkReal x902=((IkReal(0.317000000000000))*(x601));
IkReal x903=((IkReal(0.317000000000000))*(x532));
IkReal x904=((IkReal(0.00216800000000000))*(x608));
IkReal x905=((IkReal(0.271000000000000))*(x525));
IkReal x906=((IkReal(0.00253600000000000))*(x565));
IkReal x907=((IkReal(0.00253600000000000))*(x551));
IkReal x908=((IkReal(0.00253600000000000))*(x554));
IkReal x909=((IkReal(0.00253600000000000))*(x546));
IkReal x910=((x519)*(x524));
IkReal x911=((x524)*(x555));
IkReal x912=((x524)*(x542));
IkReal x913=((x524)*(x530));
IkReal x914=((x524)*(x569));
IkReal x915=((x524)*(x567));
IkReal x916=((x534)*(x577));
IkReal x917=((x523)*(x524));
IkReal x918=((x524)*(x536));
IkReal x919=((x529)*(x577));
IkReal x920=((x524)*(x554));
IkReal x921=((x524)*(x546));
IkReal x922=((x524)*(x565));
IkReal x923=((x524)*(x551));
IkReal x924=((x646)+(x645));
IkReal x925=((x714)+(x716));
IkReal x926=((x858)+(x860));
IkReal x927=((x859)+(x861));
IkReal x928=((x823)+(x821));
IkReal x929=((x815)+(x808));
IkReal x930=((x694)+(x695));
IkReal x931=((x696)+(x697));
IkReal x932=((x689)+(x688));
IkReal x933=((x816)+(x814));
IkReal x934=((x857)+(x854));
IkReal x935=((x856)+(x855));
IkReal x936=((x736)+(x739));
IkReal x937=((x751)+(x750));
IkReal x938=((x746)+(x747));
IkReal x939=((x698)+(x699));
IkReal x940=((x656)+(x657));
IkReal x941=((x686)+(x685));
IkReal x942=((x740)+(x741));
IkReal x943=((x818)+(x824));
IkReal x944=((x651)+(x653));
IkReal x945=((x810)+(x809));
IkReal x946=((x819)+(x820));
IkReal x947=((x641)+(x639));
IkReal x948=((x732)+(x729));
IkReal x949=((x687)+(x684));
IkReal x950=((IkReal(-0.00800000000000000))+(x737)+(x738));
IkReal x951=((IkReal(-0.00800000000000000))+(x748)+(x749));
IkReal x952=((x830)+(x831)+(x832)+(x833));
IkReal x953=((x829)+(x828)+(x827)+(x826));
IkReal x954=((((IkReal(0.0269840000000000))*(x595)))+(((IkReal(0.0269840000000000))*(x591)))+(((IkReal(0.00507200000000000))*(x566)))+(((IkReal(0.00507200000000000))*(x533))));
IkReal x955=((x668)+(x664)+(x667)+(x666));
IkReal x956=((x702)+(x703)+(x700)+(x705));
IkReal x957=((x878)+(x875)+(x877)+(x881));
IkReal x958=((x879)+(x874)+(x876)+(x880));
IkReal x959=((x647)+(x644)+(x643)+(x642));
IkReal x960=((x669)+(x665)+(x670)+(x671));
IkReal x961=((x661)+(x660)+(x663)+(x662));
IkReal x962=((x835)+(x836)+(x843)+(x842));
IkReal x963=((x618)+(x616)+(x617)+(x623));
IkReal x964=((x614)+(x615)+(x612)+(x613));
IkReal x965=((x619)+(x621)+(x620)+(x622));
IkReal x966=((x690)+(x691)+(x692)+(x693));
IkReal x967=((x906)+(x907)+(x908)+(x909));
IkReal x968=((x649)+(x648)+(x650)+(x652));
IkReal x969=((x755)+(x756)+(x758)+(x760));
IkReal x970=((x752)+(x759)+(x761)+(x763));
IkReal x971=((x678)+(x677)+(x682)+(x680));
IkReal x972=((x679)+(x676)+(x683)+(x681));
IkReal x973=((x654)+(x655)+(x658)+(x659));
IkReal x974=((x852)+(x851)+(x844)+(x848));
IkReal x975=((x805)+(x804)+(x807)+(x806));
IkReal x976=((x801)+(x800)+(x803)+(x802));
IkReal x977=((x672)+(x673)+(x674)+(x675));
IkReal x978=((x640)+(x636)+(x637)+(x638));
IkReal x979=((x797)+(x796)+(x799)+(x798));
IkReal x980=((x744)+(x745)+(x742)+(x743));
IkReal x981=((x628)+(x635)+(x633)+(x630));
IkReal x982=((x629)+(x634)+(x632)+(x631));
IkReal x983=((x625)+(x624)+(x627)+(x626));
IkReal x984=((x720)+(x722)+(x726)+(x727));
IkReal x985=((x769)+(x764)+(x765)+(x766));
IkReal x986=((x711)+(x710)+(x713)+(x712)+(x715)+(x717));
IkReal x987=((x708)+(x709)+(x701)+(x706)+(x707)+(x704));
IkReal x988=((x834)+(x837)+(x838)+(x839)+(x841)+(x840));
IkReal x989=((x853)+(x850)+(x845)+(x847)+(x846)+(x849));
IkReal x990=((x735)+(x734)+(x733)+(x731)+(x730)+(x728));
IkReal x991=((x719)+(x718)+(x721)+(x723)+(x724)+(x725));
IkReal x992=((x817)+(x812)+(x813)+(x811)+(x915)+(x914));
IkReal x993=((x773)+(x772)+(x777)+(x776)+(x775)+(x774)+(x779)+(x778));
IkReal x994=((x885)+(x884)+(x887)+(x886)+(x883)+(x882)+(x889)+(x888));
IkReal x995=((((IkReal(0.00107936000000000))*(x519)))+(((IkReal(0.00107936000000000))*(x555)))+(((IkReal(0.000202880000000000))*(x544)))+(((IkReal(0.000202880000000000))*(x543)))+(((IkReal(0.000202880000000000))*(x548)))+(((IkReal(0.000202880000000000))*(x527)))+(((IkReal(0.00107936000000000))*(x530)))+(((IkReal(0.00107936000000000))*(x542))));
IkReal x996=((x869)+(x865)+(x864)+(x863)+(x870)+(x871)+(x872)+(x873));
IkReal x997=((x896)+(x897)+(x894)+(x895)+(x893)+(x904)+(x905)+(x901));
IkReal x998=((x892)+(x890)+(x891)+(x898)+(x899)+(x900)+(x902)+(x903));
IkReal x999=((x771)+(x770)+(x768)+(x767)+(x985));
IkReal x1000=((x790)+(x795)+(x780)+(x781)+(x786)+(x787)+(x785)+(x788));
IkReal x1001=((x791)+(x793)+(x792)+(x794)+(x782)+(x783)+(x784)+(x789));
IkReal x1002=((x868)+(x867)+(x866)+(x862)+(x922)+(x923)+(x920)+(x921));
IkReal x1003=((x822)+(x825)+(x933)+(x919)+(x918)+(x917)+(x916));
IkReal x1004=((x822)+(x825)+(x919)+(x918)+(x917)+(x916)+(x946));
IkReal x1005=((x754)+(x757)+(x753)+(x762)+(x913)+(x912)+(x911)+(x910));
op[53]=((IkReal(-0.0230000000000000))+(((IkReal(0.00342000000000000))*(x579)))+(((IkReal(-0.000739480000000000))*(x531)))+(((IkReal(-1.00000000000000))*(x597)*(x609)))+(((IkReal(-0.000739480000000000))*(x574)))+(((IkReal(-4.87350000000000e-5))*(x540)))+(((IkReal(-1.00000000000000))*(x594)*(x597)))+(pz)+(((IkReal(-1.00000000000000))*(x560)*(x561)))+(((IkReal(-0.000957600000000000))*(x609)))+(((IkReal(0.000380000000000000))*(gconst1_6)*(r21)))+(((IkReal(-4.87350000000000e-5))*(x561)))+(((IkReal(-1.00000000000000))*(x540)*(x560)))+(((IkReal(0.000380000000000000))*(gconst0_6)*(r20)))+(((IkReal(-0.000957600000000000))*(x594)))+(((IkReal(0.00342000000000000))*(x558))));
op[54]=((IkReal(-2.00000000000000))+(x963)+(((IkReal(-1.00000000000000))*(x965)))+(((IkReal(-1.00000000000000))*(x964))));
op[55]=((((IkReal(0.345680000000000))*(x519)))+(((IkReal(0.345680000000000))*(x530)))+(((IkReal(0.345680000000000))*(x542)))+(((IkReal(0.345680000000000))*(x555)))+(((IkReal(0.00940800000000000))*(x544)))+(((IkReal(0.00940800000000000))*(x543)))+(((IkReal(0.00940800000000000))*(x548)))+(((IkReal(0.00940800000000000))*(x527))));
op[56]=((IkReal(2.00000000000000))+(x964)+(((IkReal(-1.00000000000000))*(x965)))+(((IkReal(-1.00000000000000))*(x963))));
op[57]=x993;
op[58]=((IkReal(8.00000000000000))+(((IkReal(-0.0101440000000000))*(x519)))+(((IkReal(-0.0101440000000000))*(x530)))+(((IkReal(-0.0101440000000000))*(x542)))+(((IkReal(-0.0101440000000000))*(x555)))+(((IkReal(0.0539680000000000))*(x527)))+(((IkReal(0.0539680000000000))*(x543)))+(((IkReal(0.0539680000000000))*(x544)))+(((IkReal(0.0539680000000000))*(x548))));
op[59]=((IkReal(-1.00000000000000))*(x993));
op[60]=((IkReal(2.00000000000000))+(((IkReal(-1.00000000000000))*(x983)))+(((IkReal(-1.00000000000000))*(x982)))+(x981));
op[61]=((((IkReal(-0.00205200000000000))*(x542)))+(((IkReal(-0.00205200000000000))*(x555)))+(((IkReal(-0.000736000000000000))*(x527)))+(((IkReal(-0.000736000000000000))*(x548)))+(((IkReal(-0.000736000000000000))*(x543)))+(((IkReal(-0.000736000000000000))*(x544)))+(((IkReal(-0.00205200000000000))*(x530)))+(((IkReal(-0.00205200000000000))*(x519))));
op[62]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x982)))+(((IkReal(-1.00000000000000))*(x981)))+(x983));
op[63]=((((IkReal(-1.00000000000000))*(x924)))+(x959)+(x947)+(((IkReal(-1.00000000000000))*(x978))));
op[64]=((((IkReal(0.00940800000000000))*(x578)))+(((IkReal(0.345680000000000))*(x569)))+(((IkReal(0.345680000000000))*(x567)))+(((IkReal(0.00940800000000000))*(x580)))+(((IkReal(-0.00940800000000000))*(x563)))+(((IkReal(-0.00940800000000000))*(x564)))+(((IkReal(-0.345680000000000))*(x536)))+(((IkReal(-0.345680000000000))*(x523))));
op[65]=((((IkReal(-1.00000000000000))*(x924)))+(((IkReal(-1.00000000000000))*(x959)))+(x978)+(x947));
op[66]=((((IkReal(-1.00000000000000))*(x952)))+(x953));
op[67]=((((IkReal(0.0539680000000000))*(x580)))+(((IkReal(0.0539680000000000))*(x578)))+(((IkReal(-0.0539680000000000))*(x563)))+(((IkReal(-0.0539680000000000))*(x564)))+(((IkReal(0.0101440000000000))*(x523)))+(((IkReal(0.0101440000000000))*(x536)))+(((IkReal(-0.0101440000000000))*(x569)))+(((IkReal(-0.0101440000000000))*(x567))));
op[68]=((((IkReal(-1.00000000000000))*(x953)))+(x952));
op[69]=((((IkReal(-1.00000000000000))*(x940)))+(x973)+(x944)+(((IkReal(-1.00000000000000))*(x968))));
op[70]=((((IkReal(0.00205200000000000))*(x523)))+(((IkReal(-0.000736000000000000))*(x578)))+(((IkReal(0.000736000000000000))*(x563)))+(((IkReal(0.000736000000000000))*(x564)))+(((IkReal(0.00205200000000000))*(x536)))+(((IkReal(-0.00205200000000000))*(x567)))+(((IkReal(-0.00205200000000000))*(x569)))+(((IkReal(-0.000736000000000000))*(x580))));
op[71]=((((IkReal(-1.00000000000000))*(x940)))+(x968)+(x944)+(((IkReal(-1.00000000000000))*(x973))));
op[72]=((x955)+(((IkReal(-1.00000000000000))*(x961)))+(((IkReal(-1.00000000000000))*(x960))));
op[73]=((((IkReal(0.00940800000000000))*(x537)))+(((IkReal(0.345680000000000))*(x565)))+(((IkReal(0.00940800000000000))*(x583)))+(((IkReal(0.345680000000000))*(x546)))+(((IkReal(0.00940800000000000))*(x556)))+(((IkReal(0.345680000000000))*(x554)))+(((IkReal(0.345680000000000))*(x551)))+(((IkReal(0.00940800000000000))*(x549))));
op[74]=((((IkReal(-1.00000000000000))*(x955)))+(x961)+(((IkReal(-1.00000000000000))*(x960))));
op[75]=x994;
op[76]=((((IkReal(-0.0101440000000000))*(x546)))+(((IkReal(0.0539680000000000))*(x583)))+(((IkReal(-0.0101440000000000))*(x554)))+(((IkReal(-0.0101440000000000))*(x551)))+(((IkReal(0.0539680000000000))*(x537)))+(((IkReal(0.0539680000000000))*(x549)))+(((IkReal(0.0539680000000000))*(x556)))+(((IkReal(-0.0101440000000000))*(x565))));
op[77]=((IkReal(-1.00000000000000))*(x994));
op[78]=((x972)+(((IkReal(-1.00000000000000))*(x971)))+(((IkReal(-1.00000000000000))*(x977))));
op[79]=((((IkReal(-0.00205200000000000))*(x546)))+(((IkReal(-0.00205200000000000))*(x551)))+(((IkReal(-0.00205200000000000))*(x554)))+(((IkReal(-0.000736000000000000))*(x537)))+(((IkReal(-0.000736000000000000))*(x549)))+(((IkReal(-0.000736000000000000))*(x556)))+(((IkReal(-0.00205200000000000))*(x565)))+(((IkReal(-0.000736000000000000))*(x583))));
op[80]=((x977)+(((IkReal(-1.00000000000000))*(x972)))+(((IkReal(-1.00000000000000))*(x971))));
op[81]=((((IkReal(-1.00000000000000))*(x949)))+(x932)+(x941));
op[82]=((IkReal(-4.00000000000000))+(((IkReal(-0.345680000000000))*(x561)))+(((IkReal(-0.00940800000000000))*(x531)))+(((IkReal(-0.00940800000000000))*(x574)))+(((IkReal(-0.345680000000000))*(x540))));
op[83]=((x949)+(x941)+(((IkReal(-1.00000000000000))*(x932))));
op[84]=((IkReal(-4.00000000000000))+(((IkReal(-1.00000000000000))*(x966))));
op[85]=((((IkReal(-0.0539680000000000))*(x574)))+(((r20)*(x550)))+(((IkReal(0.0101440000000000))*(x540)))+(((IkReal(-0.0539680000000000))*(x531))));
op[86]=((IkReal(4.00000000000000))+(x966));
op[87]=((x939)+(x931)+(((IkReal(-1.00000000000000))*(x930))));
op[88]=((IkReal(4.00000000000000))+(((IkReal(0.000736000000000000))*(x574)))+(((IkReal(0.00205200000000000))*(x561)))+(((IkReal(0.00205200000000000))*(x540)))+(((IkReal(0.000736000000000000))*(x531))));
op[89]=((x931)+(x930)+(((IkReal(-1.00000000000000))*(x939))));
op[90]=((((IkReal(-1.00000000000000))*(x925)))+(((IkReal(-1.00000000000000))*(x987)))+(x986)+(x956));
op[91]=((((IkReal(0.00940800000000000))*(x533)))+(((IkReal(-0.000376320000000000))*(x544)))+(((IkReal(-0.000376320000000000))*(x543)))+(((IkReal(-0.000376320000000000))*(x548)))+(((IkReal(-0.000376320000000000))*(x527)))+(((IkReal(-0.0138272000000000))*(x555)))+(((IkReal(-0.0138272000000000))*(x542)))+(((IkReal(0.345680000000000))*(x591)))+(((IkReal(0.345680000000000))*(x595)))+(((IkReal(-0.0138272000000000))*(x519)))+(((IkReal(-0.0138272000000000))*(x530)))+(((IkReal(0.00940800000000000))*(x566))));
op[92]=((((IkReal(-1.00000000000000))*(x925)))+(((IkReal(-1.00000000000000))*(x986)))+(x987)+(x956));
op[93]=((((IkReal(-1.00000000000000))*(x995)))+(x954));
op[94]=((((IkReal(-1.00000000000000))*(npx)*(x550)))+(((IkReal(0.0539680000000000))*(x566)))+(((IkReal(0.0539680000000000))*(x533)))+(((IkReal(-0.00215872000000000))*(x527)))+(((IkReal(0.000405760000000000))*(x555)))+(((IkReal(-0.00215872000000000))*(x543)))+(((IkReal(-0.00215872000000000))*(x544)))+(((IkReal(-0.00215872000000000))*(x548)))+(((IkReal(0.000405760000000000))*(x542)))+(((IkReal(0.000405760000000000))*(x519)))+(((IkReal(-0.0101440000000000))*(x591)))+(((IkReal(0.000405760000000000))*(x530))));
op[95]=((((IkReal(-1.00000000000000))*(x954)))+(x995));
op[96]=((((IkReal(-1.00000000000000))*(x948)))+(((IkReal(-1.00000000000000))*(x991)))+(x990)+(x984));
op[97]=((((IkReal(-0.000736000000000000))*(x533)))+(((IkReal(2.94400000000000e-5))*(x548)))+(((IkReal(2.94400000000000e-5))*(x543)))+(((IkReal(2.94400000000000e-5))*(x544)))+(((IkReal(2.94400000000000e-5))*(x527)))+(((IkReal(8.20800000000000e-5))*(x519)))+(((IkReal(8.20800000000000e-5))*(x555)))+(((IkReal(8.20800000000000e-5))*(x530)))+(((IkReal(-0.00205200000000000))*(x591)))+(((IkReal(-0.00205200000000000))*(x595)))+(((IkReal(-0.000736000000000000))*(x566)))+(((IkReal(8.20800000000000e-5))*(x542))));
op[98]=((((IkReal(-1.00000000000000))*(x948)))+(((IkReal(-1.00000000000000))*(x990)))+(x991)+(x984));
op[99]=((x950)+(x942)+(((IkReal(-1.00000000000000))*(x936))));
op[100]=((((IkReal(-0.0328396000000000))*(x561)))+(((IkReal(-0.000893760000000000))*(x574)))+(((IkReal(-0.0328396000000000))*(x540)))+(((IkReal(-0.000893760000000000))*(x531))));
op[101]=((((IkReal(-1.00000000000000))*(x942)))+(x936)+(x950));
op[102]=((IkReal(0.542000000000000))+(((IkReal(-1.00000000000000))*(x980))));
op[103]=((((IkReal(0.000963680000000000))*(x540)))+(((IkReal(-0.00512696000000000))*(x531)))+(((IkReal(0.000963680000000000))*(x561)))+(((IkReal(-0.00512696000000000))*(x574))));
op[104]=((IkReal(0.542000000000000))+(x980));
op[105]=((x937)+(x951)+(((IkReal(-1.00000000000000))*(x938))));
op[106]=((((IkReal(0.000194940000000000))*(x561)))+(((IkReal(6.99200000000000e-5))*(x531)))+(((IkReal(0.000194940000000000))*(x540)))+(((IkReal(6.99200000000000e-5))*(x574))));
op[107]=((x938)+(x951)+(((IkReal(-1.00000000000000))*(x937))));
op[108]=((x1005)+(((IkReal(-1.00000000000000))*(x999)))+(((IkReal(0.00524800000000000))*(x527)))+(((IkReal(0.00524800000000000))*(x544)))+(((IkReal(0.00524800000000000))*(x543)))+(((IkReal(0.00524800000000000))*(x548)))+(((IkReal(-1.00000000000000))*(x969)))+(((IkReal(-1.00000000000000))*(x970))));
op[109]=((IkReal(2.00000000000000))+(((IkReal(-0.588000000000000))*(x606)))+(((IkReal(-0.588000000000000))*(x592)))+(((IkReal(-1.00000000000000))*(r10)*(x547)))+(((IkReal(-1.00000000000000))*(gconst6_6)*(x581)))+(x963)+(((IkReal(-1.00000000000000))*(x964))));
op[110]=((x1005)+(((IkReal(0.00995200000000000))*(x543)))+(((IkReal(0.00995200000000000))*(x544)))+(((IkReal(0.00995200000000000))*(x548)))+(((IkReal(-1.00000000000000))*(x999)))+(((IkReal(0.00995200000000000))*(x527)))+(x970)+(x969));
op[111]=((IkReal(2.00000000000000))+(x1001)+(((IkReal(-1.00000000000000))*(x1000)))+(x979));
op[112]=((((gconst4_6)*(x562)))+(((IkReal(0.0160000000000000))*(x606)))+(((IkReal(0.0160000000000000))*(x584)))+(x993)+(((r00)*(x538))));
op[113]=((IkReal(-2.00000000000000))+(x1001)+(x1000)+(((IkReal(-1.00000000000000))*(x979))));
op[114]=((((IkReal(0.00778400000000000))*(x527)))+(((IkReal(-1.00000000000000))*(x985)))+(x1005)+(x975)+(x976)+(x969)+(((IkReal(0.00778400000000000))*(x548)))+(((IkReal(0.00778400000000000))*(x543)))+(((IkReal(0.00778400000000000))*(x544))));
op[115]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x983)))+(((IkReal(0.0460000000000000))*(x590)))+(((IkReal(0.0460000000000000))*(x584)))+(((IkReal(0.0460000000000000))*(x606)))+(((gconst4_6)*(x521)))+(x981));
op[116]=((((IkReal(-1.00000000000000))*(x985)))+(((IkReal(0.00741600000000000))*(x548)))+(((IkReal(0.00741600000000000))*(x543)))+(((IkReal(0.00741600000000000))*(x544)))+(x1005)+(x976)+(((IkReal(-1.00000000000000))*(x969)))+(((IkReal(0.00741600000000000))*(x527)))+(((IkReal(-1.00000000000000))*(x975))));
op[117]=((((IkReal(-1.00000000000000))*(x929)))+(((IkReal(-1.00000000000000))*(x928)))+(((IkReal(-1.00000000000000))*(x1003)))+(((r11)*(x541)))+(((IkReal(-0.00524800000000000))*(x563)))+(((IkReal(-0.00524800000000000))*(x564)))+(((IkReal(0.00524800000000000))*(x578)))+(x992)+(x943)+(x945)+(x946));
op[118]=((((IkReal(-0.588000000000000))*(x535)))+(((IkReal(-0.588000000000000))*(x611)))+(((IkReal(0.588000000000000))*(x526)))+(((IkReal(0.588000000000000))*(x520)))+(x959)+(((IkReal(-1.00000000000000))*(x978))));
op[119]=((((IkReal(-1.00000000000000))*(x928)))+(((IkReal(-1.00000000000000))*(x943)))+(((IkReal(0.00995200000000000))*(x580)))+(((IkReal(-1.00000000000000))*(x1004)))+(((IkReal(0.00995200000000000))*(x578)))+(((IkReal(-0.00995200000000000))*(x564)))+(((IkReal(-0.00995200000000000))*(x563)))+(x933)+(x929)+(x992)+(x945));
op[120]=((((IkReal(-1.00000000000000))*(x988)))+(x989)+(x962)+(((IkReal(-1.00000000000000))*(x974))));
op[121]=((((IkReal(-0.0160000000000000))*(x520)))+(((IkReal(-0.0160000000000000))*(x526)))+(((IkReal(0.0160000000000000))*(x535)))+(((gconst7_6)*(x562)))+(((IkReal(-1.00000000000000))*(x952)))+(x953));
op[122]=((((IkReal(-1.00000000000000))*(x989)))+(x988)+(x962)+(((IkReal(-1.00000000000000))*(x974))));
op[123]=((((IkReal(-1.00000000000000))*(x927)))+(((IkReal(-1.00000000000000))*(x1004)))+(((IkReal(0.00778400000000000))*(x578)))+(((IkReal(-0.00778400000000000))*(x563)))+(((IkReal(-0.00778400000000000))*(x564)))+(((IkReal(0.00778400000000000))*(x580)))+(x934)+(x933)+(x926)+(x992)+(((IkReal(-1.00000000000000))*(x935))));
op[124]=((((gconst7_6)*(x521)))+(((IkReal(-0.0460000000000000))*(x520)))+(((IkReal(-0.0460000000000000))*(x526)))+(((IkReal(0.0460000000000000))*(x535)))+(x973)+(((IkReal(-1.00000000000000))*(x968))));
op[125]=((((IkReal(-1.00000000000000))*(x927)))+(((IkReal(-1.00000000000000))*(x926)))+(((IkReal(-0.00741600000000000))*(x564)))+(((IkReal(-0.00741600000000000))*(x563)))+(((IkReal(-1.00000000000000))*(x1003)))+(((IkReal(0.00741600000000000))*(x580)))+(((IkReal(0.00741600000000000))*(x578)))+(x935)+(x934)+(x992)+(x946));
op[126]=((x1002)+(((IkReal(0.00524800000000000))*(x583)))+(((IkReal(-1.00000000000000))*(x996)))+(((IkReal(0.00524800000000000))*(x537)))+(((IkReal(0.00524800000000000))*(x549)))+(((IkReal(-1.00000000000000))*(x957)))+(((IkReal(-1.00000000000000))*(x958)))+(((rxp1_0)*(x541))));
op[127]=((((IkReal(-1.00000000000000))*(rxp0_1)*(x547)))+(((IkReal(-0.588000000000000))*(x532)))+(((IkReal(-0.588000000000000))*(x601)))+(((IkReal(-0.588000000000000))*(x603)))+(x955)+(((IkReal(-1.00000000000000))*(x961))));
op[128]=((((IkReal(0.00995200000000000))*(x583)))+(x1002)+(((IkReal(0.00995200000000000))*(x549)))+(((IkReal(0.00995200000000000))*(x537)))+(((IkReal(0.00995200000000000))*(x556)))+(((IkReal(-1.00000000000000))*(x957)))+(((IkReal(-1.00000000000000))*(x958)))+(x996));
op[129]=((((IkReal(-1.00000000000000))*(x998)))+(x997)+(x967));
op[130]=((((IkReal(0.0160000000000000))*(x603)))+(((IkReal(0.0160000000000000))*(x605)))+(((IkReal(0.0160000000000000))*(x532)))+(((rxp0_0)*(x538)))+(x994));
op[131]=((x997)+(x998)+(((IkReal(-1.00000000000000))*(x967))));
op[132]=((((IkReal(0.00778400000000000))*(x537)))+(x1002)+(((IkReal(0.0100800000000000))*(x608)))+(((IkReal(0.000513000000000000))*(x546)))+(((IkReal(0.000513000000000000))*(x551)))+(((IkReal(0.000513000000000000))*(x554)))+(((IkReal(0.0100800000000000))*(x576)))+(((IkReal(0.0100800000000000))*(x539)))+(((IkReal(0.00778400000000000))*(x583)))+(x865)+(x864)+(x863)+(x870)+(((IkReal(0.000513000000000000))*(x565)))+(((IkReal(-1.00000000000000))*(x957)))+(((IkReal(0.00778400000000000))*(x556)))+(((IkReal(0.0100800000000000))*(x585)))+(((IkReal(0.00778400000000000))*(x549))));
IkReal x1006=((gconst6_0)*(r00));
IkReal x1007=((gconst7_2)*(r01));
IkReal x1008=((gconst0_7)*(r20));
IkReal x1009=((gconst6_6)*(r00));
IkReal x1010=((gconst6_0)*(rxp0_0));
IkReal x1011=((gconst1_7)*(r21));
IkReal x1012=((gconst1_2)*(npy));
IkReal x1013=((gconst0_0)*(r20));
IkReal x1014=((IkReal(0.00741600000000000))*(gconst1_0));
IkReal x1015=((gconst7_6)*(r01));
IkReal x1016=((gconst4_6)*(r11));
IkReal x1017=((gconst1_6)*(r21));
IkReal x1018=((gconst4_6)*(rxp1_1));
IkReal x1019=((gconst7_0)*(r01));
IkReal x1020=((gconst0_7)*(npx));
IkReal x1021=((gconst3_7)*(r10));
IkReal x1022=((gconst0_3)*(r20));
IkReal x1023=((gconst7_7)*(r01));
IkReal x1024=((gconst6_7)*(r00));
IkReal x1025=((gconst4_7)*(r11));
IkReal x1026=((IkReal(0.271000000000000))*(gconst1_3));
IkReal x1027=((gconst1_0)*(r21));
IkReal x1028=((gconst4_0)*(r11));
IkReal x1029=((gconst1_3)*(r21));
IkReal x1030=((IkReal(0.00760000000000000))*(pz));
IkReal x1031=((gconst0_0)*(npx));
IkReal x1032=((gconst7_0)*(rxp1_0));
IkReal x1033=((gconst6_3)*(r00));
IkReal x1034=((gconst4_0)*(rxp1_1));
IkReal x1035=((gconst1_7)*(npy));
IkReal x1036=((IkReal(0.190000000000000))*(pz));
IkReal x1037=((gconst7_3)*(r01));
IkReal x1038=((gconst1_0)*(npy));
IkReal x1039=((gconst3_7)*(rxp0_1));
IkReal x1040=((gconst4_7)*(rxp1_1));
IkReal x1041=((gconst1_2)*(r21));
IkReal x1042=((gconst3_6)*(r10));
IkReal x1043=((gconst0_6)*(npx));
IkReal x1044=((gconst6_7)*(rxp0_0));
IkReal x1045=((gconst6_2)*(rxp0_0));
IkReal x1046=((gconst7_6)*(rxp1_0));
IkReal x1047=((gconst3_0)*(r10));
IkReal x1048=((gconst4_3)*(r11));
IkReal x1049=((gconst0_2)*(r20));
IkReal x1050=((IkReal(0.0950000000000000))*(pp));
IkReal x1051=((gconst4_2)*(r11));
IkReal x1052=((gconst3_6)*(rxp0_1));
IkReal x1053=((gconst0_6)*(r20));
IkReal x1054=((IkReal(0.0180500000000000))*(pz));
IkReal x1055=((IkReal(0.0400000000000000))*(pp));
IkReal x1056=((IkReal(1.00000000000000))*(pp));
IkReal x1057=((gconst6_2)*(r00));
IkReal x1058=((gconst0_2)*(npx));
IkReal x1059=((gconst3_3)*(r10));
IkReal x1060=((gconst6_6)*(rxp0_0));
IkReal x1061=((gconst3_2)*(rxp0_1));
IkReal x1062=((gconst1_6)*(npy));
IkReal x1063=((gconst3_2)*(r10));
IkReal x1064=((gconst4_2)*(rxp1_1));
IkReal x1065=((gconst3_0)*(rxp0_1));
IkReal x1066=((gconst7_7)*(rxp1_0));
IkReal x1067=((gconst0_3)*(npx));
IkReal x1068=((gconst7_2)*(rxp1_0));
IkReal x1069=((IkReal(0.0758270000000000))*(x1049));
IkReal x1070=((IkReal(0.0440000000000000))*(x1022));
IkReal x1071=((IkReal(0.0440000000000000))*(x1029));
IkReal x1072=((IkReal(0.0758270000000000))*(x1041));
IkReal x1073=((IkReal(0.0864200000000000))*(x1011));
IkReal x1074=((IkReal(0.00400000000000000))*(x1017));
IkReal x1075=((IkReal(0.0864200000000000))*(x1008));
IkReal x1076=((IkReal(0.00400000000000000))*(x1053));
IkReal x1077=((IkReal(0.00253600000000000))*(x1008));
IkReal x1078=((IkReal(0.00253600000000000))*(x1011));
IkReal x1079=((IkReal(0.0134920000000000))*(x1027));
IkReal x1080=((IkReal(0.317000000000000))*(x1053));
IkReal x1081=((r21)*(x1026));
IkReal x1082=((IkReal(0.317000000000000))*(x1017));
IkReal x1083=((IkReal(0.271000000000000))*(x1022));
IkReal x1084=((IkReal(0.00216800000000000))*(x1049));
IkReal x1085=((IkReal(0.00216800000000000))*(x1041));
IkReal x1086=((IkReal(0.0134920000000000))*(x1013));
IkReal x1087=((IkReal(0.000513000000000000))*(x1008));
IkReal x1088=((IkReal(0.000513000000000000))*(x1011));
IkReal x1089=((IkReal(0.0100800000000000))*(x1049));
IkReal x1090=((IkReal(0.0100800000000000))*(x1041));
IkReal x1091=((IkReal(0.00303308000000000))*(x1057));
IkReal x1092=((IkReal(0.00400000000000000))*(x1043));
IkReal x1093=((IkReal(0.00303308000000000))*(x1063));
IkReal x1094=((pp)*(x1058));
IkReal x1095=((IkReal(0.00176000000000000))*(x1037));
IkReal x1096=((IkReal(0.00303308000000000))*(x1007));
IkReal x1097=((IkReal(0.00400000000000000))*(x1062));
IkReal x1098=((pp)*(x1012));
IkReal x1099=((IkReal(0.0864200000000000))*(x1035));
IkReal x1100=((IkReal(0.00303308000000000))*(x1051));
IkReal x1101=((IkReal(0.00176000000000000))*(x1059));
IkReal x1102=((IkReal(0.0864200000000000))*(x1020));
IkReal x1103=((IkReal(0.00176000000000000))*(x1048));
IkReal x1104=((IkReal(0.00176000000000000))*(x1033));
IkReal x1105=((IkReal(0.00345680000000000))*(x1023));
IkReal x1106=((IkReal(0.0758270000000000))*(x1012));
IkReal x1107=((IkReal(0.0440000000000000))*(x1067));
IkReal x1108=((IkReal(0.000160000000000000))*(x1016));
IkReal x1109=((IkReal(0.0758270000000000))*(x1058));
IkReal x1110=((IkReal(0.00345680000000000))*(x1021));
IkReal x1111=((IkReal(0.0440000000000000))*(gconst1_3)*(npy));
IkReal x1112=((IkReal(0.000160000000000000))*(x1015));
IkReal x1113=((IkReal(0.000160000000000000))*(x1009));
IkReal x1114=((IkReal(0.00345680000000000))*(x1024));
IkReal x1115=((IkReal(0.000160000000000000))*(x1042));
IkReal x1116=((IkReal(0.00345680000000000))*(x1025));
IkReal x1117=((IkReal(0.271000000000000))*(x1067));
IkReal x1118=((IkReal(0.000101440000000000))*(x1024));
IkReal x1119=((IkReal(0.000101440000000000))*(x1021));
IkReal x1120=((IkReal(0.0134920000000000))*(x1031));
IkReal x1121=((IkReal(0.317000000000000))*(x1062));
IkReal x1122=((IkReal(0.0134920000000000))*(x1038));
IkReal x1123=((npy)*(x1026));
IkReal x1124=((IkReal(0.00216800000000000))*(x1058));
IkReal x1125=((IkReal(0.000101440000000000))*(x1025));
IkReal x1126=((IkReal(0.00216800000000000))*(x1012));
IkReal x1127=((IkReal(0.000101440000000000))*(x1023));
IkReal x1128=((IkReal(0.317000000000000))*(x1043));
IkReal x1129=((IkReal(0.00253600000000000))*(x1020));
IkReal x1130=((IkReal(0.000539680000000000))*(x1028));
IkReal x1131=((IkReal(0.0126800000000000))*(x1042));
IkReal x1132=((IkReal(0.0108400000000000))*(x1033));
IkReal x1133=((IkReal(8.67200000000000e-5))*(x1063));
IkReal x1134=((IkReal(0.0126800000000000))*(x1016));
IkReal x1135=((IkReal(0.0126800000000000))*(x1009));
IkReal x1136=((IkReal(8.67200000000000e-5))*(x1057));
IkReal x1137=((IkReal(8.67200000000000e-5))*(x1051));
IkReal x1138=((IkReal(0.0108400000000000))*(x1048));
IkReal x1139=((IkReal(0.000539680000000000))*(x1047));
IkReal x1140=((IkReal(0.000539680000000000))*(x1006));
IkReal x1141=((IkReal(0.0126800000000000))*(x1015));
IkReal x1142=((IkReal(0.0108400000000000))*(x1059));
IkReal x1143=((IkReal(0.000539680000000000))*(x1019));
IkReal x1144=((IkReal(0.0108400000000000))*(x1037));
IkReal x1145=((IkReal(0.00253600000000000))*(x1035));
IkReal x1146=((IkReal(8.67200000000000e-5))*(x1007));
IkReal x1147=((IkReal(2.05200000000000e-5))*(x1021));
IkReal x1148=((IkReal(2.05200000000000e-5))*(x1023));
IkReal x1149=((IkReal(0.0100800000000000))*(x1058));
IkReal x1150=((IkReal(2.05200000000000e-5))*(x1024));
IkReal x1151=((IkReal(0.0100800000000000))*(x1012));
IkReal x1152=((IkReal(2.05200000000000e-5))*(x1025));
IkReal x1153=((IkReal(0.000403200000000000))*(x1007));
IkReal x1154=((IkReal(0.000403200000000000))*(x1057));
IkReal x1155=((IkReal(0.000403200000000000))*(x1051));
IkReal x1156=((IkReal(0.000513000000000000))*(x1020));
IkReal x1157=((IkReal(0.000403200000000000))*(x1063));
IkReal x1158=((IkReal(0.000513000000000000))*(x1035));
IkReal x1159=((IkReal(0.00418000000000000))*(x1022));
IkReal x1160=((IkReal(0.00720356500000000))*(x1041));
IkReal x1161=((IkReal(0.00720356500000000))*(x1049));
IkReal x1162=((IkReal(0.00418000000000000))*(x1029));
IkReal x1163=((IkReal(0.00820990000000000))*(x1011));
IkReal x1164=((IkReal(0.000380000000000000))*(x1017));
IkReal x1165=((IkReal(0.00820990000000000))*(x1008));
IkReal x1166=((IkReal(0.000380000000000000))*(x1053));
IkReal x1167=((IkReal(0.000240920000000000))*(x1008));
IkReal x1168=((IkReal(0.000240920000000000))*(x1011));
IkReal x1169=((IkReal(0.0301150000000000))*(x1017));
IkReal x1170=((IkReal(0.0257450000000000))*(x1022));
IkReal x1171=((IkReal(0.000205960000000000))*(x1041));
IkReal x1172=((IkReal(0.000205960000000000))*(x1049));
IkReal x1173=((IkReal(0.0257450000000000))*(x1029));
IkReal x1174=((IkReal(0.0301150000000000))*(x1053));
IkReal x1175=((IkReal(0.00128174000000000))*(x1013));
IkReal x1176=((IkReal(0.00128174000000000))*(x1027));
IkReal x1177=((IkReal(4.87350000000000e-5))*(x1008));
IkReal x1178=((IkReal(4.87350000000000e-5))*(x1011));
IkReal x1179=((IkReal(0.000957600000000000))*(x1049));
IkReal x1180=((IkReal(0.000957600000000000))*(x1041));
IkReal x1181=((x1049)*(x1056));
IkReal x1182=((x1011)*(x1036));
IkReal x1183=((x1041)*(x1056));
IkReal x1184=((x1008)*(x1036));
IkReal x1185=((x1020)*(x1036));
IkReal x1186=((x1035)*(x1036));
IkReal x1187=((x1055)*(x1057));
IkReal x1188=((x1055)*(x1063));
IkReal x1189=((x1007)*(x1055));
IkReal x1190=((x1023)*(x1030));
IkReal x1191=((x1051)*(x1055));
IkReal x1192=((x1024)*(x1030));
IkReal x1193=((x1021)*(x1030));
IkReal x1194=((x1025)*(x1030));
IkReal x1195=((x1049)*(x1050));
IkReal x1196=((x1041)*(x1050));
IkReal x1197=((x1008)*(x1054));
IkReal x1198=((x1011)*(x1054));
IkReal x1199=((x1102)+(x1099));
IkReal x1200=((x1106)+(x1109));
IkReal x1201=((x1158)+(x1156));
IkReal x1202=((x1167)+(x1168));
IkReal x1203=((x1164)+(x1166));
IkReal x1204=((x1165)+(x1163));
IkReal x1205=((x1076)+(x1074));
IkReal x1206=((x1075)+(x1073));
IkReal x1207=((x1087)+(x1088));
IkReal x1208=((x1070)+(x1071));
IkReal x1209=((x1177)+(x1178));
IkReal x1210=((x1180)+(x1179));
IkReal x1211=((x1090)+(x1089));
IkReal x1212=((x1149)+(x1151));
IkReal x1213=((x1097)+(x1092));
IkReal x1214=((x1078)+(x1077));
IkReal x1215=((x1072)+(x1069));
IkReal x1216=((x1159)+(x1162)+(pz));
IkReal x1217=((IkReal(0.294000000000000))+(x1160)+(x1161));
IkReal x1218=((x1117)+(x1123)+(x1124)+(x1126));
IkReal x1219=((x1155)+(x1154)+(x1157)+(x1153));
IkReal x1220=((x1173)+(x1172)+(x1171)+(x1170));
IkReal x1221=((x1079)+(x1086)+(x1082)+(x1080));
IkReal x1222=((x1169)+(x1176)+(x1175)+(x1174));
IkReal x1223=((x1108)+(x1113)+(x1112)+(x1115));
IkReal x1224=((x1100)+(x1096)+(x1091)+(x1093));
IkReal x1225=((x1105)+(x1110)+(x1114)+(x1116));
IkReal x1226=((x1085)+(x1084)+(x1083)+(x1081));
IkReal x1227=((x1147)+(x1148)+(x1150)+(x1152));
IkReal x1228=((x1184)+(x1182)+(x1183)+(x1181));
IkReal x1229=((x1198)+(x1195)+(x1197)+(x1196));
IkReal x1230=((x1119)+(x1118)+(x1128)+(x1120)+(x1121)+(x1122)+(x1125)+(x1127));
IkReal x1231=((x1142)+(x1146)+(x1144)+(x1138)+(x1133)+(x1132)+(x1137)+(x1136));
IkReal x1232=((x1104)+(x1103)+(x1101)+(x1186)+(x1185)+(x1094)+(x1095)+(x1098));
IkReal x1233=((x1143)+(x1140)+(x1141)+(x1145)+(x1129)+(x1139)+(x1131)+(x1130)+(x1135)+(x1134));
IkReal x1234=((x1107)+(x1111)+(x1188)+(x1189)+(x1187)+(x1191)+(x1190)+(x1193)+(x1192)+(x1194));
IkReal x1235=((x1234)+(x1213));
op[133]=((((IkReal(-0.000368000000000000))*(x1040)))+(((IkReal(-0.000368000000000000))*(x1044)))+(((IkReal(0.0460000000000000))*(x1018)))+(((IkReal(-0.000368000000000000))*(x1039)))+(((IkReal(0.00102600000000000))*(x1065)))+(((IkReal(0.00102600000000000))*(x1010)))+(((IkReal(0.00102600000000000))*(x1032)))+(((IkReal(0.00102600000000000))*(x1034)))+(((IkReal(0.0460000000000000))*(x1046)))+(((IkReal(-0.000368000000000000))*(x1066)))+(((IkReal(0.0460000000000000))*(x1052)))+(((IkReal(0.0460000000000000))*(x1060))));
op[134]=((((IkReal(0.00741600000000000))*(x1065)))+(((x1036)*(x1039)))+(((IkReal(-0.0440000000000000))*(gconst4_3)*(rxp1_1)))+(((IkReal(-0.0440000000000000))*(gconst3_3)*(rxp0_1)))+(((IkReal(0.0100800000000000))*(x1045)))+(((IkReal(0.0100800000000000))*(x1061)))+(((IkReal(0.0100800000000000))*(x1068)))+(((IkReal(0.0100800000000000))*(x1064)))+(((IkReal(0.00741600000000000))*(x1010)))+(((IkReal(-0.00400000000000000))*(x1046)))+(((IkReal(-0.000513000000000000))*(x1039)))+(((IkReal(-0.0440000000000000))*(gconst7_3)*(rxp1_0)))+(((IkReal(-0.00400000000000000))*(x1052)))+(((x1036)*(x1040)))+(((x1036)*(x1044)))+(((IkReal(-0.00400000000000000))*(x1060)))+(((IkReal(0.00741600000000000))*(x1032)))+(((IkReal(0.00741600000000000))*(x1034)))+(((pp)*(x1045)))+(((IkReal(-0.000513000000000000))*(x1040)))+(((IkReal(-0.000513000000000000))*(x1044)))+(((x1036)*(x1066)))+(((pp)*(x1064)))+(((pp)*(x1061)))+(((pp)*(x1068)))+(((IkReal(-0.0440000000000000))*(gconst6_3)*(rxp0_0)))+(((IkReal(-0.00400000000000000))*(x1018)))+(((IkReal(-0.000513000000000000))*(x1066))));
op[135]=((IkReal(-1.00000000000000))+(x1208)+(x1205)+(x1206)+(x1215)+(((IkReal(-1.00000000000000))*(x1228)))+(((IkReal(-0.00524800000000000))*(x1013)))+(((IkReal(-0.00524800000000000))*(x1027))));
op[136]=((((IkReal(0.588000000000000))*(x1017)))+(((IkReal(0.588000000000000))*(x1053)))+(((IkReal(-0.00470400000000000))*(x1008)))+(((IkReal(-0.00470400000000000))*(x1011)))+(((IkReal(0.172840000000000))*(x1027)))+(((IkReal(0.172840000000000))*(x1013))));
op[137]=((IkReal(1.00000000000000))+(x1208)+(x1215)+(((IkReal(-1.00000000000000))*(x1228)))+(((IkReal(-0.00995200000000000))*(x1027)))+(((IkReal(-0.00995200000000000))*(x1013)))+(((IkReal(-1.00000000000000))*(x1206)))+(((IkReal(-1.00000000000000))*(x1205))));
op[138]=((x1221)+(((IkReal(-1.00000000000000))*(x1226)))+(((IkReal(-1.00000000000000))*(x1214))));
op[139]=((IkReal(4.00000000000000))+(((IkReal(-0.00507200000000000))*(x1027)))+(((IkReal(-0.0160000000000000))*(x1017)))+(((IkReal(-0.0160000000000000))*(x1053)))+(((IkReal(-0.0269840000000000))*(x1008)))+(((IkReal(-0.0269840000000000))*(x1011)))+(((IkReal(-0.00507200000000000))*(x1013))));
op[140]=((x1214)+(((IkReal(-1.00000000000000))*(x1226)))+(((IkReal(-1.00000000000000))*(x1221))));
op[141]=((IkReal(1.00000000000000))+(x1208)+(((IkReal(-0.00778400000000000))*(x1027)))+(((IkReal(-1.00000000000000))*(x1228)))+(((IkReal(-1.00000000000000))*(x1207)))+(((IkReal(-1.00000000000000))*(x1205)))+(((IkReal(-1.00000000000000))*(x1211)))+(((IkReal(-0.00778400000000000))*(x1013))));
op[142]=((((IkReal(-0.00102600000000000))*(x1013)))+(((IkReal(0.000368000000000000))*(x1008)))+(((IkReal(-0.0460000000000000))*(x1017)))+(((IkReal(0.000368000000000000))*(x1011)))+(((IkReal(-0.0460000000000000))*(x1053)))+(((IkReal(-0.00102600000000000))*(x1027))));
op[143]=((IkReal(-1.00000000000000))+(x1208)+(x1205)+(x1207)+(((IkReal(-1.00000000000000))*(r21)*(x1014)))+(((IkReal(-1.00000000000000))*(x1228)))+(((IkReal(-1.00000000000000))*(x1211)))+(((IkReal(-0.00741600000000000))*(x1013))));
op[144]=((IkReal(-0.389000000000000))+(((IkReal(0.00524800000000000))*(x1038)))+(((IkReal(0.00524800000000000))*(x1031)))+(x1232)+(x1225)+(x1224)+(x1223)+(((IkReal(-1.00000000000000))*(x1235)))+(((IkReal(-0.000209920000000000))*(x1028)))+(((IkReal(-1.00000000000000))*(x1199)))+(((IkReal(-0.000209920000000000))*(x1019)))+(((IkReal(-0.000209920000000000))*(x1006)))+(((IkReal(-1.00000000000000))*(x1200)))+(((IkReal(-0.000209920000000000))*(x1047))));
op[145]=((IkReal(0.00800000000000000))+(((IkReal(0.00470400000000000))*(x1020)))+(((IkReal(-0.588000000000000))*(x1062)))+(((IkReal(0.00691360000000000))*(x1028)))+(((IkReal(-0.172840000000000))*(x1031)))+(((IkReal(-0.172840000000000))*(x1038)))+(((IkReal(0.00470400000000000))*(x1035)))+(((IkReal(0.00691360000000000))*(x1047)))+(((IkReal(0.0235200000000000))*(x1042)))+(((IkReal(0.0235200000000000))*(x1009)))+(((IkReal(-0.000188160000000000))*(x1025)))+(((IkReal(-0.000188160000000000))*(x1024)))+(((IkReal(-0.000188160000000000))*(x1023)))+(((IkReal(-0.000188160000000000))*(x1021)))+(((IkReal(0.00691360000000000))*(x1006)))+(((IkReal(0.00691360000000000))*(x1019)))+(((IkReal(0.0235200000000000))*(x1016)))+(((IkReal(0.0235200000000000))*(x1015)))+(((IkReal(-0.588000000000000))*(x1043))));
op[146]=((IkReal(0.199000000000000))+(x1199)+(x1232)+(x1224)+(x1213)+(((IkReal(-0.000398080000000000))*(x1047)))+(((IkReal(-1.00000000000000))*(x1223)))+(((IkReal(-1.00000000000000))*(x1225)))+(((IkReal(-1.00000000000000))*(x1234)))+(((IkReal(-0.000398080000000000))*(x1028)))+(((IkReal(-0.000398080000000000))*(x1006)))+(((IkReal(-1.00000000000000))*(x1200)))+(((IkReal(-0.000398080000000000))*(x1019)))+(((IkReal(0.00995200000000000))*(x1031)))+(((IkReal(0.00995200000000000))*(x1038))));
op[147]=((IkReal(0.00800000000000000))+(x1233)+(x1218)+(((IkReal(-1.00000000000000))*(x1231)))+(((IkReal(-1.00000000000000))*(x1230))));
op[148]=((IkReal(0.634000000000000))+(((IkReal(-0.000202880000000000))*(x1047)))+(((IkReal(0.00507200000000000))*(x1031)))+(((IkReal(0.00507200000000000))*(x1038)))+(((IkReal(-0.000640000000000000))*(x1042)))+(((IkReal(-0.000202880000000000))*(x1006)))+(((IkReal(-0.00107936000000000))*(x1024)))+(((IkReal(-0.00107936000000000))*(x1025)))+(((IkReal(-0.00107936000000000))*(x1021)))+(((IkReal(-0.00107936000000000))*(x1023)))+(((IkReal(-0.000202880000000000))*(x1019)))+(((IkReal(0.0269840000000000))*(x1020)))+(((IkReal(0.0160000000000000))*(x1062)))+(((IkReal(-0.000640000000000000))*(x1015)))+(((IkReal(-0.000640000000000000))*(x1016)))+(((IkReal(0.0160000000000000))*(x1043)))+(((IkReal(-0.000640000000000000))*(x1009)))+(((IkReal(0.0269840000000000))*(x1035)))+(((IkReal(-0.000202880000000000))*(x1028))));
op[149]=((IkReal(-0.00800000000000000))+(x1230)+(x1218)+(((IkReal(-1.00000000000000))*(x1233)))+(((IkReal(-1.00000000000000))*(x1231))));
op[150]=((IkReal(-0.0720000000000000))+(x1201)+(x1232)+(x1212)+(x1213)+(((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-1.00000000000000))*(x1223)))+(((IkReal(-1.00000000000000))*(x1234)))+(((IkReal(-0.000311360000000000))*(x1028)))+(((IkReal(-0.000311360000000000))*(x1019)))+(((IkReal(-0.000311360000000000))*(x1006)))+(((IkReal(-1.00000000000000))*(x1219)))+(((IkReal(-0.000311360000000000))*(x1047)))+(((IkReal(0.00778400000000000))*(x1031)))+(((IkReal(0.00778400000000000))*(x1038))));
op[151]=((IkReal(-0.00800000000000000))+(((IkReal(-0.000368000000000000))*(x1035)))+(((IkReal(-4.10400000000000e-5))*(x1006)))+(((IkReal(-4.10400000000000e-5))*(x1028)))+(((IkReal(-0.00184000000000000))*(x1042)))+(((IkReal(-0.00184000000000000))*(x1009)))+(((IkReal(0.00102600000000000))*(x1031)))+(((IkReal(0.00102600000000000))*(x1038)))+(((IkReal(-0.00184000000000000))*(x1015)))+(((IkReal(-0.00184000000000000))*(x1016)))+(((IkReal(-0.000368000000000000))*(x1020)))+(((IkReal(-4.10400000000000e-5))*(x1047)))+(((IkReal(1.47200000000000e-5))*(x1021)))+(((IkReal(1.47200000000000e-5))*(x1023)))+(((IkReal(1.47200000000000e-5))*(x1024)))+(((IkReal(1.47200000000000e-5))*(x1025)))+(((IkReal(0.0460000000000000))*(x1043)))+(((IkReal(-4.10400000000000e-5))*(x1019)))+(((IkReal(0.0460000000000000))*(x1062))));
op[152]=((IkReal(-0.118000000000000))+(x1232)+(x1227)+(x1223)+(x1212)+(((IkReal(-0.000296640000000000))*(x1028)))+(((IkReal(-1.00000000000000))*(x1235)))+(((IkReal(-0.000296640000000000))*(x1006)))+(((npy)*(x1014)))+(((IkReal(-0.000296640000000000))*(x1019)))+(((IkReal(0.00741600000000000))*(x1031)))+(((IkReal(-1.00000000000000))*(x1201)))+(((IkReal(-1.00000000000000))*(x1219)))+(((IkReal(-0.000296640000000000))*(x1047))));
op[153]=((x1204)+(x1203)+(x1216)+(x1217)+(((IkReal(-1.00000000000000))*(x1229)))+(((IkReal(-0.000498560000000000))*(x1013)))+(((IkReal(-0.000498560000000000))*(x1027))));
op[154]=((((IkReal(-0.000446880000000000))*(x1008)))+(((IkReal(-0.000446880000000000))*(x1011)))+(((IkReal(0.0558600000000000))*(x1017)))+(((IkReal(0.0558600000000000))*(x1053)))+(((IkReal(0.0164198000000000))*(x1013)))+(((IkReal(0.0164198000000000))*(x1027))));
op[155]=((x1216)+(x1217)+(((IkReal(-0.000945440000000000))*(x1013)))+(((IkReal(-1.00000000000000))*(x1229)))+(((IkReal(-1.00000000000000))*(x1204)))+(((IkReal(-1.00000000000000))*(x1203)))+(((IkReal(-0.000945440000000000))*(x1027))));
op[156]=((x1222)+(((IkReal(-1.00000000000000))*(x1220)))+(((IkReal(-1.00000000000000))*(x1202))));
op[157]=((((IkReal(-0.00256348000000000))*(x1011)))+(((IkReal(-0.00152000000000000))*(x1053)))+(((IkReal(-0.000481840000000000))*(x1013)))+(((IkReal(-0.000481840000000000))*(x1027)))+(((IkReal(-0.00256348000000000))*(x1008)))+(((IkReal(-0.00152000000000000))*(x1017))));
op[158]=((x1202)+(((IkReal(-1.00000000000000))*(x1220)))+(((IkReal(-1.00000000000000))*(x1222))));
op[159]=((IkReal(0.0230000000000000))+(((IkReal(-0.000739480000000000))*(x1013)))+(x1216)+(((IkReal(-1.00000000000000))*(x1229)))+(((IkReal(-0.000739480000000000))*(x1027)))+(((IkReal(-1.00000000000000))*(x1209)))+(((IkReal(-1.00000000000000))*(x1203)))+(((IkReal(-1.00000000000000))*(x1210))));
op[160]=((((IkReal(3.49600000000000e-5))*(x1008)))+(((IkReal(3.49600000000000e-5))*(x1011)))+(((IkReal(-0.00437000000000000))*(x1053)))+(((IkReal(-9.74700000000000e-5))*(x1013)))+(((IkReal(-9.74700000000000e-5))*(x1027)))+(((IkReal(-0.00437000000000000))*(x1017))));
op[161]=((IkReal(0.0230000000000000))+(x1209)+(x1203)+(x1216)+(((IkReal(-1.00000000000000))*(x1229)))+(((IkReal(-0.000704520000000000))*(x1013)))+(((IkReal(-0.000704520000000000))*(x1027)))+(((IkReal(-1.00000000000000))*(x1210))));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j2array[16], cj2array[16], sj2array[16], j3array[16], cj3array[16], sj3array[16], j4array[16], cj4array[16], sj4array[16];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ij2 += 3)
{
IkReal htj2 = zeror[ij2+0], htj3 = zeror[ij2+1], htj4 = zeror[ij2+2];
j2array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj2)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
j4array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj4)));
IkReal x1236=(htj2)*(htj2);
IkReal x1237=(htj3)*(htj3);
IkReal x1238=(htj4)*(htj4);
cj2array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1236))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1236)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1236))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1237))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1237)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1237))))));
cj4array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1238))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1238)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1238))))));
sj2array[numsolutions]=((IkReal(2.00000000000000))*(htj2)*(((IKabs(((IkReal(1.00000000000000))+((htj2)*(htj2)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj2)*(htj2))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
sj4array[numsolutions]=((IkReal(2.00000000000000))*(htj4)*(((IKabs(((IkReal(1.00000000000000))+((htj4)*(htj4)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj4)*(htj4))))):(IkReal)1.0e30)));
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j2valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj2 = 16;
_nj3 = 1;
_nj4 = 1;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
_ij4[0] = 0; _ij4[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( !j2valid[iij2] ) { continue; }
if( IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij2]-cj3array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij2]-sj3array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(cj4array[ij2]-cj4array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij2]-sj4array[iij2]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j2valid[iij2]=false; _ij2[1] = iij2; _ij3[1] = 0; _ij4[1] = 0;  break; 
}
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

    j3 = j3array[ij2]; cj3 = cj3array[ij2]; sj3 = sj3array[ij2];

    j4 = j4array[ij2]; cj4 = cj4array[ij2]; sj4 = sj4array[ij2];

{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
if( IKabs(((IkReal(0.0950000000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0950000000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1239=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0950000000000000))*(r21)), ((IkReal(0.0950000000000000))*(r20)))));
if( (((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(-0.135500000000000))*(cj2)*(cj3)))+(((IkReal(0.135500000000000))*(sj2)*(sj3)))+(pz)+(((IkReal(-0.00400000000000000))*(sj2)))+(((IkReal(-0.158500000000000))*(cj2))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(-0.135500000000000))*(cj2)*(cj3)))+(((IkReal(0.135500000000000))*(sj2)*(sj3)))+(pz)+(((IkReal(-0.00400000000000000))*(sj2)))+(((IkReal(-0.158500000000000))*(cj2))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1240=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00902500000000000))*((r21)*(r21))))+(((IkReal(0.00902500000000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((((IkReal(-0.135500000000000))*(cj2)*(cj3)))+(((IkReal(0.135500000000000))*(sj2)*(sj3)))+(pz)+(((IkReal(-0.00400000000000000))*(sj2)))+(((IkReal(-0.158500000000000))*(cj2)))))));
j6array[0]=((((IkReal(-1.00000000000000))*(x1239)))+(((IkReal(-1.00000000000000))*(x1240))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(x1240)+(((IkReal(-1.00000000000000))*(x1239))));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
IkReal x1241=((IkReal(1.00000000000000))*(sj4));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1241)))+(((r20)*(IKsin(j6))))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1241)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((r21)*(IKcos(j6)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1242=(sj6)*(sj6);
IkReal x1243=(cj6)*(cj6);
IkReal x1244=((IkReal(1.00000000000000))*(x1242));
IkReal x1245=((IkReal(1.00000000000000))*(x1243));
IkReal x1246=((IkReal(2.00000000000000))*(cj6)*(sj6));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(x1244)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1245)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1244)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1245)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1246)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1246)))));
IkReal x1247=(sj6)*(sj6);
IkReal x1248=(cj6)*(cj6);
IkReal x1249=((IkReal(1.00000000000000))*(x1247));
IkReal x1250=((IkReal(1.00000000000000))*(x1248));
IkReal x1251=((IkReal(2.00000000000000))*(cj6)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1250)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1251)))+(((IkReal(-1.00000000000000))*(x1250)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1251)))+(((IkReal(-1.00000000000000))*(x1249)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1249)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1252=(cj6)*(cj6);
IkReal x1253=(sj6)*(sj6);
IkReal x1254=((r00)*(sj6));
IkReal x1255=((cj6)*(r01));
IkReal x1256=((IkReal(1.00000000000000))*(py));
IkReal x1257=((cj6)*(r11));
IkReal x1258=((IkReal(1.00000000000000))*(px));
IkReal x1259=((r10)*(sj6));
IkReal x1260=((IkReal(0.0950000000000000))*(x1252));
IkReal x1261=((IkReal(0.0950000000000000))*(x1253));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1261)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1255)*(x1258)))+(((IkReal(-0.190000000000000))*(x1257)*(x1259)))+(((IkReal(-1.00000000000000))*(x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(x1256)*(x1259)))+(((IkReal(-1.00000000000000))*(x1261)*((r10)*(r10))))+(((IkReal(-0.190000000000000))*(x1254)*(x1255)))+(((IkReal(-1.00000000000000))*(x1254)*(x1258)))+(((IkReal(-1.00000000000000))*(x1260)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1260)*((r11)*(r11))))));
IkReal x1262=(sj6)*(sj6);
IkReal x1263=(cj6)*(cj6);
IkReal x1264=((r00)*(sj6));
IkReal x1265=((IkReal(10.5263157894737))*(px));
IkReal x1266=((cj6)*(r11));
IkReal x1267=((IkReal(10.5263157894737))*(py));
IkReal x1268=((cj6)*(r01));
IkReal x1269=((r10)*(sj6));
IkReal x1270=((IkReal(1.00000000000000))*(x1262));
IkReal x1271=((IkReal(1.00000000000000))*(x1263));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1270)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(x1271)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1267)*(x1269)))+(((IkReal(-1.00000000000000))*(x1266)*(x1267)))+(((IkReal(-2.00000000000000))*(x1266)*(x1269)))+(((IkReal(-1.00000000000000))*(x1265)*(x1268)))+(((IkReal(-1.00000000000000))*(x1271)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1270)*((r00)*(r00))))+(((IkReal(-2.00000000000000))*(x1264)*(x1268))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1272=((IkReal(0.158500000000000))*(sj2));
IkReal x1273=((r00)*(sj6));
IkReal x1274=((cj6)*(r01));
IkReal x1275=((cj6)*(r11));
IkReal x1276=((r10)*(sj6));
IkReal x1277=((IkReal(0.00400000000000000))*(cj2));
IkReal x1278=((IkReal(0.135500000000000))*(cj2)*(sj3));
IkReal x1279=((IkReal(0.135500000000000))*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((x1276)*(x1277)))+(((x1275)*(x1277)))+(((IkReal(-1.00000000000000))*(x1275)*(x1279)))+(((IkReal(-1.00000000000000))*(x1275)*(x1278)))+(((IkReal(-1.00000000000000))*(x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(x1276)*(x1279)))+(((IkReal(-0.0400000000000000))*(x1276)))+(((IkReal(-0.0400000000000000))*(x1275)))+(((IkReal(-1.00000000000000))*(x1272)*(x1275)))+(((IkReal(-1.00000000000000))*(x1272)*(x1276))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((x1273)*(x1277)))+(((x1274)*(x1277)))+(((IkReal(-0.0400000000000000))*(x1273)))+(((IkReal(-0.0400000000000000))*(x1274)))+(((IkReal(-1.00000000000000))*(x1272)*(x1274)))+(((IkReal(-1.00000000000000))*(x1272)*(x1273)))+(((IkReal(-1.00000000000000))*(x1273)*(x1279)))+(((IkReal(-1.00000000000000))*(x1273)*(x1278)))+(((IkReal(-1.00000000000000))*(x1274)*(x1279)))+(((IkReal(-1.00000000000000))*(x1274)*(x1278))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst1)*(((((x1276)*(x1277)))+(((x1275)*(x1277)))+(((IkReal(-1.00000000000000))*(x1275)*(x1279)))+(((IkReal(-1.00000000000000))*(x1275)*(x1278)))+(((IkReal(-1.00000000000000))*(x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(x1276)*(x1279)))+(((IkReal(-0.0400000000000000))*(x1276)))+(((IkReal(-0.0400000000000000))*(x1275)))+(((IkReal(-1.00000000000000))*(x1272)*(x1275)))+(((IkReal(-1.00000000000000))*(x1272)*(x1276)))))), ((gconst1)*(((((x1273)*(x1277)))+(((x1274)*(x1277)))+(((IkReal(-0.0400000000000000))*(x1273)))+(((IkReal(-0.0400000000000000))*(x1274)))+(((IkReal(-1.00000000000000))*(x1272)*(x1274)))+(((IkReal(-1.00000000000000))*(x1272)*(x1273)))+(((IkReal(-1.00000000000000))*(x1273)*(x1279)))+(((IkReal(-1.00000000000000))*(x1273)*(x1278)))+(((IkReal(-1.00000000000000))*(x1274)*(x1279)))+(((IkReal(-1.00000000000000))*(x1274)*(x1278)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1280=IKsin(j1);
IkReal x1281=IKcos(j1);
IkReal x1282=((IkReal(0.0950000000000000))*(r01));
IkReal x1283=((IkReal(1.00000000000000))*(r11));
IkReal x1284=((IkReal(1.00000000000000))*(cj2));
IkReal x1285=((IkReal(0.0950000000000000))*(r11));
IkReal x1286=((IkReal(0.0950000000000000))*(sj6));
IkReal x1287=((cj3)*(sj2));
IkReal x1288=((cj6)*(x1281));
IkReal x1289=((cj6)*(x1280));
IkReal x1290=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x1291=((r00)*(x1281));
IkReal x1292=((r00)*(x1280));
IkReal x1293=((IkReal(1.00000000000000))*(x1281));
evalcond[0]=((((sj6)*(x1292)))+(((IkReal(-1.00000000000000))*(x1281)*(x1290)))+(((r01)*(x1289)))+(((IkReal(-1.00000000000000))*(x1283)*(x1288))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1285)*(x1288)))+(((x1286)*(x1292)))+(((px)*(x1280)))+(((IkReal(-1.00000000000000))*(py)*(x1293)))+(((IkReal(-1.00000000000000))*(r10)*(x1281)*(x1286)))+(((x1282)*(x1289))));
evalcond[2]=((IkReal(0.0400000000000000))+(((IkReal(0.135500000000000))*(x1287)))+(((IkReal(-1.00000000000000))*(py)*(x1280)))+(((IkReal(-1.00000000000000))*(x1286)*(x1291)))+(((IkReal(-1.00000000000000))*(x1285)*(x1289)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r10)*(x1280)*(x1286)))+(((IkReal(-1.00000000000000))*(px)*(x1293)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(x1282)*(x1288))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1288)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1284)))+(((IkReal(-1.00000000000000))*(x1280)*(x1290)))+(((sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj3)*(x1284)))+(((IkReal(-1.00000000000000))*(sj6)*(x1291)))+(((IkReal(-1.00000000000000))*(x1283)*(x1289)))+(((IkReal(-1.00000000000000))*(cj4)*(x1287))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x1294=((cj6)*(sj1));
IkReal x1295=((r22)*(sj6));
IkReal x1296=((cj1)*(r12));
IkReal x1297=((r21)*(sj6));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r00)*(r22)*(x1294)))+(((cj6)*(r20)*(x1296)))+(((IkReal(-1.00000000000000))*(x1296)*(x1297)))+(((cj1)*(r11)*(x1295)))+(((r02)*(sj1)*(x1297)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1295)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1294)))));
IkReal x1298=((cj6)*(sj1));
IkReal x1299=((r22)*(sj6));
IkReal x1300=((cj1)*(r12));
IkReal x1301=((r21)*(sj6));
dummyeval[0]=((((r02)*(sj1)*(x1301)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r00)*(r22)*(x1298)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((cj6)*(r20)*(x1300)))+(((cj1)*(r11)*(x1299)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1299)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1298))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1302=((IkReal(1.00000000000000))*(sj2));
IkReal x1303=((cj3)*(cj4));
IkReal x1304=((r21)*(sj6));
IkReal x1305=((cj2)*(cj4));
IkReal x1306=((r22)*(sj3));
IkReal x1307=((cj6)*(r20));
IkReal x1308=((sj3)*(x1307));
IkReal x1309=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj4)*(x1302)*(x1306)))+(((r22)*(sj2)*(x1303)))+(((x1305)*(x1306)))+(((r22)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj4)*(x1302)*(x1308)))+(((x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(x1304)*(x1309)))+(((x1307)*(x1309)))+(((sj2)*(x1303)*(x1307)))+(((sj2)*(sj3)*(sj4)*(x1304)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303)*(x1304)))+(((IkReal(-1.00000000000000))*(sj3)*(x1304)*(x1305))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(sj4)*(x1302)*(x1306)))+(((r22)*(sj2)*(x1303)))+(((x1305)*(x1306)))+(((r22)*(x1309)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(sj4)*(x1302)*(x1308)))+(((x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(x1304)*(x1309)))+(((x1307)*(x1309)))+(((sj2)*(x1303)*(x1307)))+(((sj2)*(sj3)*(sj4)*(x1304)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303)*(x1304)))+(((IkReal(-1.00000000000000))*(sj3)*(x1304)*(x1305)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1310=IKsin(j5);
IkReal x1311=IKcos(j5);
IkReal x1312=((r01)*(sj1));
IkReal x1313=((cj4)*(sj2));
IkReal x1314=((IkReal(1.00000000000000))*(r12));
IkReal x1315=((cj6)*(r00));
IkReal x1316=((cj2)*(sj3));
IkReal x1317=((IkReal(1.00000000000000))*(sj3));
IkReal x1318=((IkReal(1.00000000000000))*(sj4));
IkReal x1319=((r11)*(sj6));
IkReal x1320=((IkReal(1.00000000000000))*(cj6));
IkReal x1321=((cj2)*(cj3));
IkReal x1322=((r01)*(sj6));
IkReal x1323=((cj1)*(cj6)*(r10));
IkReal x1324=((sj6)*(x1310));
IkReal x1325=((sj1)*(x1311));
IkReal x1326=((sj1)*(x1310));
IkReal x1327=((cj1)*(x1311));
IkReal x1328=((IkReal(1.00000000000000))*(cj1)*(x1310));
IkReal x1329=((IkReal(1.00000000000000))*(sj6)*(x1311));
evalcond[0]=((((r22)*(x1311)))+(((r21)*(x1324)))+(((IkReal(-1.00000000000000))*(r20)*(x1310)*(x1320))));
evalcond[1]=((((cj4)*(x1316)))+(((r22)*(x1310)))+(((cj3)*(x1313)))+(((IkReal(-1.00000000000000))*(r21)*(x1329)))+(((sj4)*(x1321)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1317)))+(((cj6)*(r20)*(x1311))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1312)*(x1329)))+(((IkReal(-1.00000000000000))*(cj1)*(x1310)*(x1314)))+(((x1319)*(x1327)))+(((IkReal(-1.00000000000000))*(r10)*(x1320)*(x1327)))+(((r02)*(x1326)))+(((x1315)*(x1325))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1322)*(x1328)))+(((cj1)*(x1310)*(x1315)))+(((IkReal(-1.00000000000000))*(x1319)*(x1326)))+(((IkReal(-1.00000000000000))*(x1314)*(x1325)))+(((cj6)*(r10)*(x1326)))+(((IkReal(-1.00000000000000))*(r02)*(x1327))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1312)*(x1324)))+(((IkReal(-1.00000000000000))*(x1319)*(x1328)))+(((IkReal(-1.00000000000000))*(x1315)*(x1326)))+(((IkReal(-1.00000000000000))*(x1314)*(x1327)))+(((r02)*(x1325)))+(((x1310)*(x1323))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1313)*(x1317)))+(((cj4)*(x1321)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1318)))+(((IkReal(-1.00000000000000))*(x1315)*(x1327)))+(((IkReal(-1.00000000000000))*(x1314)*(x1326)))+(((x1322)*(x1327)))+(((x1319)*(x1325)))+(((IkReal(-1.00000000000000))*(r02)*(x1328)))+(((IkReal(-1.00000000000000))*(r10)*(x1320)*(x1325)))+(((IkReal(-1.00000000000000))*(x1316)*(x1318))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(r22)), ((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1330=IKsin(j5);
IkReal x1331=IKcos(j5);
IkReal x1332=((r01)*(sj1));
IkReal x1333=((cj4)*(sj2));
IkReal x1334=((IkReal(1.00000000000000))*(r12));
IkReal x1335=((cj6)*(r00));
IkReal x1336=((cj2)*(sj3));
IkReal x1337=((IkReal(1.00000000000000))*(sj3));
IkReal x1338=((IkReal(1.00000000000000))*(sj4));
IkReal x1339=((r11)*(sj6));
IkReal x1340=((IkReal(1.00000000000000))*(cj6));
IkReal x1341=((cj2)*(cj3));
IkReal x1342=((r01)*(sj6));
IkReal x1343=((cj1)*(cj6)*(r10));
IkReal x1344=((sj6)*(x1330));
IkReal x1345=((sj1)*(x1331));
IkReal x1346=((sj1)*(x1330));
IkReal x1347=((cj1)*(x1331));
IkReal x1348=((IkReal(1.00000000000000))*(cj1)*(x1330));
IkReal x1349=((IkReal(1.00000000000000))*(sj6)*(x1331));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1330)*(x1340)))+(((r22)*(x1331)))+(((r21)*(x1344))));
evalcond[1]=((((cj4)*(x1336)))+(((IkReal(-1.00000000000000))*(r21)*(x1349)))+(((sj4)*(x1341)))+(((cj3)*(x1333)))+(((r22)*(x1330)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1337)))+(((cj6)*(r20)*(x1331))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1330)*(x1334)))+(((x1339)*(x1347)))+(((r02)*(x1346)))+(((x1335)*(x1345)))+(((IkReal(-1.00000000000000))*(r10)*(x1340)*(x1347)))+(((IkReal(-1.00000000000000))*(x1332)*(x1349))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1339)*(x1346)))+(((IkReal(-1.00000000000000))*(x1342)*(x1348)))+(((cj1)*(x1330)*(x1335)))+(((IkReal(-1.00000000000000))*(r02)*(x1347)))+(((IkReal(-1.00000000000000))*(x1334)*(x1345)))+(((cj6)*(r10)*(x1346))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1330)*(x1343)))+(((x1332)*(x1344)))+(((r02)*(x1345)))+(((IkReal(-1.00000000000000))*(x1339)*(x1348)))+(((IkReal(-1.00000000000000))*(x1334)*(x1347)))+(((IkReal(-1.00000000000000))*(x1335)*(x1346))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x1348)))+(((x1339)*(x1345)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1338)))+(((IkReal(-1.00000000000000))*(x1333)*(x1337)))+(((IkReal(-1.00000000000000))*(x1336)*(x1338)))+(((x1342)*(x1347)))+(((cj4)*(x1341)))+(((IkReal(-1.00000000000000))*(r10)*(x1340)*(x1345)))+(((IkReal(-1.00000000000000))*(x1334)*(x1346)))+(((IkReal(-1.00000000000000))*(x1335)*(x1347))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1350=((cj6)*(r11));
IkReal x1351=((r00)*(sj6));
IkReal x1352=((r10)*(sj6));
IkReal x1353=((cj6)*(r01));
IkReal x1354=((cj2)*(cj3)*(sj4));
IkReal x1355=((cj3)*(cj4)*(sj2));
IkReal x1356=((cj2)*(cj4)*(sj3));
IkReal x1357=((IkReal(1.00000000000000))*(sj2)*(sj3)*(sj4));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x1352)*(x1357)))+(((IkReal(-1.00000000000000))*(x1350)*(x1357)))+(((x1350)*(x1356)))+(((x1350)*(x1355)))+(((x1350)*(x1354)))+(((x1352)*(x1355)))+(((x1352)*(x1354)))+(((x1352)*(x1356))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x1351)*(x1356)))+(((x1351)*(x1355)))+(((x1351)*(x1354)))+(((IkReal(-1.00000000000000))*(x1351)*(x1357)))+(((x1353)*(x1355)))+(((x1353)*(x1354)))+(((x1353)*(x1356)))+(((IkReal(-1.00000000000000))*(x1353)*(x1357))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(x1352)*(x1357)))+(((IkReal(-1.00000000000000))*(x1350)*(x1357)))+(((x1350)*(x1356)))+(((x1350)*(x1355)))+(((x1350)*(x1354)))+(((x1352)*(x1355)))+(((x1352)*(x1354)))+(((x1352)*(x1356)))))), ((gconst0)*(((((x1351)*(x1356)))+(((x1351)*(x1355)))+(((x1351)*(x1354)))+(((IkReal(-1.00000000000000))*(x1351)*(x1357)))+(((x1353)*(x1355)))+(((x1353)*(x1354)))+(((x1353)*(x1356)))+(((IkReal(-1.00000000000000))*(x1353)*(x1357)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1358=IKsin(j1);
IkReal x1359=IKcos(j1);
IkReal x1360=((IkReal(0.0950000000000000))*(r01));
IkReal x1361=((IkReal(1.00000000000000))*(r11));
IkReal x1362=((IkReal(1.00000000000000))*(cj2));
IkReal x1363=((IkReal(0.0950000000000000))*(r11));
IkReal x1364=((IkReal(0.0950000000000000))*(sj6));
IkReal x1365=((cj3)*(sj2));
IkReal x1366=((cj6)*(x1359));
IkReal x1367=((cj6)*(x1358));
IkReal x1368=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x1369=((r00)*(x1359));
IkReal x1370=((r00)*(x1358));
IkReal x1371=((IkReal(1.00000000000000))*(x1359));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1359)*(x1368)))+(((r01)*(x1367)))+(((IkReal(-1.00000000000000))*(x1361)*(x1366)))+(((sj6)*(x1370))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1359)*(x1364)))+(((x1360)*(x1367)))+(((px)*(x1358)))+(((IkReal(-1.00000000000000))*(x1363)*(x1366)))+(((IkReal(-1.00000000000000))*(py)*(x1371)))+(((x1364)*(x1370))));
evalcond[2]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1358)*(x1364)))+(((IkReal(-1.00000000000000))*(x1364)*(x1369)))+(((IkReal(-1.00000000000000))*(px)*(x1371)))+(((IkReal(-1.00000000000000))*(py)*(x1358)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(0.135500000000000))*(x1365)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(x1363)*(x1367)))+(((IkReal(-1.00000000000000))*(x1360)*(x1366))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(x1365)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1362)))+(((IkReal(-1.00000000000000))*(sj6)*(x1369)))+(((IkReal(-1.00000000000000))*(cj4)*(sj3)*(x1362)))+(((sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x1361)*(x1367)))+(((IkReal(-1.00000000000000))*(r01)*(x1366)))+(((IkReal(-1.00000000000000))*(x1358)*(x1368))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x1372=((cj6)*(sj1));
IkReal x1373=((r22)*(sj6));
IkReal x1374=((cj1)*(r12));
IkReal x1375=((r21)*(sj6));
gconst4=IKsign(((((r00)*(r22)*(x1372)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1373)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1372)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((cj1)*(r11)*(x1373)))+(((cj6)*(r20)*(x1374)))+(((IkReal(-1.00000000000000))*(x1374)*(x1375)))+(((r02)*(sj1)*(x1375)))));
IkReal x1376=((cj6)*(sj1));
IkReal x1377=((r22)*(sj6));
IkReal x1378=((cj1)*(r12));
IkReal x1379=((r21)*(sj6));
dummyeval[0]=((((r00)*(r22)*(x1376)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1377)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1376)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((cj1)*(r11)*(x1377)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))+(((cj6)*(r20)*(x1378)))+(((r02)*(sj1)*(x1379))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1380=((IkReal(1.00000000000000))*(sj2));
IkReal x1381=((cj3)*(cj4));
IkReal x1382=((r21)*(sj6));
IkReal x1383=((cj2)*(cj4));
IkReal x1384=((r22)*(sj3));
IkReal x1385=((cj6)*(r20));
IkReal x1386=((sj3)*(x1385));
IkReal x1387=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst3)*(((((r22)*(sj2)*(x1381)))+(((IkReal(-1.00000000000000))*(sj4)*(x1380)*(x1384)))+(((r22)*(x1387)))+(((x1383)*(x1384))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((sj2)*(x1381)*(x1385)))+(((IkReal(-1.00000000000000))*(x1382)*(x1387)))+(((IkReal(-1.00000000000000))*(sj4)*(x1380)*(x1386)))+(((IkReal(-1.00000000000000))*(sj3)*(x1382)*(x1383)))+(((sj2)*(sj3)*(sj4)*(x1382)))+(((x1385)*(x1387)))+(((x1383)*(x1386)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)*(x1382))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((r22)*(sj2)*(x1381)))+(((IkReal(-1.00000000000000))*(sj4)*(x1380)*(x1384)))+(((r22)*(x1387)))+(((x1383)*(x1384)))))), ((gconst3)*(((((sj2)*(x1381)*(x1385)))+(((IkReal(-1.00000000000000))*(x1382)*(x1387)))+(((IkReal(-1.00000000000000))*(sj4)*(x1380)*(x1386)))+(((IkReal(-1.00000000000000))*(sj3)*(x1382)*(x1383)))+(((sj2)*(sj3)*(sj4)*(x1382)))+(((x1385)*(x1387)))+(((x1383)*(x1386)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)*(x1382)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1388=IKsin(j5);
IkReal x1389=IKcos(j5);
IkReal x1390=((r01)*(sj1));
IkReal x1391=((cj4)*(sj2));
IkReal x1392=((IkReal(1.00000000000000))*(r12));
IkReal x1393=((cj6)*(r00));
IkReal x1394=((cj2)*(sj3));
IkReal x1395=((IkReal(1.00000000000000))*(sj3));
IkReal x1396=((IkReal(1.00000000000000))*(sj4));
IkReal x1397=((r11)*(sj6));
IkReal x1398=((IkReal(1.00000000000000))*(cj6));
IkReal x1399=((cj2)*(cj3));
IkReal x1400=((r01)*(sj6));
IkReal x1401=((cj1)*(cj6)*(r10));
IkReal x1402=((sj6)*(x1388));
IkReal x1403=((sj1)*(x1389));
IkReal x1404=((sj1)*(x1388));
IkReal x1405=((cj1)*(x1389));
IkReal x1406=((IkReal(1.00000000000000))*(cj1)*(x1388));
IkReal x1407=((IkReal(1.00000000000000))*(sj6)*(x1389));
evalcond[0]=((((r21)*(x1402)))+(((r22)*(x1389)))+(((IkReal(-1.00000000000000))*(r20)*(x1388)*(x1398))));
evalcond[1]=((((sj4)*(x1399)))+(((cj3)*(x1391)))+(((cj6)*(r20)*(x1389)))+(((cj4)*(x1394)))+(((r22)*(x1388)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1395)))+(((IkReal(-1.00000000000000))*(r21)*(x1407))));
evalcond[2]=((((r02)*(x1404)))+(((x1393)*(x1403)))+(((IkReal(-1.00000000000000))*(x1390)*(x1407)))+(((x1397)*(x1405)))+(((IkReal(-1.00000000000000))*(r10)*(x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(cj1)*(x1388)*(x1392))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x1405)))+(((cj6)*(r10)*(x1404)))+(((cj1)*(x1388)*(x1393)))+(((IkReal(-1.00000000000000))*(x1397)*(x1404)))+(((IkReal(-1.00000000000000))*(x1400)*(x1406)))+(((IkReal(-1.00000000000000))*(x1392)*(x1403))));
evalcond[4]=((IkReal(1.00000000000000))+(((r02)*(x1403)))+(((IkReal(-1.00000000000000))*(x1393)*(x1404)))+(((IkReal(-1.00000000000000))*(x1392)*(x1405)))+(((x1388)*(x1401)))+(((IkReal(-1.00000000000000))*(x1397)*(x1406)))+(((x1390)*(x1402))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1391)*(x1395)))+(((IkReal(-1.00000000000000))*(x1394)*(x1396)))+(((x1397)*(x1403)))+(((IkReal(-1.00000000000000))*(r10)*(x1398)*(x1403)))+(((cj4)*(x1399)))+(((IkReal(-1.00000000000000))*(r02)*(x1406)))+(((IkReal(-1.00000000000000))*(x1393)*(x1405)))+(((IkReal(-1.00000000000000))*(x1392)*(x1404)))+(((x1400)*(x1405)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1396))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(r22)), ((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1408=IKsin(j5);
IkReal x1409=IKcos(j5);
IkReal x1410=((r01)*(sj1));
IkReal x1411=((cj4)*(sj2));
IkReal x1412=((IkReal(1.00000000000000))*(r12));
IkReal x1413=((cj6)*(r00));
IkReal x1414=((cj2)*(sj3));
IkReal x1415=((IkReal(1.00000000000000))*(sj3));
IkReal x1416=((IkReal(1.00000000000000))*(sj4));
IkReal x1417=((r11)*(sj6));
IkReal x1418=((IkReal(1.00000000000000))*(cj6));
IkReal x1419=((cj2)*(cj3));
IkReal x1420=((r01)*(sj6));
IkReal x1421=((cj1)*(cj6)*(r10));
IkReal x1422=((sj6)*(x1408));
IkReal x1423=((sj1)*(x1409));
IkReal x1424=((sj1)*(x1408));
IkReal x1425=((cj1)*(x1409));
IkReal x1426=((IkReal(1.00000000000000))*(cj1)*(x1408));
IkReal x1427=((IkReal(1.00000000000000))*(sj6)*(x1409));
evalcond[0]=((((r21)*(x1422)))+(((IkReal(-1.00000000000000))*(r20)*(x1408)*(x1418)))+(((r22)*(x1409))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1415)))+(((IkReal(-1.00000000000000))*(r21)*(x1427)))+(((cj6)*(r20)*(x1409)))+(((cj4)*(x1414)))+(((sj4)*(x1419)))+(((r22)*(x1408)))+(((cj3)*(x1411))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1408)*(x1412)))+(((r02)*(x1424)))+(((IkReal(-1.00000000000000))*(r10)*(x1418)*(x1425)))+(((IkReal(-1.00000000000000))*(x1410)*(x1427)))+(((x1417)*(x1425)))+(((x1413)*(x1423))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1420)*(x1426)))+(((IkReal(-1.00000000000000))*(r02)*(x1425)))+(((IkReal(-1.00000000000000))*(x1417)*(x1424)))+(((cj1)*(x1408)*(x1413)))+(((cj6)*(r10)*(x1424)))+(((IkReal(-1.00000000000000))*(x1412)*(x1423))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1408)*(x1421)))+(((x1410)*(x1422)))+(((IkReal(-1.00000000000000))*(x1413)*(x1424)))+(((IkReal(-1.00000000000000))*(x1417)*(x1426)))+(((r02)*(x1423)))+(((IkReal(-1.00000000000000))*(x1412)*(x1425))));
evalcond[5]=((((x1420)*(x1425)))+(((IkReal(-1.00000000000000))*(x1413)*(x1425)))+(((IkReal(-1.00000000000000))*(x1414)*(x1416)))+(((cj4)*(x1419)))+(((IkReal(-1.00000000000000))*(x1411)*(x1415)))+(((IkReal(-1.00000000000000))*(r10)*(x1418)*(x1423)))+(((IkReal(-1.00000000000000))*(x1412)*(x1424)))+(((IkReal(-1.00000000000000))*(r02)*(x1426)))+(((x1417)*(x1423)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1416))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1428=((IkReal(1.00000000000000))*(sj2));
IkReal x1429=((cj3)*(cj4));
IkReal x1430=((r21)*(sj6));
IkReal x1431=((cj2)*(cj4));
IkReal x1432=((r22)*(sj3));
IkReal x1433=((cj6)*(r20));
IkReal x1434=((sj3)*(x1433));
IkReal x1435=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst2)*(((((r22)*(sj2)*(x1429)))+(((IkReal(-1.00000000000000))*(sj4)*(x1428)*(x1432)))+(((r22)*(x1435)))+(((x1431)*(x1432))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(sj3)*(x1430)*(x1431)))+(((x1433)*(x1435)))+(((IkReal(-1.00000000000000))*(sj4)*(x1428)*(x1434)))+(((IkReal(-1.00000000000000))*(x1428)*(x1429)*(x1430)))+(((sj2)*(sj3)*(sj4)*(x1430)))+(((IkReal(-1.00000000000000))*(x1430)*(x1435)))+(((sj2)*(x1429)*(x1433)))+(((x1431)*(x1434))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((r22)*(sj2)*(x1429)))+(((IkReal(-1.00000000000000))*(sj4)*(x1428)*(x1432)))+(((r22)*(x1435)))+(((x1431)*(x1432)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(sj3)*(x1430)*(x1431)))+(((x1433)*(x1435)))+(((IkReal(-1.00000000000000))*(sj4)*(x1428)*(x1434)))+(((IkReal(-1.00000000000000))*(x1428)*(x1429)*(x1430)))+(((sj2)*(sj3)*(sj4)*(x1430)))+(((IkReal(-1.00000000000000))*(x1430)*(x1435)))+(((sj2)*(x1429)*(x1433)))+(((x1431)*(x1434)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1436=IKsin(j5);
IkReal x1437=IKcos(j5);
IkReal x1438=((r21)*(sj6));
IkReal x1439=((cj6)*(r20));
evalcond[0]=((((x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1436)*(x1439)))+(((r22)*(x1437))));
evalcond[1]=((((cj2)*(cj4)*(sj3)))+(((x1437)*(x1439)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x1437)*(x1438)))+(((cj2)*(cj3)*(sj4)))+(((r22)*(x1436)))+(((cj3)*(cj4)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1440=(sj6)*(sj6);
IkReal x1441=(cj6)*(cj6);
IkReal x1442=((r01)*(r10));
IkReal x1443=((cj5)*(r02));
IkReal x1444=((sj5)*(x1440));
IkReal x1445=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1446=((sj5)*(x1441));
IkReal x1447=((IkReal(1.00000000000000))*(cj5)*(r12));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1447)))+(((x1442)*(x1444)))+(((x1442)*(x1446)))+(((IkReal(-1.00000000000000))*(x1445)*(x1446)))+(((cj6)*(r11)*(x1443)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1444)*(x1445)))+(((r10)*(sj6)*(x1443)))));
IkReal x1448=(sj6)*(sj6);
IkReal x1449=(cj6)*(cj6);
IkReal x1450=((r01)*(r10));
IkReal x1451=((cj5)*(r02));
IkReal x1452=((sj5)*(x1448));
IkReal x1453=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1454=((sj5)*(x1449));
IkReal x1455=((IkReal(1.00000000000000))*(cj5)*(r12));
dummyeval[0]=((((x1450)*(x1454)))+(((x1450)*(x1452)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1455)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1455)))+(((r10)*(sj6)*(x1451)))+(((IkReal(-1.00000000000000))*(x1453)*(x1454)))+(((IkReal(-1.00000000000000))*(x1452)*(x1453)))+(((cj6)*(r11)*(x1451))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1456=(sj6)*(sj6);
IkReal x1457=(cj6)*(cj6);
IkReal x1458=((cj5)*(r02));
IkReal x1459=((IkReal(0.0950000000000000))*(r11));
IkReal x1460=((cj6)*(sj5));
IkReal x1461=((IkReal(0.0950000000000000))*(r10));
IkReal x1462=((r01)*(sj5));
IkReal x1463=((IkReal(1.00000000000000))*(px));
IkReal x1464=((r00)*(sj5));
IkReal x1465=((cj5)*(r12));
gconst6=IKsign(((((x1456)*(x1461)*(x1462)))+(((IkReal(-0.0950000000000000))*(r00)*(sj6)*(x1465)))+(((py)*(sj6)*(x1462)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(sj6)*(x1463)))+(((px)*(r10)*(x1460)))+(((py)*(x1458)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)*(x1464)))+(((sj6)*(x1458)*(x1461)))+(((cj6)*(x1458)*(x1459)))+(((IkReal(-1.00000000000000))*(x1463)*(x1465)))+(((IkReal(-1.00000000000000))*(x1457)*(x1459)*(x1464)))+(((IkReal(-0.0950000000000000))*(cj6)*(r01)*(x1465)))+(((IkReal(-1.00000000000000))*(py)*(r00)*(x1460)))+(((x1457)*(x1461)*(x1462)))));
IkReal x1466=(sj6)*(sj6);
IkReal x1467=(cj6)*(cj6);
IkReal x1468=((IkReal(10.5263157894737))*(sj5));
IkReal x1469=((r01)*(r10));
IkReal x1470=((cj5)*(r12));
IkReal x1471=((cj5)*(r02));
IkReal x1472=((sj5)*(x1466));
IkReal x1473=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1474=((sj5)*(x1467));
dummyeval[0]=((((IkReal(-10.5263157894737))*(px)*(x1470)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1470)))+(((IkReal(10.5263157894737))*(py)*(x1471)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1470)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(sj6)*(x1468)))+(((IkReal(-1.00000000000000))*(cj6)*(py)*(r00)*(x1468)))+(((cj6)*(px)*(r10)*(x1468)))+(((cj6)*(r11)*(x1471)))+(((py)*(r01)*(sj6)*(x1468)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473)))+(((x1469)*(x1474)))+(((x1469)*(x1472)))+(((r10)*(sj6)*(x1471)))+(((IkReal(-1.00000000000000))*(x1473)*(x1474))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1475=((IkReal(0.0950000000000000))*(cj6));
IkReal x1476=((IkReal(0.0950000000000000))*(sj6));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r10)*(x1476)))+(((IkReal(-1.00000000000000))*(r11)*(x1475)))+(((IkReal(-1.00000000000000))*(py))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x1475)))+(((IkReal(-1.00000000000000))*(r00)*(x1476)))+(((IkReal(-1.00000000000000))*(px))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(r10)*(x1476)))+(((IkReal(-1.00000000000000))*(r11)*(x1475)))+(((IkReal(-1.00000000000000))*(py)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x1475)))+(((IkReal(-1.00000000000000))*(r00)*(x1476)))+(((IkReal(-1.00000000000000))*(px)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1477=IKsin(j1);
IkReal x1478=IKcos(j1);
IkReal x1479=((cj5)*(sj6));
IkReal x1480=((IkReal(1.00000000000000))*(cj6));
IkReal x1481=((r10)*(sj5));
IkReal x1482=((r12)*(sj5));
IkReal x1483=((r10)*(sj6));
IkReal x1484=((sj3)*(sj4));
IkReal x1485=((IkReal(1.00000000000000))*(cj2));
IkReal x1486=((cj5)*(r00));
IkReal x1487=((sj5)*(sj6));
IkReal x1488=((cj5)*(r10));
IkReal x1489=((IkReal(0.0950000000000000))*(cj6));
IkReal x1490=((r00)*(sj6));
IkReal x1491=((cj3)*(sj4));
IkReal x1492=((cj3)*(cj4));
IkReal x1493=((cj5)*(r02));
IkReal x1494=((cj5)*(r12));
IkReal x1495=((cj4)*(sj3));
IkReal x1496=((IkReal(1.00000000000000))*(sj2));
IkReal x1497=((r11)*(x1478));
IkReal x1498=((cj6)*(x1477));
IkReal x1499=((IkReal(1.00000000000000))*(x1478));
IkReal x1500=((sj5)*(x1477));
IkReal x1501=((IkReal(1.00000000000000))*(x1477));
IkReal x1502=((r01)*(x1478));
IkReal x1503=((IkReal(0.0950000000000000))*(x1477));
IkReal x1504=((IkReal(0.0950000000000000))*(x1478));
IkReal x1505=((cj6)*(x1478));
IkReal x1506=((r11)*(x1477));
evalcond[0]=((((x1477)*(x1490)))+(((r01)*(x1498)))+(((IkReal(-1.00000000000000))*(x1480)*(x1497)))+(((IkReal(-1.00000000000000))*(x1483)*(x1499))));
evalcond[1]=((((x1490)*(x1503)))+(((IkReal(-1.00000000000000))*(x1483)*(x1504)))+(((px)*(x1477)))+(((IkReal(-1.00000000000000))*(py)*(x1499)))+(((r01)*(x1477)*(x1489)))+(((IkReal(-1.00000000000000))*(x1489)*(x1497))));
evalcond[2]=((((x1479)*(x1497)))+(((IkReal(-1.00000000000000))*(r01)*(x1479)*(x1501)))+(((IkReal(-1.00000000000000))*(x1482)*(x1499)))+(((x1486)*(x1498)))+(((IkReal(-1.00000000000000))*(x1478)*(x1480)*(x1488)))+(((r02)*(x1500))));
evalcond[3]=((((x1481)*(x1498)))+(((IkReal(-1.00000000000000))*(x1494)*(x1501)))+(((IkReal(-1.00000000000000))*(x1493)*(x1499)))+(((IkReal(-1.00000000000000))*(r11)*(x1487)*(x1501)))+(((r00)*(sj5)*(x1505)))+(((IkReal(-1.00000000000000))*(r01)*(x1487)*(x1499))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1494)*(x1499)))+(((x1477)*(x1493)))+(((IkReal(-1.00000000000000))*(x1487)*(x1497)))+(((IkReal(-1.00000000000000))*(r00)*(x1480)*(x1500)))+(((x1481)*(x1505)))+(((r01)*(x1477)*(x1487))));
evalcond[5]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(x1490)*(x1504)))+(((IkReal(-1.00000000000000))*(px)*(x1499)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1483)*(x1503)))+(((IkReal(0.135500000000000))*(cj3)*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1501)))+(((IkReal(-1.00000000000000))*(x1489)*(x1506)))+(((IkReal(-1.00000000000000))*(x1489)*(x1502)))+(((IkReal(0.135500000000000))*(cj2)*(sj3))));
evalcond[6]=((((sj2)*(x1484)))+(((IkReal(-1.00000000000000))*(x1485)*(x1495)))+(((IkReal(-1.00000000000000))*(x1485)*(x1491)))+(((IkReal(-1.00000000000000))*(x1492)*(x1496)))+(((IkReal(-1.00000000000000))*(x1483)*(x1501)))+(((IkReal(-1.00000000000000))*(x1480)*(x1506)))+(((IkReal(-1.00000000000000))*(x1480)*(x1502)))+(((IkReal(-1.00000000000000))*(x1490)*(x1499))));
evalcond[7]=((((cj2)*(x1492)))+(((IkReal(-1.00000000000000))*(x1482)*(x1501)))+(((x1479)*(x1506)))+(((x1479)*(x1502)))+(((IkReal(-1.00000000000000))*(x1484)*(x1485)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1499)))+(((IkReal(-1.00000000000000))*(x1495)*(x1496)))+(((IkReal(-1.00000000000000))*(x1491)*(x1496)))+(((IkReal(-1.00000000000000))*(x1478)*(x1480)*(x1486)))+(((IkReal(-1.00000000000000))*(x1477)*(x1480)*(x1488))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1507=((IkReal(1.00000000000000))*(sj6));
IkReal x1508=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x1508)))+(((IkReal(-1.00000000000000))*(r10)*(x1507))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r01)*(x1508)))+(((IkReal(-1.00000000000000))*(r00)*(x1507))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r11)*(x1508)))+(((IkReal(-1.00000000000000))*(r10)*(x1507)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r01)*(x1508)))+(((IkReal(-1.00000000000000))*(r00)*(x1507)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1509=IKsin(j1);
IkReal x1510=IKcos(j1);
IkReal x1511=((cj5)*(sj6));
IkReal x1512=((IkReal(1.00000000000000))*(cj6));
IkReal x1513=((r10)*(sj5));
IkReal x1514=((r12)*(sj5));
IkReal x1515=((r10)*(sj6));
IkReal x1516=((sj3)*(sj4));
IkReal x1517=((IkReal(1.00000000000000))*(cj2));
IkReal x1518=((cj5)*(r00));
IkReal x1519=((sj5)*(sj6));
IkReal x1520=((cj5)*(r10));
IkReal x1521=((IkReal(0.0950000000000000))*(cj6));
IkReal x1522=((r00)*(sj6));
IkReal x1523=((cj3)*(sj4));
IkReal x1524=((cj3)*(cj4));
IkReal x1525=((cj5)*(r02));
IkReal x1526=((cj5)*(r12));
IkReal x1527=((cj4)*(sj3));
IkReal x1528=((IkReal(1.00000000000000))*(sj2));
IkReal x1529=((r11)*(x1510));
IkReal x1530=((cj6)*(x1509));
IkReal x1531=((IkReal(1.00000000000000))*(x1510));
IkReal x1532=((sj5)*(x1509));
IkReal x1533=((IkReal(1.00000000000000))*(x1509));
IkReal x1534=((r01)*(x1510));
IkReal x1535=((IkReal(0.0950000000000000))*(x1509));
IkReal x1536=((IkReal(0.0950000000000000))*(x1510));
IkReal x1537=((cj6)*(x1510));
IkReal x1538=((r11)*(x1509));
evalcond[0]=((((x1509)*(x1522)))+(((IkReal(-1.00000000000000))*(x1515)*(x1531)))+(((r01)*(x1530)))+(((IkReal(-1.00000000000000))*(x1512)*(x1529))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1515)*(x1536)))+(((x1522)*(x1535)))+(((r01)*(x1509)*(x1521)))+(((px)*(x1509)))+(((IkReal(-1.00000000000000))*(py)*(x1531)))+(((IkReal(-1.00000000000000))*(x1521)*(x1529))));
evalcond[2]=((((x1518)*(x1530)))+(((IkReal(-1.00000000000000))*(x1510)*(x1512)*(x1520)))+(((IkReal(-1.00000000000000))*(x1514)*(x1531)))+(((r02)*(x1532)))+(((x1511)*(x1529)))+(((IkReal(-1.00000000000000))*(r01)*(x1511)*(x1533))));
evalcond[3]=((((x1513)*(x1530)))+(((IkReal(-1.00000000000000))*(x1525)*(x1531)))+(((IkReal(-1.00000000000000))*(r01)*(x1519)*(x1531)))+(((r00)*(sj5)*(x1537)))+(((IkReal(-1.00000000000000))*(r11)*(x1519)*(x1533)))+(((IkReal(-1.00000000000000))*(x1526)*(x1533))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1509)*(x1525)))+(((x1513)*(x1537)))+(((IkReal(-1.00000000000000))*(x1519)*(x1529)))+(((IkReal(-1.00000000000000))*(r00)*(x1512)*(x1532)))+(((r01)*(x1509)*(x1519)))+(((IkReal(-1.00000000000000))*(x1526)*(x1531))));
evalcond[5]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(x1521)*(x1538)))+(((IkReal(-1.00000000000000))*(x1521)*(x1534)))+(((IkReal(-1.00000000000000))*(x1515)*(x1535)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(0.135500000000000))*(cj3)*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1522)*(x1536)))+(((IkReal(-1.00000000000000))*(px)*(x1531)))+(((IkReal(-1.00000000000000))*(py)*(x1533)))+(((IkReal(0.135500000000000))*(cj2)*(sj3))));
evalcond[6]=((((sj2)*(x1516)))+(((IkReal(-1.00000000000000))*(x1524)*(x1528)))+(((IkReal(-1.00000000000000))*(x1515)*(x1533)))+(((IkReal(-1.00000000000000))*(x1512)*(x1538)))+(((IkReal(-1.00000000000000))*(x1512)*(x1534)))+(((IkReal(-1.00000000000000))*(x1522)*(x1531)))+(((IkReal(-1.00000000000000))*(x1517)*(x1523)))+(((IkReal(-1.00000000000000))*(x1517)*(x1527))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1516)*(x1517)))+(((IkReal(-1.00000000000000))*(x1510)*(x1512)*(x1518)))+(((IkReal(-1.00000000000000))*(x1509)*(x1512)*(x1520)))+(((IkReal(-1.00000000000000))*(x1514)*(x1533)))+(((cj2)*(x1524)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1531)))+(((IkReal(-1.00000000000000))*(x1523)*(x1528)))+(((IkReal(-1.00000000000000))*(x1527)*(x1528)))+(((x1511)*(x1538)))+(((x1511)*(x1534))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
IkReal x1539=((IkReal(1.00000000000000))*(sj4));
if( IKabs(r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(r20) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1540=((IkReal(1.00000000000000))*(IKatan2(r21, r20)));
if( ((((r20)*(r20))+((r21)*(r21)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1539)))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1539))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1539)))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1539))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1541=IKasin(((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1539)))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1539)))))));
j6array[0]=((((IkReal(-1.00000000000000))*(x1541)))+(((IkReal(-1.00000000000000))*(x1540))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(x1541)+(((IkReal(-1.00000000000000))*(x1540))));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(0.0950000000000000))*(r21)*(IKcos(j6))))+(((IkReal(0.0950000000000000))*(r20)*(IKsin(j6))))+(((IkReal(-0.135500000000000))*(cj2)*(cj3)))+(((IkReal(0.135500000000000))*(sj2)*(sj3)))+(pz)+(((IkReal(-0.00400000000000000))*(sj2)))+(((IkReal(-0.158500000000000))*(cj2))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1542=(sj6)*(sj6);
IkReal x1543=(cj6)*(cj6);
IkReal x1544=((IkReal(1.00000000000000))*(x1542));
IkReal x1545=((IkReal(1.00000000000000))*(x1543));
IkReal x1546=((IkReal(2.00000000000000))*(cj6)*(sj6));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(x1545)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1545)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1546)))+(((IkReal(-1.00000000000000))*(x1544)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1546)))+(((IkReal(-1.00000000000000))*(x1544)*((r00)*(r00))))));
IkReal x1547=(sj6)*(sj6);
IkReal x1548=(cj6)*(cj6);
IkReal x1549=((IkReal(1.00000000000000))*(x1547));
IkReal x1550=((IkReal(1.00000000000000))*(x1548));
IkReal x1551=((IkReal(2.00000000000000))*(cj6)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1550)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1549)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1550)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1549)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1551)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1551))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1552=(cj6)*(cj6);
IkReal x1553=(sj6)*(sj6);
IkReal x1554=((r00)*(sj6));
IkReal x1555=((cj6)*(r01));
IkReal x1556=((IkReal(1.00000000000000))*(py));
IkReal x1557=((cj6)*(r11));
IkReal x1558=((IkReal(1.00000000000000))*(px));
IkReal x1559=((r10)*(sj6));
IkReal x1560=((IkReal(0.0950000000000000))*(x1552));
IkReal x1561=((IkReal(0.0950000000000000))*(x1553));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1561)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1561)*((r00)*(r00))))+(((IkReal(-0.190000000000000))*(x1554)*(x1555)))+(((IkReal(-1.00000000000000))*(x1555)*(x1558)))+(((IkReal(-0.190000000000000))*(x1557)*(x1559)))+(((IkReal(-1.00000000000000))*(x1560)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1556)*(x1559)))+(((IkReal(-1.00000000000000))*(x1556)*(x1557)))+(((IkReal(-1.00000000000000))*(x1560)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1554)*(x1558)))));
IkReal x1562=(sj6)*(sj6);
IkReal x1563=(cj6)*(cj6);
IkReal x1564=((r00)*(sj6));
IkReal x1565=((IkReal(10.5263157894737))*(px));
IkReal x1566=((cj6)*(r11));
IkReal x1567=((IkReal(10.5263157894737))*(py));
IkReal x1568=((cj6)*(r01));
IkReal x1569=((r10)*(sj6));
IkReal x1570=((IkReal(1.00000000000000))*(x1562));
IkReal x1571=((IkReal(1.00000000000000))*(x1563));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1570)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1565)*(x1568)))+(((IkReal(-1.00000000000000))*(x1571)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1571)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1566)*(x1567)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-2.00000000000000))*(x1564)*(x1568)))+(((IkReal(-1.00000000000000))*(x1564)*(x1565)))+(((IkReal(-1.00000000000000))*(x1570)*((r00)*(r00))))+(((IkReal(-2.00000000000000))*(x1566)*(x1569))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1572=((IkReal(0.158500000000000))*(sj2));
IkReal x1573=((r00)*(sj6));
IkReal x1574=((cj6)*(r01));
IkReal x1575=((cj6)*(r11));
IkReal x1576=((r10)*(sj6));
IkReal x1577=((IkReal(0.00400000000000000))*(cj2));
IkReal x1578=((IkReal(0.135500000000000))*(cj2)*(sj3));
IkReal x1579=((IkReal(0.135500000000000))*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x1576)*(x1578)))+(((IkReal(-1.00000000000000))*(x1576)*(x1579)))+(((IkReal(-0.0400000000000000))*(x1575)))+(((IkReal(-0.0400000000000000))*(x1576)))+(((x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1572)*(x1575)))+(((IkReal(-1.00000000000000))*(x1572)*(x1576)))+(((IkReal(-1.00000000000000))*(x1575)*(x1578)))+(((IkReal(-1.00000000000000))*(x1575)*(x1579)))+(((x1575)*(x1577))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-0.0400000000000000))*(x1574)))+(((IkReal(-0.0400000000000000))*(x1573)))+(((IkReal(-1.00000000000000))*(x1572)*(x1573)))+(((IkReal(-1.00000000000000))*(x1572)*(x1574)))+(((IkReal(-1.00000000000000))*(x1573)*(x1578)))+(((IkReal(-1.00000000000000))*(x1573)*(x1579)))+(((x1573)*(x1577)))+(((IkReal(-1.00000000000000))*(x1574)*(x1578)))+(((IkReal(-1.00000000000000))*(x1574)*(x1579)))+(((x1574)*(x1577))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x1576)*(x1578)))+(((IkReal(-1.00000000000000))*(x1576)*(x1579)))+(((IkReal(-0.0400000000000000))*(x1575)))+(((IkReal(-0.0400000000000000))*(x1576)))+(((x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1572)*(x1575)))+(((IkReal(-1.00000000000000))*(x1572)*(x1576)))+(((IkReal(-1.00000000000000))*(x1575)*(x1578)))+(((IkReal(-1.00000000000000))*(x1575)*(x1579)))+(((x1575)*(x1577)))))), ((gconst1)*(((((IkReal(-0.0400000000000000))*(x1574)))+(((IkReal(-0.0400000000000000))*(x1573)))+(((IkReal(-1.00000000000000))*(x1572)*(x1573)))+(((IkReal(-1.00000000000000))*(x1572)*(x1574)))+(((IkReal(-1.00000000000000))*(x1573)*(x1578)))+(((IkReal(-1.00000000000000))*(x1573)*(x1579)))+(((x1573)*(x1577)))+(((IkReal(-1.00000000000000))*(x1574)*(x1578)))+(((IkReal(-1.00000000000000))*(x1574)*(x1579)))+(((x1574)*(x1577)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1580=IKsin(j1);
IkReal x1581=IKcos(j1);
IkReal x1582=((IkReal(0.0950000000000000))*(r01));
IkReal x1583=((IkReal(1.00000000000000))*(r11));
IkReal x1584=((IkReal(1.00000000000000))*(cj2));
IkReal x1585=((IkReal(0.0950000000000000))*(r11));
IkReal x1586=((IkReal(0.0950000000000000))*(sj6));
IkReal x1587=((cj3)*(sj2));
IkReal x1588=((cj6)*(x1581));
IkReal x1589=((cj6)*(x1580));
IkReal x1590=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x1591=((r00)*(x1581));
IkReal x1592=((r00)*(x1580));
IkReal x1593=((IkReal(1.00000000000000))*(x1581));
evalcond[0]=((((r01)*(x1589)))+(((IkReal(-1.00000000000000))*(x1581)*(x1590)))+(((sj6)*(x1592)))+(((IkReal(-1.00000000000000))*(x1583)*(x1588))));
evalcond[1]=((((x1586)*(x1592)))+(((IkReal(-1.00000000000000))*(x1585)*(x1588)))+(((IkReal(-1.00000000000000))*(py)*(x1593)))+(((x1582)*(x1589)))+(((IkReal(-1.00000000000000))*(r10)*(x1581)*(x1586)))+(((px)*(x1580))));
evalcond[2]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(x1585)*(x1589)))+(((IkReal(-1.00000000000000))*(r10)*(x1580)*(x1586)))+(((IkReal(0.135500000000000))*(x1587)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1580)))+(((IkReal(-1.00000000000000))*(px)*(x1593)))+(((IkReal(-1.00000000000000))*(x1586)*(x1591)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(x1582)*(x1588))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1580)*(x1590)))+(((IkReal(-1.00000000000000))*(cj4)*(x1587)))+(((IkReal(-1.00000000000000))*(cj4)*(sj3)*(x1584)))+(((IkReal(-1.00000000000000))*(r01)*(x1588)))+(((IkReal(-1.00000000000000))*(sj6)*(x1591)))+(((sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1584)))+(((IkReal(-1.00000000000000))*(x1583)*(x1589))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x1594=((cj6)*(sj1));
IkReal x1595=((r22)*(sj6));
IkReal x1596=((cj1)*(r12));
IkReal x1597=((r21)*(sj6));
gconst4=IKsign(((((cj6)*(r20)*(x1596)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r00)*(r22)*(x1594)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1594)))+(((cj1)*(r11)*(x1595)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1595)))+(((r02)*(sj1)*(x1597)))+(((IkReal(-1.00000000000000))*(x1596)*(x1597)))));
IkReal x1598=((cj6)*(sj1));
IkReal x1599=((r22)*(sj6));
IkReal x1600=((cj1)*(r12));
IkReal x1601=((r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1600)*(x1601)))+(((r02)*(sj1)*(x1601)))+(((cj6)*(r20)*(x1600)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r00)*(r22)*(x1598)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1598)))+(((cj1)*(r11)*(x1599)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1599))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1602=((IkReal(1.00000000000000))*(sj2));
IkReal x1603=((cj3)*(cj4));
IkReal x1604=((r21)*(sj6));
IkReal x1605=((cj2)*(cj4));
IkReal x1606=((r22)*(sj3));
IkReal x1607=((cj6)*(r20));
IkReal x1608=((sj3)*(x1607));
IkReal x1609=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst3)*(((((r22)*(sj2)*(x1603)))+(((IkReal(-1.00000000000000))*(sj4)*(x1602)*(x1606)))+(((r22)*(x1609)))+(((x1605)*(x1606))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((sj2)*(sj3)*(sj4)*(x1604)))+(((IkReal(-1.00000000000000))*(sj3)*(x1604)*(x1605)))+(((IkReal(-1.00000000000000))*(sj4)*(x1602)*(x1608)))+(((IkReal(-1.00000000000000))*(x1604)*(x1609)))+(((x1607)*(x1609)))+(((sj2)*(x1603)*(x1607)))+(((x1605)*(x1608)))+(((IkReal(-1.00000000000000))*(x1602)*(x1603)*(x1604))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((r22)*(sj2)*(x1603)))+(((IkReal(-1.00000000000000))*(sj4)*(x1602)*(x1606)))+(((r22)*(x1609)))+(((x1605)*(x1606)))))), ((gconst3)*(((((sj2)*(sj3)*(sj4)*(x1604)))+(((IkReal(-1.00000000000000))*(sj3)*(x1604)*(x1605)))+(((IkReal(-1.00000000000000))*(sj4)*(x1602)*(x1608)))+(((IkReal(-1.00000000000000))*(x1604)*(x1609)))+(((x1607)*(x1609)))+(((sj2)*(x1603)*(x1607)))+(((x1605)*(x1608)))+(((IkReal(-1.00000000000000))*(x1602)*(x1603)*(x1604)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1610=IKsin(j5);
IkReal x1611=IKcos(j5);
IkReal x1612=((r01)*(sj1));
IkReal x1613=((cj4)*(sj2));
IkReal x1614=((IkReal(1.00000000000000))*(r12));
IkReal x1615=((cj6)*(r00));
IkReal x1616=((cj2)*(sj3));
IkReal x1617=((IkReal(1.00000000000000))*(sj3));
IkReal x1618=((IkReal(1.00000000000000))*(sj4));
IkReal x1619=((r11)*(sj6));
IkReal x1620=((IkReal(1.00000000000000))*(cj6));
IkReal x1621=((cj2)*(cj3));
IkReal x1622=((r01)*(sj6));
IkReal x1623=((cj1)*(cj6)*(r10));
IkReal x1624=((sj6)*(x1610));
IkReal x1625=((sj1)*(x1611));
IkReal x1626=((sj1)*(x1610));
IkReal x1627=((cj1)*(x1611));
IkReal x1628=((IkReal(1.00000000000000))*(cj1)*(x1610));
IkReal x1629=((IkReal(1.00000000000000))*(sj6)*(x1611));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1610)*(x1620)))+(((r21)*(x1624)))+(((r22)*(x1611))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x1629)))+(((cj6)*(r20)*(x1611)))+(((cj4)*(x1616)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1617)))+(((sj4)*(x1621)))+(((cj3)*(x1613)))+(((r22)*(x1610))));
evalcond[2]=((((r02)*(x1626)))+(((x1615)*(x1625)))+(((x1619)*(x1627)))+(((IkReal(-1.00000000000000))*(x1612)*(x1629)))+(((IkReal(-1.00000000000000))*(cj1)*(x1610)*(x1614)))+(((IkReal(-1.00000000000000))*(r10)*(x1620)*(x1627))));
evalcond[3]=((((cj1)*(x1610)*(x1615)))+(((IkReal(-1.00000000000000))*(x1622)*(x1628)))+(((IkReal(-1.00000000000000))*(x1614)*(x1625)))+(((cj6)*(r10)*(x1626)))+(((IkReal(-1.00000000000000))*(r02)*(x1627)))+(((IkReal(-1.00000000000000))*(x1619)*(x1626))));
evalcond[4]=((IkReal(1.00000000000000))+(((r02)*(x1625)))+(((IkReal(-1.00000000000000))*(x1619)*(x1628)))+(((IkReal(-1.00000000000000))*(x1615)*(x1626)))+(((IkReal(-1.00000000000000))*(x1614)*(x1627)))+(((x1612)*(x1624)))+(((x1610)*(x1623))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1616)*(x1618)))+(((IkReal(-1.00000000000000))*(x1615)*(x1627)))+(((x1622)*(x1627)))+(((cj4)*(x1621)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1618)))+(((IkReal(-1.00000000000000))*(r02)*(x1628)))+(((IkReal(-1.00000000000000))*(x1614)*(x1626)))+(((x1619)*(x1625)))+(((IkReal(-1.00000000000000))*(x1613)*(x1617)))+(((IkReal(-1.00000000000000))*(r10)*(x1620)*(x1625))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(r22)), ((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1630=IKsin(j5);
IkReal x1631=IKcos(j5);
IkReal x1632=((r01)*(sj1));
IkReal x1633=((cj4)*(sj2));
IkReal x1634=((IkReal(1.00000000000000))*(r12));
IkReal x1635=((cj6)*(r00));
IkReal x1636=((cj2)*(sj3));
IkReal x1637=((IkReal(1.00000000000000))*(sj3));
IkReal x1638=((IkReal(1.00000000000000))*(sj4));
IkReal x1639=((r11)*(sj6));
IkReal x1640=((IkReal(1.00000000000000))*(cj6));
IkReal x1641=((cj2)*(cj3));
IkReal x1642=((r01)*(sj6));
IkReal x1643=((cj1)*(cj6)*(r10));
IkReal x1644=((sj6)*(x1630));
IkReal x1645=((sj1)*(x1631));
IkReal x1646=((sj1)*(x1630));
IkReal x1647=((cj1)*(x1631));
IkReal x1648=((IkReal(1.00000000000000))*(cj1)*(x1630));
IkReal x1649=((IkReal(1.00000000000000))*(sj6)*(x1631));
evalcond[0]=((((r21)*(x1644)))+(((IkReal(-1.00000000000000))*(r20)*(x1630)*(x1640)))+(((r22)*(x1631))));
evalcond[1]=((((cj3)*(x1633)))+(((IkReal(-1.00000000000000))*(r21)*(x1649)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1637)))+(((cj6)*(r20)*(x1631)))+(((sj4)*(x1641)))+(((r22)*(x1630)))+(((cj4)*(x1636))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1630)*(x1634)))+(((r02)*(x1646)))+(((IkReal(-1.00000000000000))*(r10)*(x1640)*(x1647)))+(((x1635)*(x1645)))+(((x1639)*(x1647)))+(((IkReal(-1.00000000000000))*(x1632)*(x1649))));
evalcond[3]=((((cj6)*(r10)*(x1646)))+(((IkReal(-1.00000000000000))*(r02)*(x1647)))+(((cj1)*(x1630)*(x1635)))+(((IkReal(-1.00000000000000))*(x1634)*(x1645)))+(((IkReal(-1.00000000000000))*(x1642)*(x1648)))+(((IkReal(-1.00000000000000))*(x1639)*(x1646))));
evalcond[4]=((IkReal(1.00000000000000))+(((r02)*(x1645)))+(((IkReal(-1.00000000000000))*(x1634)*(x1647)))+(((IkReal(-1.00000000000000))*(x1635)*(x1646)))+(((IkReal(-1.00000000000000))*(x1639)*(x1648)))+(((x1632)*(x1644)))+(((x1630)*(x1643))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1634)*(x1646)))+(((IkReal(-1.00000000000000))*(x1635)*(x1647)))+(((IkReal(-1.00000000000000))*(x1633)*(x1637)))+(((IkReal(-1.00000000000000))*(r10)*(x1640)*(x1645)))+(((IkReal(-1.00000000000000))*(x1636)*(x1638)))+(((x1642)*(x1647)))+(((x1639)*(x1645)))+(((IkReal(-1.00000000000000))*(r02)*(x1648)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1638)))+(((cj4)*(x1641))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1650=((cj6)*(r11));
IkReal x1651=((r00)*(sj6));
IkReal x1652=((r10)*(sj6));
IkReal x1653=((cj6)*(r01));
IkReal x1654=((cj2)*(cj3)*(sj4));
IkReal x1655=((cj3)*(cj4)*(sj2));
IkReal x1656=((cj2)*(cj4)*(sj3));
IkReal x1657=((IkReal(1.00000000000000))*(sj2)*(sj3)*(sj4));
if( IKabs(((gconst0)*(((((x1650)*(x1656)))+(((x1650)*(x1655)))+(((x1650)*(x1654)))+(((IkReal(-1.00000000000000))*(x1652)*(x1657)))+(((IkReal(-1.00000000000000))*(x1650)*(x1657)))+(((x1652)*(x1656)))+(((x1652)*(x1654)))+(((x1652)*(x1655))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x1653)*(x1657)))+(((x1651)*(x1654)))+(((x1651)*(x1655)))+(((x1651)*(x1656)))+(((x1653)*(x1654)))+(((x1653)*(x1655)))+(((x1653)*(x1656)))+(((IkReal(-1.00000000000000))*(x1651)*(x1657))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((x1650)*(x1656)))+(((x1650)*(x1655)))+(((x1650)*(x1654)))+(((IkReal(-1.00000000000000))*(x1652)*(x1657)))+(((IkReal(-1.00000000000000))*(x1650)*(x1657)))+(((x1652)*(x1656)))+(((x1652)*(x1654)))+(((x1652)*(x1655)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(x1653)*(x1657)))+(((x1651)*(x1654)))+(((x1651)*(x1655)))+(((x1651)*(x1656)))+(((x1653)*(x1654)))+(((x1653)*(x1655)))+(((x1653)*(x1656)))+(((IkReal(-1.00000000000000))*(x1651)*(x1657)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1658=IKsin(j1);
IkReal x1659=IKcos(j1);
IkReal x1660=((IkReal(0.0950000000000000))*(r01));
IkReal x1661=((IkReal(1.00000000000000))*(r11));
IkReal x1662=((IkReal(1.00000000000000))*(cj2));
IkReal x1663=((IkReal(0.0950000000000000))*(r11));
IkReal x1664=((IkReal(0.0950000000000000))*(sj6));
IkReal x1665=((cj3)*(sj2));
IkReal x1666=((cj6)*(x1659));
IkReal x1667=((cj6)*(x1658));
IkReal x1668=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x1669=((r00)*(x1659));
IkReal x1670=((r00)*(x1658));
IkReal x1671=((IkReal(1.00000000000000))*(x1659));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1661)*(x1666)))+(((r01)*(x1667)))+(((sj6)*(x1670)))+(((IkReal(-1.00000000000000))*(x1659)*(x1668))));
evalcond[1]=((((x1660)*(x1667)))+(((px)*(x1658)))+(((IkReal(-1.00000000000000))*(py)*(x1671)))+(((IkReal(-1.00000000000000))*(x1663)*(x1666)))+(((IkReal(-1.00000000000000))*(r10)*(x1659)*(x1664)))+(((x1664)*(x1670))));
evalcond[2]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(py)*(x1658)))+(((IkReal(-1.00000000000000))*(px)*(x1671)))+(((IkReal(0.135500000000000))*(x1665)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1663)*(x1667)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r10)*(x1658)*(x1664)))+(((IkReal(-1.00000000000000))*(x1660)*(x1666)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(x1664)*(x1669))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1661)*(x1667)))+(((IkReal(-1.00000000000000))*(sj6)*(x1669)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1662)))+(((IkReal(-1.00000000000000))*(r01)*(x1666)))+(((sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj3)*(x1662)))+(((IkReal(-1.00000000000000))*(x1658)*(x1668)))+(((IkReal(-1.00000000000000))*(cj4)*(x1665))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x1672=((cj6)*(sj1));
IkReal x1673=((r22)*(sj6));
IkReal x1674=((cj1)*(r12));
IkReal x1675=((r21)*(sj6));
gconst4=IKsign(((((r00)*(r22)*(x1672)))+(((cj6)*(r20)*(x1674)))+(((IkReal(-1.00000000000000))*(x1674)*(x1675)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1672)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r02)*(sj1)*(x1675)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1673)))+(((cj1)*(r11)*(x1673)))));
IkReal x1676=((cj6)*(sj1));
IkReal x1677=((r22)*(sj6));
IkReal x1678=((cj1)*(r12));
IkReal x1679=((r21)*(sj6));
dummyeval[0]=((((r00)*(r22)*(x1676)))+(((cj6)*(r20)*(x1678)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1676)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r02)*(sj1)*(x1679)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1677)))+(((cj1)*(r11)*(x1677)))+(((IkReal(-1.00000000000000))*(x1678)*(x1679))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1680=((IkReal(1.00000000000000))*(sj2));
IkReal x1681=((cj3)*(cj4));
IkReal x1682=((r21)*(sj6));
IkReal x1683=((cj2)*(cj4));
IkReal x1684=((r22)*(sj3));
IkReal x1685=((cj6)*(r20));
IkReal x1686=((sj3)*(x1685));
IkReal x1687=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst3)*(((((r22)*(x1687)))+(((IkReal(-1.00000000000000))*(sj4)*(x1680)*(x1684)))+(((x1683)*(x1684)))+(((r22)*(sj2)*(x1681))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((sj2)*(x1681)*(x1685)))+(((sj2)*(sj3)*(sj4)*(x1682)))+(((IkReal(-1.00000000000000))*(sj4)*(x1680)*(x1686)))+(((IkReal(-1.00000000000000))*(sj3)*(x1682)*(x1683)))+(((IkReal(-1.00000000000000))*(x1682)*(x1687)))+(((IkReal(-1.00000000000000))*(x1680)*(x1681)*(x1682)))+(((x1685)*(x1687)))+(((x1683)*(x1686))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((r22)*(x1687)))+(((IkReal(-1.00000000000000))*(sj4)*(x1680)*(x1684)))+(((x1683)*(x1684)))+(((r22)*(sj2)*(x1681)))))), ((gconst3)*(((((sj2)*(x1681)*(x1685)))+(((sj2)*(sj3)*(sj4)*(x1682)))+(((IkReal(-1.00000000000000))*(sj4)*(x1680)*(x1686)))+(((IkReal(-1.00000000000000))*(sj3)*(x1682)*(x1683)))+(((IkReal(-1.00000000000000))*(x1682)*(x1687)))+(((IkReal(-1.00000000000000))*(x1680)*(x1681)*(x1682)))+(((x1685)*(x1687)))+(((x1683)*(x1686)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1688=IKsin(j5);
IkReal x1689=IKcos(j5);
IkReal x1690=((r01)*(sj1));
IkReal x1691=((cj4)*(sj2));
IkReal x1692=((IkReal(1.00000000000000))*(r12));
IkReal x1693=((cj6)*(r00));
IkReal x1694=((cj2)*(sj3));
IkReal x1695=((IkReal(1.00000000000000))*(sj3));
IkReal x1696=((IkReal(1.00000000000000))*(sj4));
IkReal x1697=((r11)*(sj6));
IkReal x1698=((IkReal(1.00000000000000))*(cj6));
IkReal x1699=((cj2)*(cj3));
IkReal x1700=((r01)*(sj6));
IkReal x1701=((cj1)*(cj6)*(r10));
IkReal x1702=((sj6)*(x1688));
IkReal x1703=((sj1)*(x1689));
IkReal x1704=((sj1)*(x1688));
IkReal x1705=((cj1)*(x1689));
IkReal x1706=((IkReal(1.00000000000000))*(cj1)*(x1688));
IkReal x1707=((IkReal(1.00000000000000))*(sj6)*(x1689));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1688)*(x1698)))+(((r22)*(x1689)))+(((r21)*(x1702))));
evalcond[1]=((((cj3)*(x1691)))+(((r22)*(x1688)))+(((IkReal(-1.00000000000000))*(r21)*(x1707)))+(((cj4)*(x1694)))+(((cj6)*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1695)))+(((sj4)*(x1699))));
evalcond[2]=((((x1697)*(x1705)))+(((x1693)*(x1703)))+(((r02)*(x1704)))+(((IkReal(-1.00000000000000))*(cj1)*(x1688)*(x1692)))+(((IkReal(-1.00000000000000))*(x1690)*(x1707)))+(((IkReal(-1.00000000000000))*(r10)*(x1698)*(x1705))));
evalcond[3]=((((cj1)*(x1688)*(x1693)))+(((IkReal(-1.00000000000000))*(x1697)*(x1704)))+(((IkReal(-1.00000000000000))*(x1700)*(x1706)))+(((cj6)*(r10)*(x1704)))+(((IkReal(-1.00000000000000))*(x1692)*(x1703)))+(((IkReal(-1.00000000000000))*(r02)*(x1705))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1690)*(x1702)))+(((x1688)*(x1701)))+(((r02)*(x1703)))+(((IkReal(-1.00000000000000))*(x1693)*(x1704)))+(((IkReal(-1.00000000000000))*(x1692)*(x1705)))+(((IkReal(-1.00000000000000))*(x1697)*(x1706))));
evalcond[5]=((((x1697)*(x1703)))+(((IkReal(-1.00000000000000))*(x1694)*(x1696)))+(((cj4)*(x1699)))+(((x1700)*(x1705)))+(((IkReal(-1.00000000000000))*(x1691)*(x1695)))+(((IkReal(-1.00000000000000))*(r02)*(x1706)))+(((IkReal(-1.00000000000000))*(r10)*(x1698)*(x1703)))+(((IkReal(-1.00000000000000))*(x1693)*(x1705)))+(((IkReal(-1.00000000000000))*(x1692)*(x1704)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1696))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(r22)), ((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1708=IKsin(j5);
IkReal x1709=IKcos(j5);
IkReal x1710=((r01)*(sj1));
IkReal x1711=((cj4)*(sj2));
IkReal x1712=((IkReal(1.00000000000000))*(r12));
IkReal x1713=((cj6)*(r00));
IkReal x1714=((cj2)*(sj3));
IkReal x1715=((IkReal(1.00000000000000))*(sj3));
IkReal x1716=((IkReal(1.00000000000000))*(sj4));
IkReal x1717=((r11)*(sj6));
IkReal x1718=((IkReal(1.00000000000000))*(cj6));
IkReal x1719=((cj2)*(cj3));
IkReal x1720=((r01)*(sj6));
IkReal x1721=((cj1)*(cj6)*(r10));
IkReal x1722=((sj6)*(x1708));
IkReal x1723=((sj1)*(x1709));
IkReal x1724=((sj1)*(x1708));
IkReal x1725=((cj1)*(x1709));
IkReal x1726=((IkReal(1.00000000000000))*(cj1)*(x1708));
IkReal x1727=((IkReal(1.00000000000000))*(sj6)*(x1709));
evalcond[0]=((((r22)*(x1709)))+(((r21)*(x1722)))+(((IkReal(-1.00000000000000))*(r20)*(x1708)*(x1718))));
evalcond[1]=((((sj4)*(x1719)))+(((r22)*(x1708)))+(((cj4)*(x1714)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1715)))+(((cj6)*(r20)*(x1709)))+(((cj3)*(x1711)))+(((IkReal(-1.00000000000000))*(r21)*(x1727))));
evalcond[2]=((((x1717)*(x1725)))+(((r02)*(x1724)))+(((IkReal(-1.00000000000000))*(x1710)*(x1727)))+(((IkReal(-1.00000000000000))*(cj1)*(x1708)*(x1712)))+(((IkReal(-1.00000000000000))*(r10)*(x1718)*(x1725)))+(((x1713)*(x1723))));
evalcond[3]=((((cj6)*(r10)*(x1724)))+(((IkReal(-1.00000000000000))*(x1717)*(x1724)))+(((IkReal(-1.00000000000000))*(r02)*(x1725)))+(((cj1)*(x1708)*(x1713)))+(((IkReal(-1.00000000000000))*(x1720)*(x1726)))+(((IkReal(-1.00000000000000))*(x1712)*(x1723))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1708)*(x1721)))+(((r02)*(x1723)))+(((x1710)*(x1722)))+(((IkReal(-1.00000000000000))*(x1717)*(x1726)))+(((IkReal(-1.00000000000000))*(x1713)*(x1724)))+(((IkReal(-1.00000000000000))*(x1712)*(x1725))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1714)*(x1716)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1716)))+(((cj4)*(x1719)))+(((x1717)*(x1723)))+(((IkReal(-1.00000000000000))*(x1711)*(x1715)))+(((x1720)*(x1725)))+(((IkReal(-1.00000000000000))*(r10)*(x1718)*(x1723)))+(((IkReal(-1.00000000000000))*(x1713)*(x1725)))+(((IkReal(-1.00000000000000))*(x1712)*(x1724)))+(((IkReal(-1.00000000000000))*(r02)*(x1726))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1728=((IkReal(1.00000000000000))*(sj2));
IkReal x1729=((cj3)*(cj4));
IkReal x1730=((r21)*(sj6));
IkReal x1731=((cj2)*(cj4));
IkReal x1732=((r22)*(sj3));
IkReal x1733=((cj6)*(r20));
IkReal x1734=((sj3)*(x1733));
IkReal x1735=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst2)*(((((x1731)*(x1732)))+(((IkReal(-1.00000000000000))*(sj4)*(x1728)*(x1732)))+(((r22)*(x1735)))+(((r22)*(sj2)*(x1729))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1731)*(x1734)))+(((IkReal(-1.00000000000000))*(sj3)*(x1730)*(x1731)))+(((IkReal(-1.00000000000000))*(sj4)*(x1728)*(x1734)))+(((IkReal(-1.00000000000000))*(x1730)*(x1735)))+(((sj2)*(sj3)*(sj4)*(x1730)))+(((x1733)*(x1735)))+(((sj2)*(x1729)*(x1733)))+(((IkReal(-1.00000000000000))*(x1728)*(x1729)*(x1730))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((x1731)*(x1732)))+(((IkReal(-1.00000000000000))*(sj4)*(x1728)*(x1732)))+(((r22)*(x1735)))+(((r22)*(sj2)*(x1729)))))), ((gconst2)*(((((x1731)*(x1734)))+(((IkReal(-1.00000000000000))*(sj3)*(x1730)*(x1731)))+(((IkReal(-1.00000000000000))*(sj4)*(x1728)*(x1734)))+(((IkReal(-1.00000000000000))*(x1730)*(x1735)))+(((sj2)*(sj3)*(sj4)*(x1730)))+(((x1733)*(x1735)))+(((sj2)*(x1729)*(x1733)))+(((IkReal(-1.00000000000000))*(x1728)*(x1729)*(x1730)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1736=IKsin(j5);
IkReal x1737=IKcos(j5);
IkReal x1738=((r21)*(sj6));
IkReal x1739=((cj6)*(r20));
evalcond[0]=((((x1736)*(x1738)))+(((r22)*(x1737)))+(((IkReal(-1.00000000000000))*(x1736)*(x1739))));
evalcond[1]=((((cj2)*(cj4)*(sj3)))+(((x1737)*(x1739)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(sj4)))+(((r22)*(x1736)))+(((IkReal(-1.00000000000000))*(x1737)*(x1738)))+(((cj2)*(cj3)*(sj4)))+(((cj3)*(cj4)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1740=(sj6)*(sj6);
IkReal x1741=(cj6)*(cj6);
IkReal x1742=((r01)*(r10));
IkReal x1743=((cj5)*(r02));
IkReal x1744=((sj5)*(x1740));
IkReal x1745=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1746=((sj5)*(x1741));
IkReal x1747=((IkReal(1.00000000000000))*(cj5)*(r12));
gconst5=IKsign(((((cj6)*(r11)*(x1743)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1747)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1747)))+(((IkReal(-1.00000000000000))*(x1745)*(x1746)))+(((x1742)*(x1746)))+(((x1742)*(x1744)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745)))+(((r10)*(sj6)*(x1743)))));
IkReal x1748=(sj6)*(sj6);
IkReal x1749=(cj6)*(cj6);
IkReal x1750=((r01)*(r10));
IkReal x1751=((cj5)*(r02));
IkReal x1752=((sj5)*(x1748));
IkReal x1753=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1754=((sj5)*(x1749));
IkReal x1755=((IkReal(1.00000000000000))*(cj5)*(r12));
dummyeval[0]=((((cj6)*(r11)*(x1751)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1755)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1755)))+(((x1750)*(x1754)))+(((x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(x1752)*(x1753)))+(((IkReal(-1.00000000000000))*(x1753)*(x1754)))+(((r10)*(sj6)*(x1751))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1756=(sj6)*(sj6);
IkReal x1757=(cj6)*(cj6);
IkReal x1758=((cj5)*(r02));
IkReal x1759=((IkReal(0.0950000000000000))*(r11));
IkReal x1760=((cj6)*(sj5));
IkReal x1761=((IkReal(0.0950000000000000))*(r10));
IkReal x1762=((r01)*(sj5));
IkReal x1763=((IkReal(1.00000000000000))*(px));
IkReal x1764=((r00)*(sj5));
IkReal x1765=((cj5)*(r12));
gconst6=IKsign(((((IkReal(-0.0950000000000000))*(cj6)*(r01)*(x1765)))+(((IkReal(-1.00000000000000))*(py)*(r00)*(x1760)))+(((IkReal(-1.00000000000000))*(x1763)*(x1765)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(sj6)*(x1763)))+(((IkReal(-1.00000000000000))*(x1757)*(x1759)*(x1764)))+(((IkReal(-0.0950000000000000))*(r00)*(sj6)*(x1765)))+(((IkReal(-1.00000000000000))*(x1756)*(x1759)*(x1764)))+(((cj6)*(x1758)*(x1759)))+(((px)*(r10)*(x1760)))+(((x1757)*(x1761)*(x1762)))+(((py)*(sj6)*(x1762)))+(((sj6)*(x1758)*(x1761)))+(((x1756)*(x1761)*(x1762)))+(((py)*(x1758)))));
IkReal x1766=(sj6)*(sj6);
IkReal x1767=(cj6)*(cj6);
IkReal x1768=((IkReal(10.5263157894737))*(sj5));
IkReal x1769=((r01)*(r10));
IkReal x1770=((cj5)*(r12));
IkReal x1771=((cj5)*(r02));
IkReal x1772=((sj5)*(x1766));
IkReal x1773=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1774=((sj5)*(x1767));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((py)*(r01)*(sj6)*(x1768)))+(((cj6)*(r11)*(x1771)))+(((IkReal(-1.00000000000000))*(x1773)*(x1774)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(sj6)*(x1768)))+(((r10)*(sj6)*(x1771)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1770)))+(((IkReal(10.5263157894737))*(py)*(x1771)))+(((cj6)*(px)*(r10)*(x1768)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1770)))+(((IkReal(-1.00000000000000))*(cj6)*(py)*(r00)*(x1768)))+(((IkReal(-10.5263157894737))*(px)*(x1770)))+(((x1769)*(x1772)))+(((x1769)*(x1774))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1775=((IkReal(0.0950000000000000))*(cj6));
IkReal x1776=((IkReal(0.0950000000000000))*(sj6));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r10)*(x1776)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(x1775))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r00)*(x1776)))+(((IkReal(-1.00000000000000))*(r01)*(x1775))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(r10)*(x1776)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(x1775)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r00)*(x1776)))+(((IkReal(-1.00000000000000))*(r01)*(x1775)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1777=IKsin(j1);
IkReal x1778=IKcos(j1);
IkReal x1779=((cj5)*(sj6));
IkReal x1780=((IkReal(1.00000000000000))*(cj6));
IkReal x1781=((r10)*(sj5));
IkReal x1782=((r12)*(sj5));
IkReal x1783=((r10)*(sj6));
IkReal x1784=((sj3)*(sj4));
IkReal x1785=((IkReal(1.00000000000000))*(cj2));
IkReal x1786=((cj5)*(r00));
IkReal x1787=((sj5)*(sj6));
IkReal x1788=((cj5)*(r10));
IkReal x1789=((IkReal(0.0950000000000000))*(cj6));
IkReal x1790=((r00)*(sj6));
IkReal x1791=((cj3)*(sj4));
IkReal x1792=((cj3)*(cj4));
IkReal x1793=((cj5)*(r02));
IkReal x1794=((cj5)*(r12));
IkReal x1795=((cj4)*(sj3));
IkReal x1796=((IkReal(1.00000000000000))*(sj2));
IkReal x1797=((r11)*(x1778));
IkReal x1798=((cj6)*(x1777));
IkReal x1799=((IkReal(1.00000000000000))*(x1778));
IkReal x1800=((sj5)*(x1777));
IkReal x1801=((IkReal(1.00000000000000))*(x1777));
IkReal x1802=((r01)*(x1778));
IkReal x1803=((IkReal(0.0950000000000000))*(x1777));
IkReal x1804=((IkReal(0.0950000000000000))*(x1778));
IkReal x1805=((cj6)*(x1778));
IkReal x1806=((r11)*(x1777));
evalcond[0]=((((x1777)*(x1790)))+(((IkReal(-1.00000000000000))*(x1780)*(x1797)))+(((r01)*(x1798)))+(((IkReal(-1.00000000000000))*(x1783)*(x1799))));
evalcond[1]=((((r01)*(x1777)*(x1789)))+(((px)*(x1777)))+(((IkReal(-1.00000000000000))*(x1789)*(x1797)))+(((IkReal(-1.00000000000000))*(py)*(x1799)))+(((IkReal(-1.00000000000000))*(x1783)*(x1804)))+(((x1790)*(x1803))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1778)*(x1780)*(x1788)))+(((x1779)*(x1797)))+(((r02)*(x1800)))+(((IkReal(-1.00000000000000))*(r01)*(x1779)*(x1801)))+(((x1786)*(x1798)))+(((IkReal(-1.00000000000000))*(x1782)*(x1799))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1787)*(x1799)))+(((r00)*(sj5)*(x1805)))+(((IkReal(-1.00000000000000))*(x1794)*(x1801)))+(((IkReal(-1.00000000000000))*(x1793)*(x1799)))+(((IkReal(-1.00000000000000))*(r11)*(x1787)*(x1801)))+(((x1781)*(x1798))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x1780)*(x1800)))+(((r01)*(x1777)*(x1787)))+(((x1777)*(x1793)))+(((IkReal(-1.00000000000000))*(x1787)*(x1797)))+(((x1781)*(x1805)))+(((IkReal(-1.00000000000000))*(x1794)*(x1799))));
evalcond[5]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(x1789)*(x1806)))+(((IkReal(-1.00000000000000))*(x1789)*(x1802)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x1801)))+(((IkReal(0.135500000000000))*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(x1783)*(x1803)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1799)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(x1790)*(x1804))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1792)*(x1796)))+(((IkReal(-1.00000000000000))*(x1790)*(x1799)))+(((sj2)*(x1784)))+(((IkReal(-1.00000000000000))*(x1780)*(x1802)))+(((IkReal(-1.00000000000000))*(x1780)*(x1806)))+(((IkReal(-1.00000000000000))*(x1783)*(x1801)))+(((IkReal(-1.00000000000000))*(x1785)*(x1795)))+(((IkReal(-1.00000000000000))*(x1785)*(x1791))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1795)*(x1796)))+(((IkReal(-1.00000000000000))*(x1778)*(x1780)*(x1786)))+(((x1779)*(x1806)))+(((x1779)*(x1802)))+(((IkReal(-1.00000000000000))*(x1782)*(x1801)))+(((cj2)*(x1792)))+(((IkReal(-1.00000000000000))*(x1777)*(x1780)*(x1788)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1799)))+(((IkReal(-1.00000000000000))*(x1784)*(x1785)))+(((IkReal(-1.00000000000000))*(x1791)*(x1796))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1807=((IkReal(1.00000000000000))*(sj6));
IkReal x1808=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r10)*(x1807)))+(((IkReal(-1.00000000000000))*(r11)*(x1808))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x1807)))+(((IkReal(-1.00000000000000))*(r01)*(x1808))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r10)*(x1807)))+(((IkReal(-1.00000000000000))*(r11)*(x1808)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x1807)))+(((IkReal(-1.00000000000000))*(r01)*(x1808)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1809=IKsin(j1);
IkReal x1810=IKcos(j1);
IkReal x1811=((cj5)*(sj6));
IkReal x1812=((IkReal(1.00000000000000))*(cj6));
IkReal x1813=((r10)*(sj5));
IkReal x1814=((r12)*(sj5));
IkReal x1815=((r10)*(sj6));
IkReal x1816=((sj3)*(sj4));
IkReal x1817=((IkReal(1.00000000000000))*(cj2));
IkReal x1818=((cj5)*(r00));
IkReal x1819=((sj5)*(sj6));
IkReal x1820=((cj5)*(r10));
IkReal x1821=((IkReal(0.0950000000000000))*(cj6));
IkReal x1822=((r00)*(sj6));
IkReal x1823=((cj3)*(sj4));
IkReal x1824=((cj3)*(cj4));
IkReal x1825=((cj5)*(r02));
IkReal x1826=((cj5)*(r12));
IkReal x1827=((cj4)*(sj3));
IkReal x1828=((IkReal(1.00000000000000))*(sj2));
IkReal x1829=((r11)*(x1810));
IkReal x1830=((cj6)*(x1809));
IkReal x1831=((IkReal(1.00000000000000))*(x1810));
IkReal x1832=((sj5)*(x1809));
IkReal x1833=((IkReal(1.00000000000000))*(x1809));
IkReal x1834=((r01)*(x1810));
IkReal x1835=((IkReal(0.0950000000000000))*(x1809));
IkReal x1836=((IkReal(0.0950000000000000))*(x1810));
IkReal x1837=((cj6)*(x1810));
IkReal x1838=((r11)*(x1809));
evalcond[0]=((((r01)*(x1830)))+(((IkReal(-1.00000000000000))*(x1812)*(x1829)))+(((x1809)*(x1822)))+(((IkReal(-1.00000000000000))*(x1815)*(x1831))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1821)*(x1829)))+(((r01)*(x1809)*(x1821)))+(((IkReal(-1.00000000000000))*(py)*(x1831)))+(((x1822)*(x1835)))+(((px)*(x1809)))+(((IkReal(-1.00000000000000))*(x1815)*(x1836))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1810)*(x1812)*(x1820)))+(((r02)*(x1832)))+(((x1811)*(x1829)))+(((x1818)*(x1830)))+(((IkReal(-1.00000000000000))*(r01)*(x1811)*(x1833)))+(((IkReal(-1.00000000000000))*(x1814)*(x1831))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1819)*(x1833)))+(((IkReal(-1.00000000000000))*(x1825)*(x1831)))+(((r00)*(sj5)*(x1837)))+(((IkReal(-1.00000000000000))*(x1826)*(x1833)))+(((x1813)*(x1830)))+(((IkReal(-1.00000000000000))*(r01)*(x1819)*(x1831))));
evalcond[4]=((IkReal(1.00000000000000))+(((r01)*(x1809)*(x1819)))+(((IkReal(-1.00000000000000))*(x1819)*(x1829)))+(((IkReal(-1.00000000000000))*(x1826)*(x1831)))+(((x1813)*(x1837)))+(((x1809)*(x1825)))+(((IkReal(-1.00000000000000))*(r00)*(x1812)*(x1832))));
evalcond[5]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(py)*(x1833)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(0.135500000000000))*(cj3)*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1822)*(x1836)))+(((IkReal(-1.00000000000000))*(px)*(x1831)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(x1821)*(x1834)))+(((IkReal(-1.00000000000000))*(x1821)*(x1838)))+(((IkReal(-1.00000000000000))*(x1815)*(x1835))));
evalcond[6]=((((sj2)*(x1816)))+(((IkReal(-1.00000000000000))*(x1817)*(x1827)))+(((IkReal(-1.00000000000000))*(x1817)*(x1823)))+(((IkReal(-1.00000000000000))*(x1812)*(x1834)))+(((IkReal(-1.00000000000000))*(x1812)*(x1838)))+(((IkReal(-1.00000000000000))*(x1822)*(x1831)))+(((IkReal(-1.00000000000000))*(x1824)*(x1828)))+(((IkReal(-1.00000000000000))*(x1815)*(x1833))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1810)*(x1812)*(x1818)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1831)))+(((x1811)*(x1838)))+(((x1811)*(x1834)))+(((IkReal(-1.00000000000000))*(x1816)*(x1817)))+(((IkReal(-1.00000000000000))*(x1827)*(x1828)))+(((cj2)*(x1824)))+(((IkReal(-1.00000000000000))*(x1823)*(x1828)))+(((IkReal(-1.00000000000000))*(x1809)*(x1812)*(x1820)))+(((IkReal(-1.00000000000000))*(x1814)*(x1833))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
IkReal x1839=((IkReal(1.00000000000000))*(sj4));
if( IKabs(r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(r20) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1840=((IkReal(1.00000000000000))*(IKatan2(r21, r20)));
if( ((((r20)*(r20))+((r21)*(r21)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1839)))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1839))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1839)))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1839))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1841=IKasin(((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1839)))+(((cj2)*(cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(cj4)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1839)))))));
j6array[0]=((((IkReal(-1.00000000000000))*(x1840)))+(((IkReal(-1.00000000000000))*(x1841))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1840)))+(x1841));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(0.0950000000000000))*(r21)*(IKcos(j6))))+(((IkReal(0.0950000000000000))*(r20)*(IKsin(j6))))+(((IkReal(-0.135500000000000))*(cj2)*(cj3)))+(((IkReal(0.135500000000000))*(sj2)*(sj3)))+(pz)+(((IkReal(-0.00400000000000000))*(sj2)))+(((IkReal(-0.158500000000000))*(cj2))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1842=(sj6)*(sj6);
IkReal x1843=(cj6)*(cj6);
IkReal x1844=((IkReal(1.00000000000000))*(x1842));
IkReal x1845=((IkReal(1.00000000000000))*(x1843));
IkReal x1846=((IkReal(2.00000000000000))*(cj6)*(sj6));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(x1844)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1846)))+(((IkReal(-1.00000000000000))*(x1845)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1844)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1845)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1846)))));
IkReal x1847=(sj6)*(sj6);
IkReal x1848=(cj6)*(cj6);
IkReal x1849=((IkReal(1.00000000000000))*(x1847));
IkReal x1850=((IkReal(1.00000000000000))*(x1848));
IkReal x1851=((IkReal(2.00000000000000))*(cj6)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1849)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1851)))+(((IkReal(-1.00000000000000))*(x1849)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1850)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1851)))+(((IkReal(-1.00000000000000))*(x1850)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1852=(cj6)*(cj6);
IkReal x1853=(sj6)*(sj6);
IkReal x1854=((r00)*(sj6));
IkReal x1855=((cj6)*(r01));
IkReal x1856=((IkReal(1.00000000000000))*(py));
IkReal x1857=((cj6)*(r11));
IkReal x1858=((IkReal(1.00000000000000))*(px));
IkReal x1859=((r10)*(sj6));
IkReal x1860=((IkReal(0.0950000000000000))*(x1852));
IkReal x1861=((IkReal(0.0950000000000000))*(x1853));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1860)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1860)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1861)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1856)*(x1859)))+(((IkReal(-1.00000000000000))*(x1856)*(x1857)))+(((IkReal(-0.190000000000000))*(x1857)*(x1859)))+(((IkReal(-1.00000000000000))*(x1855)*(x1858)))+(((IkReal(-1.00000000000000))*(x1861)*((r10)*(r10))))+(((IkReal(-0.190000000000000))*(x1854)*(x1855)))+(((IkReal(-1.00000000000000))*(x1854)*(x1858)))));
IkReal x1862=(sj6)*(sj6);
IkReal x1863=(cj6)*(cj6);
IkReal x1864=((r00)*(sj6));
IkReal x1865=((IkReal(10.5263157894737))*(px));
IkReal x1866=((cj6)*(r11));
IkReal x1867=((IkReal(10.5263157894737))*(py));
IkReal x1868=((cj6)*(r01));
IkReal x1869=((r10)*(sj6));
IkReal x1870=((IkReal(1.00000000000000))*(x1862));
IkReal x1871=((IkReal(1.00000000000000))*(x1863));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(x1866)*(x1867)))+(((IkReal(-1.00000000000000))*(x1867)*(x1869)))+(((IkReal(-1.00000000000000))*(x1865)*(x1868)))+(((IkReal(-1.00000000000000))*(x1870)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1871)*((r11)*(r11))))+(((IkReal(-2.00000000000000))*(x1864)*(x1868)))+(((IkReal(-2.00000000000000))*(x1866)*(x1869)))+(((IkReal(-1.00000000000000))*(x1870)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1871)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1872=((IkReal(0.158500000000000))*(sj2));
IkReal x1873=((r00)*(sj6));
IkReal x1874=((cj6)*(r01));
IkReal x1875=((cj6)*(r11));
IkReal x1876=((r10)*(sj6));
IkReal x1877=((IkReal(0.00400000000000000))*(cj2));
IkReal x1878=((IkReal(0.135500000000000))*(cj2)*(sj3));
IkReal x1879=((IkReal(0.135500000000000))*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x1872)*(x1875)))+(((IkReal(-1.00000000000000))*(x1872)*(x1876)))+(((IkReal(-1.00000000000000))*(x1876)*(x1879)))+(((IkReal(-1.00000000000000))*(x1876)*(x1878)))+(((x1876)*(x1877)))+(((IkReal(-0.0400000000000000))*(x1876)))+(((IkReal(-0.0400000000000000))*(x1875)))+(((x1875)*(x1877)))+(((IkReal(-1.00000000000000))*(x1875)*(x1878)))+(((IkReal(-1.00000000000000))*(x1875)*(x1879))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x1873)*(x1878)))+(((IkReal(-1.00000000000000))*(x1873)*(x1879)))+(((IkReal(-1.00000000000000))*(x1872)*(x1873)))+(((IkReal(-1.00000000000000))*(x1872)*(x1874)))+(((IkReal(-1.00000000000000))*(x1874)*(x1878)))+(((IkReal(-1.00000000000000))*(x1874)*(x1879)))+(((x1874)*(x1877)))+(((IkReal(-0.0400000000000000))*(x1874)))+(((IkReal(-0.0400000000000000))*(x1873)))+(((x1873)*(x1877))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x1872)*(x1875)))+(((IkReal(-1.00000000000000))*(x1872)*(x1876)))+(((IkReal(-1.00000000000000))*(x1876)*(x1879)))+(((IkReal(-1.00000000000000))*(x1876)*(x1878)))+(((x1876)*(x1877)))+(((IkReal(-0.0400000000000000))*(x1876)))+(((IkReal(-0.0400000000000000))*(x1875)))+(((x1875)*(x1877)))+(((IkReal(-1.00000000000000))*(x1875)*(x1878)))+(((IkReal(-1.00000000000000))*(x1875)*(x1879)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(x1873)*(x1878)))+(((IkReal(-1.00000000000000))*(x1873)*(x1879)))+(((IkReal(-1.00000000000000))*(x1872)*(x1873)))+(((IkReal(-1.00000000000000))*(x1872)*(x1874)))+(((IkReal(-1.00000000000000))*(x1874)*(x1878)))+(((IkReal(-1.00000000000000))*(x1874)*(x1879)))+(((x1874)*(x1877)))+(((IkReal(-0.0400000000000000))*(x1874)))+(((IkReal(-0.0400000000000000))*(x1873)))+(((x1873)*(x1877)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1880=IKsin(j1);
IkReal x1881=IKcos(j1);
IkReal x1882=((IkReal(0.0950000000000000))*(r01));
IkReal x1883=((IkReal(1.00000000000000))*(r11));
IkReal x1884=((IkReal(1.00000000000000))*(cj2));
IkReal x1885=((IkReal(0.0950000000000000))*(r11));
IkReal x1886=((IkReal(0.0950000000000000))*(sj6));
IkReal x1887=((cj3)*(sj2));
IkReal x1888=((cj6)*(x1881));
IkReal x1889=((cj6)*(x1880));
IkReal x1890=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x1891=((r00)*(x1881));
IkReal x1892=((r00)*(x1880));
IkReal x1893=((IkReal(1.00000000000000))*(x1881));
evalcond[0]=((((sj6)*(x1892)))+(((IkReal(-1.00000000000000))*(x1883)*(x1888)))+(((r01)*(x1889)))+(((IkReal(-1.00000000000000))*(x1881)*(x1890))));
evalcond[1]=((((x1886)*(x1892)))+(((x1882)*(x1889)))+(((px)*(x1880)))+(((IkReal(-1.00000000000000))*(x1885)*(x1888)))+(((IkReal(-1.00000000000000))*(r10)*(x1881)*(x1886)))+(((IkReal(-1.00000000000000))*(py)*(x1893))));
evalcond[2]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(x1882)*(x1888)))+(((IkReal(-1.00000000000000))*(px)*(x1893)))+(((IkReal(-1.00000000000000))*(py)*(x1880)))+(((IkReal(-1.00000000000000))*(r10)*(x1880)*(x1886)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1886)*(x1891)))+(((IkReal(0.135500000000000))*(x1887)))+(((IkReal(-1.00000000000000))*(x1885)*(x1889)))+(((IkReal(0.135500000000000))*(cj2)*(sj3))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1880)*(x1890)))+(((IkReal(-1.00000000000000))*(x1883)*(x1889)))+(((sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(r01)*(x1888)))+(((IkReal(-1.00000000000000))*(cj4)*(x1887)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1884)))+(((IkReal(-1.00000000000000))*(cj4)*(sj3)*(x1884)))+(((IkReal(-1.00000000000000))*(sj6)*(x1891))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x1894=((cj6)*(sj1));
IkReal x1895=((r22)*(sj6));
IkReal x1896=((cj1)*(r12));
IkReal x1897=((r21)*(sj6));
gconst4=IKsign(((((r00)*(r22)*(x1894)))+(((cj6)*(r20)*(x1896)))+(((IkReal(-1.00000000000000))*(x1896)*(x1897)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1894)))+(((cj1)*(r11)*(x1895)))+(((r02)*(sj1)*(x1897)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1895)))));
IkReal x1898=((cj6)*(sj1));
IkReal x1899=((r22)*(sj6));
IkReal x1900=((cj1)*(r12));
IkReal x1901=((r21)*(sj6));
dummyeval[0]=((((r00)*(r22)*(x1898)))+(((cj6)*(r20)*(x1900)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1898)))+(((r02)*(sj1)*(x1901)))+(((cj1)*(r11)*(x1899)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1899)))+(((IkReal(-1.00000000000000))*(x1900)*(x1901))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1902=((IkReal(1.00000000000000))*(sj2));
IkReal x1903=((cj3)*(cj4));
IkReal x1904=((r21)*(sj6));
IkReal x1905=((cj2)*(cj4));
IkReal x1906=((r22)*(sj3));
IkReal x1907=((cj6)*(r20));
IkReal x1908=((sj3)*(x1907));
IkReal x1909=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst3)*(((((r22)*(sj2)*(x1903)))+(((x1905)*(x1906)))+(((r22)*(x1909)))+(((IkReal(-1.00000000000000))*(sj4)*(x1902)*(x1906))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1904)*(x1909)))+(((IkReal(-1.00000000000000))*(x1902)*(x1903)*(x1904)))+(((x1905)*(x1908)))+(((IkReal(-1.00000000000000))*(sj3)*(x1904)*(x1905)))+(((IkReal(-1.00000000000000))*(sj4)*(x1902)*(x1908)))+(((sj2)*(sj3)*(sj4)*(x1904)))+(((sj2)*(x1903)*(x1907)))+(((x1907)*(x1909))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((r22)*(sj2)*(x1903)))+(((x1905)*(x1906)))+(((r22)*(x1909)))+(((IkReal(-1.00000000000000))*(sj4)*(x1902)*(x1906)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x1904)*(x1909)))+(((IkReal(-1.00000000000000))*(x1902)*(x1903)*(x1904)))+(((x1905)*(x1908)))+(((IkReal(-1.00000000000000))*(sj3)*(x1904)*(x1905)))+(((IkReal(-1.00000000000000))*(sj4)*(x1902)*(x1908)))+(((sj2)*(sj3)*(sj4)*(x1904)))+(((sj2)*(x1903)*(x1907)))+(((x1907)*(x1909)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1910=IKsin(j5);
IkReal x1911=IKcos(j5);
IkReal x1912=((r01)*(sj1));
IkReal x1913=((cj4)*(sj2));
IkReal x1914=((IkReal(1.00000000000000))*(r12));
IkReal x1915=((cj6)*(r00));
IkReal x1916=((cj2)*(sj3));
IkReal x1917=((IkReal(1.00000000000000))*(sj3));
IkReal x1918=((IkReal(1.00000000000000))*(sj4));
IkReal x1919=((r11)*(sj6));
IkReal x1920=((IkReal(1.00000000000000))*(cj6));
IkReal x1921=((cj2)*(cj3));
IkReal x1922=((r01)*(sj6));
IkReal x1923=((cj1)*(cj6)*(r10));
IkReal x1924=((sj6)*(x1910));
IkReal x1925=((sj1)*(x1911));
IkReal x1926=((sj1)*(x1910));
IkReal x1927=((cj1)*(x1911));
IkReal x1928=((IkReal(1.00000000000000))*(cj1)*(x1910));
IkReal x1929=((IkReal(1.00000000000000))*(sj6)*(x1911));
evalcond[0]=((((r22)*(x1911)))+(((r21)*(x1924)))+(((IkReal(-1.00000000000000))*(r20)*(x1910)*(x1920))));
evalcond[1]=((((sj4)*(x1921)))+(((cj6)*(r20)*(x1911)))+(((cj3)*(x1913)))+(((IkReal(-1.00000000000000))*(r21)*(x1929)))+(((r22)*(x1910)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1917)))+(((cj4)*(x1916))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1912)*(x1929)))+(((r02)*(x1926)))+(((IkReal(-1.00000000000000))*(cj1)*(x1910)*(x1914)))+(((IkReal(-1.00000000000000))*(r10)*(x1920)*(x1927)))+(((x1915)*(x1925)))+(((x1919)*(x1927))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1922)*(x1928)))+(((IkReal(-1.00000000000000))*(x1914)*(x1925)))+(((cj1)*(x1910)*(x1915)))+(((IkReal(-1.00000000000000))*(r02)*(x1927)))+(((IkReal(-1.00000000000000))*(x1919)*(x1926)))+(((cj6)*(r10)*(x1926))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1915)*(x1926)))+(((IkReal(-1.00000000000000))*(x1914)*(x1927)))+(((r02)*(x1925)))+(((x1910)*(x1923)))+(((IkReal(-1.00000000000000))*(x1919)*(x1928)))+(((x1912)*(x1924))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1915)*(x1927)))+(((cj4)*(x1921)))+(((IkReal(-1.00000000000000))*(x1914)*(x1926)))+(((IkReal(-1.00000000000000))*(r10)*(x1920)*(x1925)))+(((IkReal(-1.00000000000000))*(x1913)*(x1917)))+(((IkReal(-1.00000000000000))*(r02)*(x1928)))+(((x1919)*(x1925)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1918)))+(((IkReal(-1.00000000000000))*(x1916)*(x1918)))+(((x1922)*(x1927))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(r22)), ((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1930=IKsin(j5);
IkReal x1931=IKcos(j5);
IkReal x1932=((r01)*(sj1));
IkReal x1933=((cj4)*(sj2));
IkReal x1934=((IkReal(1.00000000000000))*(r12));
IkReal x1935=((cj6)*(r00));
IkReal x1936=((cj2)*(sj3));
IkReal x1937=((IkReal(1.00000000000000))*(sj3));
IkReal x1938=((IkReal(1.00000000000000))*(sj4));
IkReal x1939=((r11)*(sj6));
IkReal x1940=((IkReal(1.00000000000000))*(cj6));
IkReal x1941=((cj2)*(cj3));
IkReal x1942=((r01)*(sj6));
IkReal x1943=((cj1)*(cj6)*(r10));
IkReal x1944=((sj6)*(x1930));
IkReal x1945=((sj1)*(x1931));
IkReal x1946=((sj1)*(x1930));
IkReal x1947=((cj1)*(x1931));
IkReal x1948=((IkReal(1.00000000000000))*(cj1)*(x1930));
IkReal x1949=((IkReal(1.00000000000000))*(sj6)*(x1931));
evalcond[0]=((((r22)*(x1931)))+(((r21)*(x1944)))+(((IkReal(-1.00000000000000))*(r20)*(x1930)*(x1940))));
evalcond[1]=((((cj6)*(r20)*(x1931)))+(((IkReal(-1.00000000000000))*(r21)*(x1949)))+(((cj4)*(x1936)))+(((cj3)*(x1933)))+(((r22)*(x1930)))+(((sj4)*(x1941)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1937))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1940)*(x1947)))+(((x1939)*(x1947)))+(((x1935)*(x1945)))+(((IkReal(-1.00000000000000))*(cj1)*(x1930)*(x1934)))+(((IkReal(-1.00000000000000))*(x1932)*(x1949)))+(((r02)*(x1946))));
evalcond[3]=((((cj1)*(x1930)*(x1935)))+(((IkReal(-1.00000000000000))*(x1942)*(x1948)))+(((IkReal(-1.00000000000000))*(r02)*(x1947)))+(((IkReal(-1.00000000000000))*(x1934)*(x1945)))+(((cj6)*(r10)*(x1946)))+(((IkReal(-1.00000000000000))*(x1939)*(x1946))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1935)*(x1946)))+(((x1932)*(x1944)))+(((IkReal(-1.00000000000000))*(x1939)*(x1948)))+(((x1930)*(x1943)))+(((IkReal(-1.00000000000000))*(x1934)*(x1947)))+(((r02)*(x1945))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1940)*(x1945)))+(((IkReal(-1.00000000000000))*(x1933)*(x1937)))+(((x1939)*(x1945)))+(((IkReal(-1.00000000000000))*(r02)*(x1948)))+(((IkReal(-1.00000000000000))*(x1935)*(x1947)))+(((cj4)*(x1941)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1938)))+(((x1942)*(x1947)))+(((IkReal(-1.00000000000000))*(x1934)*(x1946)))+(((IkReal(-1.00000000000000))*(x1936)*(x1938))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1950=((cj6)*(r11));
IkReal x1951=((r00)*(sj6));
IkReal x1952=((r10)*(sj6));
IkReal x1953=((cj6)*(r01));
IkReal x1954=((cj2)*(cj3)*(sj4));
IkReal x1955=((cj3)*(cj4)*(sj2));
IkReal x1956=((cj2)*(cj4)*(sj3));
IkReal x1957=((IkReal(1.00000000000000))*(sj2)*(sj3)*(sj4));
if( IKabs(((gconst0)*(((((x1952)*(x1955)))+(((x1952)*(x1954)))+(((x1952)*(x1956)))+(((IkReal(-1.00000000000000))*(x1952)*(x1957)))+(((IkReal(-1.00000000000000))*(x1950)*(x1957)))+(((x1950)*(x1955)))+(((x1950)*(x1954)))+(((x1950)*(x1956))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x1951)*(x1955)))+(((x1951)*(x1954)))+(((x1951)*(x1956)))+(((IkReal(-1.00000000000000))*(x1951)*(x1957)))+(((IkReal(-1.00000000000000))*(x1953)*(x1957)))+(((x1953)*(x1956)))+(((x1953)*(x1955)))+(((x1953)*(x1954))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((x1952)*(x1955)))+(((x1952)*(x1954)))+(((x1952)*(x1956)))+(((IkReal(-1.00000000000000))*(x1952)*(x1957)))+(((IkReal(-1.00000000000000))*(x1950)*(x1957)))+(((x1950)*(x1955)))+(((x1950)*(x1954)))+(((x1950)*(x1956)))))), ((gconst0)*(((((x1951)*(x1955)))+(((x1951)*(x1954)))+(((x1951)*(x1956)))+(((IkReal(-1.00000000000000))*(x1951)*(x1957)))+(((IkReal(-1.00000000000000))*(x1953)*(x1957)))+(((x1953)*(x1956)))+(((x1953)*(x1955)))+(((x1953)*(x1954)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1958=IKsin(j1);
IkReal x1959=IKcos(j1);
IkReal x1960=((IkReal(0.0950000000000000))*(r01));
IkReal x1961=((IkReal(1.00000000000000))*(r11));
IkReal x1962=((IkReal(1.00000000000000))*(cj2));
IkReal x1963=((IkReal(0.0950000000000000))*(r11));
IkReal x1964=((IkReal(0.0950000000000000))*(sj6));
IkReal x1965=((cj3)*(sj2));
IkReal x1966=((cj6)*(x1959));
IkReal x1967=((cj6)*(x1958));
IkReal x1968=((IkReal(1.00000000000000))*(r10)*(sj6));
IkReal x1969=((r00)*(x1959));
IkReal x1970=((r00)*(x1958));
IkReal x1971=((IkReal(1.00000000000000))*(x1959));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1959)*(x1968)))+(((IkReal(-1.00000000000000))*(x1961)*(x1966)))+(((r01)*(x1967)))+(((sj6)*(x1970))));
evalcond[1]=((((x1964)*(x1970)))+(((IkReal(-1.00000000000000))*(r10)*(x1959)*(x1964)))+(((px)*(x1958)))+(((x1960)*(x1967)))+(((IkReal(-1.00000000000000))*(py)*(x1971)))+(((IkReal(-1.00000000000000))*(x1963)*(x1966))));
evalcond[2]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(py)*(x1958)))+(((IkReal(-1.00000000000000))*(x1964)*(x1969)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x1971)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(0.135500000000000))*(x1965)))+(((IkReal(-1.00000000000000))*(x1960)*(x1966)))+(((IkReal(-1.00000000000000))*(x1963)*(x1967)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(r10)*(x1958)*(x1964))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(sj3)*(x1962)))+(((IkReal(-1.00000000000000))*(x1958)*(x1968)))+(((IkReal(-1.00000000000000))*(sj6)*(x1969)))+(((IkReal(-1.00000000000000))*(cj4)*(x1965)))+(((IkReal(-1.00000000000000))*(r01)*(x1966)))+(((sj2)*(sj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x1961)*(x1967)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1962))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x1972=((cj6)*(sj1));
IkReal x1973=((r22)*(sj6));
IkReal x1974=((cj1)*(r12));
IkReal x1975=((r21)*(sj6));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1973)))+(((cj6)*(r20)*(x1974)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1972)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(x1974)*(x1975)))+(((r00)*(r22)*(x1972)))+(((r02)*(sj1)*(x1975)))+(((cj1)*(r11)*(x1973)))));
IkReal x1976=((cj6)*(sj1));
IkReal x1977=((r22)*(sj6));
IkReal x1978=((cj1)*(r12));
IkReal x1979=((r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1977)))+(((IkReal(-1.00000000000000))*(x1978)*(x1979)))+(((cj6)*(r20)*(x1978)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1976)))+(((IkReal(-1.00000000000000))*(cj1)*(cj6)*(r10)*(r22)))+(((r00)*(r22)*(x1976)))+(((r02)*(sj1)*(x1979)))+(((cj1)*(r11)*(x1977))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20))))));
dummyeval[0]=((((IkReal(2.00000000000000))*(cj6)*(r20)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*((r21)*(r21))*((sj6)*(sj6))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj6)*(cj6))*((r20)*(r20)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1980=((IkReal(1.00000000000000))*(sj2));
IkReal x1981=((cj3)*(cj4));
IkReal x1982=((r21)*(sj6));
IkReal x1983=((cj2)*(cj4));
IkReal x1984=((r22)*(sj3));
IkReal x1985=((cj6)*(r20));
IkReal x1986=((sj3)*(x1985));
IkReal x1987=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst3)*(((((r22)*(sj2)*(x1981)))+(((IkReal(-1.00000000000000))*(sj4)*(x1980)*(x1984)))+(((r22)*(x1987)))+(((x1983)*(x1984))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj3)*(x1982)*(x1983)))+(((IkReal(-1.00000000000000))*(sj4)*(x1980)*(x1986)))+(((IkReal(-1.00000000000000))*(x1980)*(x1981)*(x1982)))+(((sj2)*(x1981)*(x1985)))+(((sj2)*(sj3)*(sj4)*(x1982)))+(((IkReal(-1.00000000000000))*(x1982)*(x1987)))+(((x1983)*(x1986)))+(((x1985)*(x1987))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((r22)*(sj2)*(x1981)))+(((IkReal(-1.00000000000000))*(sj4)*(x1980)*(x1984)))+(((r22)*(x1987)))+(((x1983)*(x1984)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(sj3)*(x1982)*(x1983)))+(((IkReal(-1.00000000000000))*(sj4)*(x1980)*(x1986)))+(((IkReal(-1.00000000000000))*(x1980)*(x1981)*(x1982)))+(((sj2)*(x1981)*(x1985)))+(((sj2)*(sj3)*(sj4)*(x1982)))+(((IkReal(-1.00000000000000))*(x1982)*(x1987)))+(((x1983)*(x1986)))+(((x1985)*(x1987)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1988=IKsin(j5);
IkReal x1989=IKcos(j5);
IkReal x1990=((r01)*(sj1));
IkReal x1991=((cj4)*(sj2));
IkReal x1992=((IkReal(1.00000000000000))*(r12));
IkReal x1993=((cj6)*(r00));
IkReal x1994=((cj2)*(sj3));
IkReal x1995=((IkReal(1.00000000000000))*(sj3));
IkReal x1996=((IkReal(1.00000000000000))*(sj4));
IkReal x1997=((r11)*(sj6));
IkReal x1998=((IkReal(1.00000000000000))*(cj6));
IkReal x1999=((cj2)*(cj3));
IkReal x2000=((r01)*(sj6));
IkReal x2001=((cj1)*(cj6)*(r10));
IkReal x2002=((sj6)*(x1988));
IkReal x2003=((sj1)*(x1989));
IkReal x2004=((sj1)*(x1988));
IkReal x2005=((cj1)*(x1989));
IkReal x2006=((IkReal(1.00000000000000))*(cj1)*(x1988));
IkReal x2007=((IkReal(1.00000000000000))*(sj6)*(x1989));
evalcond[0]=((((r21)*(x2002)))+(((IkReal(-1.00000000000000))*(r20)*(x1988)*(x1998)))+(((r22)*(x1989))));
evalcond[1]=((((cj6)*(r20)*(x1989)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x1995)))+(((cj4)*(x1994)))+(((r22)*(x1988)))+(((IkReal(-1.00000000000000))*(r21)*(x2007)))+(((sj4)*(x1999)))+(((cj3)*(x1991))));
evalcond[2]=((((x1997)*(x2005)))+(((IkReal(-1.00000000000000))*(x1990)*(x2007)))+(((x1993)*(x2003)))+(((r02)*(x2004)))+(((IkReal(-1.00000000000000))*(r10)*(x1998)*(x2005)))+(((IkReal(-1.00000000000000))*(cj1)*(x1988)*(x1992))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x2005)))+(((IkReal(-1.00000000000000))*(x1997)*(x2004)))+(((cj6)*(r10)*(x2004)))+(((cj1)*(x1988)*(x1993)))+(((IkReal(-1.00000000000000))*(x1992)*(x2003)))+(((IkReal(-1.00000000000000))*(x2000)*(x2006))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1990)*(x2002)))+(((r02)*(x2003)))+(((IkReal(-1.00000000000000))*(x1992)*(x2005)))+(((IkReal(-1.00000000000000))*(x1997)*(x2006)))+(((IkReal(-1.00000000000000))*(x1993)*(x2004)))+(((x1988)*(x2001))));
evalcond[5]=((((x1997)*(x2003)))+(((x2000)*(x2005)))+(((IkReal(-1.00000000000000))*(x1992)*(x2004)))+(((IkReal(-1.00000000000000))*(r02)*(x2006)))+(((cj4)*(x1999)))+(((IkReal(-1.00000000000000))*(x1991)*(x1995)))+(((IkReal(-1.00000000000000))*(x1994)*(x1996)))+(((IkReal(-1.00000000000000))*(r10)*(x1998)*(x2003)))+(((IkReal(-1.00000000000000))*(x1993)*(x2005)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1996))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(r22)), ((gconst4)*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2008=IKsin(j5);
IkReal x2009=IKcos(j5);
IkReal x2010=((r01)*(sj1));
IkReal x2011=((cj4)*(sj2));
IkReal x2012=((IkReal(1.00000000000000))*(r12));
IkReal x2013=((cj6)*(r00));
IkReal x2014=((cj2)*(sj3));
IkReal x2015=((IkReal(1.00000000000000))*(sj3));
IkReal x2016=((IkReal(1.00000000000000))*(sj4));
IkReal x2017=((r11)*(sj6));
IkReal x2018=((IkReal(1.00000000000000))*(cj6));
IkReal x2019=((cj2)*(cj3));
IkReal x2020=((r01)*(sj6));
IkReal x2021=((cj1)*(cj6)*(r10));
IkReal x2022=((sj6)*(x2008));
IkReal x2023=((sj1)*(x2009));
IkReal x2024=((sj1)*(x2008));
IkReal x2025=((cj1)*(x2009));
IkReal x2026=((IkReal(1.00000000000000))*(cj1)*(x2008));
IkReal x2027=((IkReal(1.00000000000000))*(sj6)*(x2009));
evalcond[0]=((((r22)*(x2009)))+(((IkReal(-1.00000000000000))*(r20)*(x2008)*(x2018)))+(((r21)*(x2022))));
evalcond[1]=((((r22)*(x2008)))+(((IkReal(-1.00000000000000))*(sj2)*(sj4)*(x2015)))+(((cj6)*(r20)*(x2009)))+(((sj4)*(x2019)))+(((cj3)*(x2011)))+(((IkReal(-1.00000000000000))*(r21)*(x2027)))+(((cj4)*(x2014))));
evalcond[2]=((((x2017)*(x2025)))+(((IkReal(-1.00000000000000))*(x2010)*(x2027)))+(((r02)*(x2024)))+(((x2013)*(x2023)))+(((IkReal(-1.00000000000000))*(r10)*(x2018)*(x2025)))+(((IkReal(-1.00000000000000))*(cj1)*(x2008)*(x2012))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x2025)))+(((IkReal(-1.00000000000000))*(x2017)*(x2024)))+(((cj6)*(r10)*(x2024)))+(((IkReal(-1.00000000000000))*(x2020)*(x2026)))+(((cj1)*(x2008)*(x2013)))+(((IkReal(-1.00000000000000))*(x2012)*(x2023))));
evalcond[4]=((IkReal(1.00000000000000))+(((x2008)*(x2021)))+(((IkReal(-1.00000000000000))*(x2017)*(x2026)))+(((r02)*(x2023)))+(((IkReal(-1.00000000000000))*(x2013)*(x2024)))+(((x2010)*(x2022)))+(((IkReal(-1.00000000000000))*(x2012)*(x2025))));
evalcond[5]=((((x2020)*(x2025)))+(((x2017)*(x2023)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(x2026)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016)))+(((IkReal(-1.00000000000000))*(x2013)*(x2025)))+(((IkReal(-1.00000000000000))*(x2011)*(x2015)))+(((IkReal(-1.00000000000000))*(r10)*(x2018)*(x2023)))+(((IkReal(-1.00000000000000))*(x2012)*(x2024)))+(((cj4)*(x2019))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2028=((IkReal(1.00000000000000))*(sj2));
IkReal x2029=((cj3)*(cj4));
IkReal x2030=((r21)*(sj6));
IkReal x2031=((cj2)*(cj4));
IkReal x2032=((r22)*(sj3));
IkReal x2033=((cj6)*(r20));
IkReal x2034=((sj3)*(x2033));
IkReal x2035=((cj2)*(cj3)*(sj4));
if( IKabs(((gconst2)*(((((r22)*(x2035)))+(((IkReal(-1.00000000000000))*(sj4)*(x2028)*(x2032)))+(((x2031)*(x2032)))+(((r22)*(sj2)*(x2029))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(sj4)*(x2028)*(x2034)))+(((x2031)*(x2034)))+(((x2033)*(x2035)))+(((IkReal(-1.00000000000000))*(sj3)*(x2030)*(x2031)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2030)*(x2035)))+(((sj2)*(sj3)*(sj4)*(x2030)))+(((sj2)*(x2029)*(x2033))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((r22)*(x2035)))+(((IkReal(-1.00000000000000))*(sj4)*(x2028)*(x2032)))+(((x2031)*(x2032)))+(((r22)*(sj2)*(x2029)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(sj4)*(x2028)*(x2034)))+(((x2031)*(x2034)))+(((x2033)*(x2035)))+(((IkReal(-1.00000000000000))*(sj3)*(x2030)*(x2031)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2030)*(x2035)))+(((sj2)*(sj3)*(sj4)*(x2030)))+(((sj2)*(x2029)*(x2033)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2036=IKsin(j5);
IkReal x2037=IKcos(j5);
IkReal x2038=((r21)*(sj6));
IkReal x2039=((cj6)*(r20));
evalcond[0]=((((r22)*(x2037)))+(((x2036)*(x2038)))+(((IkReal(-1.00000000000000))*(x2036)*(x2039))));
evalcond[1]=((((r22)*(x2036)))+(((cj2)*(cj4)*(sj3)))+(((IkReal(-1.00000000000000))*(sj2)*(sj3)*(sj4)))+(((cj2)*(cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x2037)*(x2038)))+(((x2037)*(x2039)))+(((cj3)*(cj4)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x2040=(sj6)*(sj6);
IkReal x2041=(cj6)*(cj6);
IkReal x2042=((r01)*(r10));
IkReal x2043=((cj5)*(r02));
IkReal x2044=((sj5)*(x2040));
IkReal x2045=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x2046=((sj5)*(x2041));
IkReal x2047=((IkReal(1.00000000000000))*(cj5)*(r12));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2047)))+(((x2042)*(x2046)))+(((x2042)*(x2044)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2047)))+(((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2044)*(x2045)))+(((r10)*(sj6)*(x2043)))+(((cj6)*(r11)*(x2043)))));
IkReal x2048=(sj6)*(sj6);
IkReal x2049=(cj6)*(cj6);
IkReal x2050=((r01)*(r10));
IkReal x2051=((cj5)*(r02));
IkReal x2052=((sj5)*(x2048));
IkReal x2053=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x2054=((sj5)*(x2049));
IkReal x2055=((IkReal(1.00000000000000))*(cj5)*(r12));
dummyeval[0]=((((cj6)*(r11)*(x2051)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2055)))+(((r10)*(sj6)*(x2051)))+(((x2050)*(x2052)))+(((x2050)*(x2054)))+(((IkReal(-1.00000000000000))*(x2053)*(x2054)))+(((IkReal(-1.00000000000000))*(x2052)*(x2053)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2055))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x2056=(sj6)*(sj6);
IkReal x2057=(cj6)*(cj6);
IkReal x2058=((cj5)*(r02));
IkReal x2059=((IkReal(0.0950000000000000))*(r11));
IkReal x2060=((cj6)*(sj5));
IkReal x2061=((IkReal(0.0950000000000000))*(r10));
IkReal x2062=((r01)*(sj5));
IkReal x2063=((IkReal(1.00000000000000))*(px));
IkReal x2064=((r00)*(sj5));
IkReal x2065=((cj5)*(r12));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(py)*(r00)*(x2060)))+(((IkReal(-1.00000000000000))*(x2063)*(x2065)))+(((x2057)*(x2061)*(x2062)))+(((px)*(r10)*(x2060)))+(((cj6)*(x2058)*(x2059)))+(((x2056)*(x2061)*(x2062)))+(((py)*(sj6)*(x2062)))+(((IkReal(-1.00000000000000))*(x2057)*(x2059)*(x2064)))+(((IkReal(-0.0950000000000000))*(r00)*(sj6)*(x2065)))+(((IkReal(-0.0950000000000000))*(cj6)*(r01)*(x2065)))+(((py)*(x2058)))+(((sj6)*(x2058)*(x2061)))+(((IkReal(-1.00000000000000))*(x2056)*(x2059)*(x2064)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(sj6)*(x2063)))));
IkReal x2066=(sj6)*(sj6);
IkReal x2067=(cj6)*(cj6);
IkReal x2068=((IkReal(10.5263157894737))*(sj5));
IkReal x2069=((r01)*(r10));
IkReal x2070=((cj5)*(r12));
IkReal x2071=((cj5)*(r02));
IkReal x2072=((sj5)*(x2066));
IkReal x2073=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x2074=((sj5)*(x2067));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2070)))+(((cj6)*(px)*(r10)*(x2068)))+(((x2069)*(x2072)))+(((x2069)*(x2074)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(sj6)*(x2068)))+(((py)*(r01)*(sj6)*(x2068)))+(((IkReal(10.5263157894737))*(py)*(x2071)))+(((IkReal(-10.5263157894737))*(px)*(x2070)))+(((r10)*(sj6)*(x2071)))+(((cj6)*(r11)*(x2071)))+(((IkReal(-1.00000000000000))*(cj6)*(py)*(r00)*(x2068)))+(((IkReal(-1.00000000000000))*(x2073)*(x2074)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2070)))+(((IkReal(-1.00000000000000))*(x2072)*(x2073))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2075=((IkReal(0.0950000000000000))*(cj6));
IkReal x2076=((IkReal(0.0950000000000000))*(sj6));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r10)*(x2076)))+(((IkReal(-1.00000000000000))*(r11)*(x2075)))+(((IkReal(-1.00000000000000))*(py))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r01)*(x2075)))+(((IkReal(-1.00000000000000))*(r00)*(x2076))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(r10)*(x2076)))+(((IkReal(-1.00000000000000))*(r11)*(x2075)))+(((IkReal(-1.00000000000000))*(py)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r01)*(x2075)))+(((IkReal(-1.00000000000000))*(r00)*(x2076)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x2077=IKsin(j1);
IkReal x2078=IKcos(j1);
IkReal x2079=((cj5)*(sj6));
IkReal x2080=((IkReal(1.00000000000000))*(cj6));
IkReal x2081=((r10)*(sj5));
IkReal x2082=((r12)*(sj5));
IkReal x2083=((r10)*(sj6));
IkReal x2084=((sj3)*(sj4));
IkReal x2085=((IkReal(1.00000000000000))*(cj2));
IkReal x2086=((cj5)*(r00));
IkReal x2087=((sj5)*(sj6));
IkReal x2088=((cj5)*(r10));
IkReal x2089=((IkReal(0.0950000000000000))*(cj6));
IkReal x2090=((r00)*(sj6));
IkReal x2091=((cj3)*(sj4));
IkReal x2092=((cj3)*(cj4));
IkReal x2093=((cj5)*(r02));
IkReal x2094=((cj5)*(r12));
IkReal x2095=((cj4)*(sj3));
IkReal x2096=((IkReal(1.00000000000000))*(sj2));
IkReal x2097=((r11)*(x2078));
IkReal x2098=((cj6)*(x2077));
IkReal x2099=((IkReal(1.00000000000000))*(x2078));
IkReal x2100=((sj5)*(x2077));
IkReal x2101=((IkReal(1.00000000000000))*(x2077));
IkReal x2102=((r01)*(x2078));
IkReal x2103=((IkReal(0.0950000000000000))*(x2077));
IkReal x2104=((IkReal(0.0950000000000000))*(x2078));
IkReal x2105=((cj6)*(x2078));
IkReal x2106=((r11)*(x2077));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2083)*(x2099)))+(((x2077)*(x2090)))+(((r01)*(x2098)))+(((IkReal(-1.00000000000000))*(x2080)*(x2097))));
evalcond[1]=((((IkReal(-1.00000000000000))*(py)*(x2099)))+(((IkReal(-1.00000000000000))*(x2089)*(x2097)))+(((px)*(x2077)))+(((x2090)*(x2103)))+(((IkReal(-1.00000000000000))*(x2083)*(x2104)))+(((r01)*(x2077)*(x2089))));
evalcond[2]=((((r02)*(x2100)))+(((IkReal(-1.00000000000000))*(r01)*(x2079)*(x2101)))+(((x2079)*(x2097)))+(((IkReal(-1.00000000000000))*(x2078)*(x2080)*(x2088)))+(((IkReal(-1.00000000000000))*(x2082)*(x2099)))+(((x2086)*(x2098))));
evalcond[3]=((((r00)*(sj5)*(x2105)))+(((IkReal(-1.00000000000000))*(r11)*(x2087)*(x2101)))+(((IkReal(-1.00000000000000))*(x2093)*(x2099)))+(((IkReal(-1.00000000000000))*(x2094)*(x2101)))+(((x2081)*(x2098)))+(((IkReal(-1.00000000000000))*(r01)*(x2087)*(x2099))));
evalcond[4]=((IkReal(1.00000000000000))+(((x2081)*(x2105)))+(((IkReal(-1.00000000000000))*(x2094)*(x2099)))+(((x2077)*(x2093)))+(((IkReal(-1.00000000000000))*(r00)*(x2080)*(x2100)))+(((IkReal(-1.00000000000000))*(x2087)*(x2097)))+(((r01)*(x2077)*(x2087))));
evalcond[5]=((IkReal(0.0400000000000000))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(0.135500000000000))*(cj3)*(sj2)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2090)*(x2104)))+(((IkReal(0.135500000000000))*(cj2)*(sj3)))+(((IkReal(-1.00000000000000))*(py)*(x2101)))+(((IkReal(-1.00000000000000))*(x2083)*(x2103)))+(((IkReal(-1.00000000000000))*(px)*(x2099)))+(((IkReal(-1.00000000000000))*(x2089)*(x2106)))+(((IkReal(-1.00000000000000))*(x2089)*(x2102))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2090)*(x2099)))+(((IkReal(-1.00000000000000))*(x2080)*(x2106)))+(((IkReal(-1.00000000000000))*(x2080)*(x2102)))+(((IkReal(-1.00000000000000))*(x2092)*(x2096)))+(((IkReal(-1.00000000000000))*(x2085)*(x2091)))+(((IkReal(-1.00000000000000))*(x2085)*(x2095)))+(((sj2)*(x2084)))+(((IkReal(-1.00000000000000))*(x2083)*(x2101))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2091)*(x2096)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x2099)))+(((IkReal(-1.00000000000000))*(x2084)*(x2085)))+(((IkReal(-1.00000000000000))*(x2095)*(x2096)))+(((cj2)*(x2092)))+(((IkReal(-1.00000000000000))*(x2077)*(x2080)*(x2088)))+(((IkReal(-1.00000000000000))*(x2082)*(x2101)))+(((IkReal(-1.00000000000000))*(x2078)*(x2080)*(x2086)))+(((x2079)*(x2106)))+(((x2079)*(x2102))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2107=((IkReal(1.00000000000000))*(sj6));
IkReal x2108=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r10)*(x2107)))+(((IkReal(-1.00000000000000))*(r11)*(x2108))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x2107)))+(((IkReal(-1.00000000000000))*(r01)*(x2108))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r10)*(x2107)))+(((IkReal(-1.00000000000000))*(r11)*(x2108)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x2107)))+(((IkReal(-1.00000000000000))*(r01)*(x2108)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x2109=IKsin(j1);
IkReal x2110=IKcos(j1);
IkReal x2111=((cj5)*(sj6));
IkReal x2112=((IkReal(1.00000000000000))*(cj6));
IkReal x2113=((r10)*(sj5));
IkReal x2114=((r12)*(sj5));
IkReal x2115=((r10)*(sj6));
IkReal x2116=((sj3)*(sj4));
IkReal x2117=((IkReal(1.00000000000000))*(cj2));
IkReal x2118=((cj5)*(r00));
IkReal x2119=((sj5)*(sj6));
IkReal x2120=((cj5)*(r10));
IkReal x2121=((IkReal(0.0950000000000000))*(cj6));
IkReal x2122=((r00)*(sj6));
IkReal x2123=((cj3)*(sj4));
IkReal x2124=((cj3)*(cj4));
IkReal x2125=((cj5)*(r02));
IkReal x2126=((cj5)*(r12));
IkReal x2127=((cj4)*(sj3));
IkReal x2128=((IkReal(1.00000000000000))*(sj2));
IkReal x2129=((r11)*(x2110));
IkReal x2130=((cj6)*(x2109));
IkReal x2131=((IkReal(1.00000000000000))*(x2110));
IkReal x2132=((sj5)*(x2109));
IkReal x2133=((IkReal(1.00000000000000))*(x2109));
IkReal x2134=((r01)*(x2110));
IkReal x2135=((IkReal(0.0950000000000000))*(x2109));
IkReal x2136=((IkReal(0.0950000000000000))*(x2110));
IkReal x2137=((cj6)*(x2110));
IkReal x2138=((r11)*(x2109));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2112)*(x2129)))+(((x2109)*(x2122)))+(((r01)*(x2130)))+(((IkReal(-1.00000000000000))*(x2115)*(x2131))));
evalcond[1]=((((px)*(x2109)))+(((IkReal(-1.00000000000000))*(x2121)*(x2129)))+(((IkReal(-1.00000000000000))*(x2115)*(x2136)))+(((IkReal(-1.00000000000000))*(py)*(x2131)))+(((x2122)*(x2135)))+(((r01)*(x2109)*(x2121))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x2111)*(x2133)))+(((r02)*(x2132)))+(((IkReal(-1.00000000000000))*(x2114)*(x2131)))+(((x2118)*(x2130)))+(((IkReal(-1.00000000000000))*(x2110)*(x2112)*(x2120)))+(((x2111)*(x2129))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2125)*(x2131)))+(((IkReal(-1.00000000000000))*(r01)*(x2119)*(x2131)))+(((x2113)*(x2130)))+(((IkReal(-1.00000000000000))*(r11)*(x2119)*(x2133)))+(((IkReal(-1.00000000000000))*(x2126)*(x2133)))+(((r00)*(sj5)*(x2137))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x2112)*(x2132)))+(((x2109)*(x2125)))+(((x2113)*(x2137)))+(((IkReal(-1.00000000000000))*(x2126)*(x2131)))+(((r01)*(x2109)*(x2119)))+(((IkReal(-1.00000000000000))*(x2119)*(x2129))));
evalcond[5]=((IkReal(0.0400000000000000))+(((IkReal(-1.00000000000000))*(x2121)*(x2138)))+(((IkReal(-1.00000000000000))*(x2121)*(x2134)))+(((IkReal(-1.00000000000000))*(px)*(x2131)))+(((IkReal(0.158500000000000))*(sj2)))+(((IkReal(0.135500000000000))*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(x2115)*(x2135)))+(((IkReal(-0.00400000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x2133)))+(((IkReal(-1.00000000000000))*(x2122)*(x2136)))+(((IkReal(0.135500000000000))*(cj2)*(sj3))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2117)*(x2127)))+(((IkReal(-1.00000000000000))*(x2117)*(x2123)))+(((IkReal(-1.00000000000000))*(x2112)*(x2134)))+(((IkReal(-1.00000000000000))*(x2112)*(x2138)))+(((sj2)*(x2116)))+(((IkReal(-1.00000000000000))*(x2115)*(x2133)))+(((IkReal(-1.00000000000000))*(x2124)*(x2128)))+(((IkReal(-1.00000000000000))*(x2122)*(x2131))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2116)*(x2117)))+(((IkReal(-1.00000000000000))*(x2114)*(x2133)))+(((cj2)*(x2124)))+(((IkReal(-1.00000000000000))*(x2110)*(x2112)*(x2118)))+(((IkReal(-1.00000000000000))*(x2109)*(x2112)*(x2120)))+(((IkReal(-1.00000000000000))*(x2127)*(x2128)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x2131)))+(((x2111)*(x2138)))+(((x2111)*(x2134)))+(((IkReal(-1.00000000000000))*(x2123)*(x2128))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j1;
vinfos[0].indices[0] = _ij1[0];
vinfos[0].indices[1] = _ij1[1];
vinfos[0].maxsolutions = _nj1;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j2;
vinfos[1].indices[0] = _ij2[0];
vinfos[1].indices[1] = _ij2[1];
vinfos[1].maxsolutions = _nj2;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

template<int D>
static inline bool matrixinverse(IkReal* A)
{
    int n = D;
    int info;
    IkReal IKFAST_ALIGNED16(work[D*D*(D-1)]);
    int ipiv[D];
    dgetrf_(&n, &n, A, &n, &ipiv[0], &info);
    if( info != 0 ) {
        return false;
    }
    int worksize=D*D*(D-1);
    dgetri_(&n, A, &n, &ipiv[0], &work[0], &worksize, &info);
    return info==0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "4c240db11d8d13825e157e7dfa1ec55e"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
